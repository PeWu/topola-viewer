{"version":3,"sources":["util/analytics.ts","chart.tsx","util/error.ts","util/gedcom_util.ts","util/date_util.ts","details.tsx","datasource/load_data.ts","datasource/embedded.ts","topola.jpg","intro.tsx","menu/menu_item.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/wikitree_menu.tsx","menu/search_index.ts","menu/search.tsx","menu/top_bar.tsx","datasource/data_source.ts","app.tsx","util/error_i18n.ts","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","ChartType","zoomed","size","event","parent","select","node","scale","transform","k","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","image","a","href","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","images","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","chart","animating","rerenderRequired","zoomBehavior","this","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","args","initialRender","freezeAnimation","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","prevProps","Responsive","minWidth","className","onClick","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","saveAs","jspdf","default","doc","orientation","unit","format","addImage","save","React","contextTypes","intlShape","TopolaError","code","message","Error","pointerToId","pointer","substring","length","idToIndiMap","Map","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","undefined","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","formatDateOrRange","dateOrRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","normalizedTag","replace","joinLines","lines","line","index","properties","getData","subentry","last","eventDetails","gedcomDate","getDate","translateDate","place","filter","note","noteDetails","nameDetails","split","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","dataDetails","Details","entriesWithData","dereferenced","dereference","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","handleCors","cachedData","getItem","parse","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","PARENT_READY","postMessage","READY","GEDCOM","onMessage","GedcomLink","pathname","search","queryString","Intro","dateString","values","link","process","slice","Card","as","Content","Header","Grid","Row","Column","logo","alt","maxWidth","centered","MenuType","MenuItem","newProps","menuType","Menu","Item","Dropdown","loadFileAsText","file","evt","readAsText","isImageFileName","lower","UploadMenu","files","filesArray","value","gedcomFile","imageMap","imageFileNames","md5","location","history","state","content","Icon","htmlFor","accept","multiple","onChange","handleUpload","UrlMenu","dialogOpen","inputRef","setState","current","Modal","onClose","handleClose","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","handleUrlChange","ref","Actions","Button","secondary","primary","openDialog","loadFromUrlModal","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","key","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","s","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","famId","getFamilyId","getSet","add","wife","husband","converted","Set","convertPerson","spouse","familySpouses","Gender","husb","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","firstName","FirstName","RealName","LastNameAtBirth","lastName","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","death","PhotoData","dataStatus","matchedDate","decade","gedcomIndis","escapedId","level","newSet","WikiTreeLoginState","WikiTreeDataSource","WikiTreeMenu","wikiTreeId","standalone","preventDefault","handleIdChange","wikitreeLogo","handleSelectId","wikiTreeLink","rel","example1","enterId","example2","wikiTreeIdModal","WikiTreeLoginMenu","wikiTreeLoginState","UNKNOWN","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","returnUrl","submit","wikiTreeLoginUsername","LOGGED_IN","NOT_LOGGED_IN","checkWikiTreeLoginState","wikiTreeLogin","display","tooltip","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","LunrSearchIndex","self","use","multiLanguage","field","boost","spouseLastName","husbId","getHusbandLastName","normalizedName","normalizedSpouseLastName","query","getNameLine","trim","ScreenSize","SearchBar","searchResults","searchRef","searchIndex","birthDate","deathDate","description","getDescriptionLine","results","displaySearchResult","setValue","initialize","buildSearchIndex","initializeSearchIndex","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","DataSourceEnum","AppState","TopBar","view","screenSize","showingChart","chartTypeItems","changeView","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","showWikiTreeMenus","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","color","desktopMenus","mobileMenus","ErrorMessage","Message","negative","ErrorPopup","Portal","onDismiss","getArguments","getParam","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","App","INITIAL","showErrorPopup","chartRef","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","error","Loader","active","ERROR","LOADING","otherStateChanges","changes","componentDidUpdate","oldSouce","isNewData","loadData","setError","loadMoreFromWikitree","updateDisplay","exact","path","component","addLocaleData","locale_de","locale_en","locale_fr","locale_it","locale_pl","locale_ru","messages","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM"],"mappings":"qwtBACO,SAASA,EAAeC,EAAgBC,GAC5CC,OAAeC,KAAK,QAASH,EAAQC,G,ICsI5BG,E,oFArGZ,SAASC,EACPC,EACAC,GAEA,IAAMC,EAASC,YAAO,iBAAiBC,OAEjCC,EAAQJ,EAAMK,UAAUC,EACxBC,EAAUC,YAAI,CAAC,GAAIP,EAAOQ,YAAcV,EAAK,GAAKK,GAAS,IAC3DM,EAAUF,YAAI,CAAC,GAAIP,EAAOU,aAAeZ,EAAK,GAAKK,GAAS,IAClEF,YAAO,aACJU,KAAK,QAASb,EAAK,GAAKK,GACxBQ,KAAK,SAAUb,EAAK,GAAKK,GACzBQ,KAAK,YAHR,oBAGkCL,EAHlC,aAG8CG,EAH9C,MAIAR,YAAO,UAAUU,KAAK,YAAtB,gBAA4CR,EAA5C,MAEAH,EAAOY,YAAcb,EAAMK,UAAUS,EACrCb,EAAOc,WAAaf,EAAMK,UAAUW,EAItC,SAASC,IACP,IAAMhB,EAASC,YAAO,iBAAiBC,OACjCW,EAAIb,EAAOY,WAAaZ,EAAOQ,YAAc,EAC7CO,EAAIf,EAAOc,UAAYd,EAAOU,aAAe,EAC7CP,EAAQc,YAAcjB,GAAQK,EACpCJ,YAAOD,GAAQkB,KAAKC,cAAOC,YAAaP,EAAIV,EAAOY,EAAIZ,GAIzD,SAASkB,EAAcC,GACrB,IAAMC,EAAS,IAAIC,WAEnB,OADAD,EAAOE,cAAcH,GACd,IAAII,SAAgB,SAACC,EAASC,GACnCL,EAAOM,OAAS,SAACC,GAAD,OAAOH,EAASG,EAAEC,OAAsBC,Y,SAI7CC,E,8EAAf,WAA2BC,GAA3B,qBAAAC,EAAA,yDACQC,EAAOF,EAAME,KAAKC,QAD1B,0EAM2BC,MAAMF,GANjC,cAMUG,EANV,gBAOuBA,EAASjB,OAPhC,cAOUA,EAPV,iBAQ0BD,EAAcC,GARxC,QAQUkB,EARV,OASIN,EAAME,KAAKC,QAAUG,EATzB,kDAWIC,QAAQC,KAAK,wBAAb,MAXJ,2D,+BAoBeC,E,8EAAf,WAA4BC,GAA5B,eAAAT,EAAA,6DACQU,EAASC,MAAMC,KAAKH,EAAII,qBAAqB,UADrD,SAEQtB,QAAQuB,IAAIJ,EAAOK,IAAIjB,IAF/B,4C,sBAMA,SAASkB,EAAU7B,GACjB,IAAMY,EAAQ,IAAIkB,MAElB,OADAlB,EAAMmB,IAAMC,IAAIC,gBAAgBjC,GACzB,IAAII,SAA0B,SAACC,EAASC,GAC7CM,EAAMsB,iBAAiB,QAAQ,kBAAM7B,EAAQO,SAKjD,SAASuB,EAAavB,GACpB,IAAMwB,EAASC,SAASC,cAAc,UAEtCF,EAAOG,MAAsB,EAAd3B,EAAM2B,MACrBH,EAAOI,OAAwB,EAAf5B,EAAM4B,OAEtB,IAAMC,EAAML,EAAOM,WAAW,MACxBC,EAAUF,EAAIG,UAMpB,OALAH,EAAIG,UAAY,QAChBH,EAAII,SAAS,EAAG,EAAGT,EAAOG,MAAOH,EAAOI,QACxCC,EAAIG,UAAYD,EAEhBF,EAAIK,UAAUlC,EAAO,EAAG,EAAGwB,EAAOG,MAAOH,EAAOI,QACzCJ,EAGT,SAASW,EAAaX,EAA2BY,GAC/C,OAAO,IAAI5C,SAAc,SAACC,EAASC,GACjC8B,EAAOa,QAAO,SAACjD,GACTA,EACFK,EAAQL,GAERM,MAED0C,O,SAKK1E,O,yBAAAA,I,yBAAAA,I,kBAAAA,M,KAeL,IAAM4E,EAAb,4MACUC,WADV,IAGUC,WAAY,EAHtB,EAKUC,kBAAmB,EAL7B,EAOUC,kBAPV,oDASE,WACE,OAAQC,KAAKC,MAAMC,WACjB,KAAKnF,EAAUoF,UACb,OAAOC,iBACT,KAAKrF,EAAUsF,UACb,OAAOC,iBACT,KAAKvF,EAAUwF,MACb,OAAOC,aACT,QAEE,OAAOJ,oBAnBf,6BAuBE,WACE,OAAQJ,KAAKC,MAAMC,WACjB,KAAKnF,EAAUwF,MACb,OAAOE,iBACT,QAEE,OAAOC,sBA7Bf,kBAiCE,SAAaC,GACX,IAAMxF,EAASC,YAAO,iBACtB4E,KAAKD,aAAca,QAAQzF,EAAQwF,KAnCvC,yBA2CE,WAA8E,IAAD,OAAzDE,EAAyD,uDAAxB,CAACC,eAAe,GAEnE,GAAKD,EAAKC,gBAAiBd,KAAKH,WAMhC,GAAKgB,EAAKC,gBAAiBd,KAAKC,MAAMc,gBAAtC,CAIIF,EAAKC,eACN1F,YAAO,UAAUC,OAAuB2F,UAAY,GACrDhB,KAAKJ,MAAQqB,sBAAY,CACvBC,KAAMlB,KAAKC,MAAMrF,KACjBsF,UAAWF,KAAKmB,eAChBC,SAAUpB,KAAKqB,kBACfC,YAAa,SACbC,aAAc,SAACC,GAAD,OAAU,EAAKvB,MAAMwB,YAAYD,IAC/CE,SAAS,EACTC,eAAe,EACfC,OAAQ5B,KAAK6B,QAAQC,KAAKF,UAG5B5B,KAAKJ,MAAOmC,QAAQ/B,KAAKC,MAAMrF,MAEjC,IAAMoH,EAAYhC,KAAKJ,MAAOqC,OAAO,CACnCC,UAAWlC,KAAKC,MAAMkC,UAAUC,GAChCC,eAAgBrC,KAAKC,MAAMkC,UAAUG,aAEjCvE,EAAM3C,YAAO,aACbD,EAASC,YAAO,iBAAiBC,OAEjCC,EAAQc,YAAcjB,GAAQK,EAC9B+G,EAAgBC,YAAI,CACxB,EACAlH,EACAH,EAAOQ,YAAcqG,EAAU/G,KAAK,GACpCE,EAAOU,aAAemG,EAAU/G,KAAK,KAEjCwH,EAA2B,CAAC/G,YAAI,CAAC,GAAK6G,IAAkB,GAE9DvC,KAAKD,aAAezD,cACjBoG,YAAYD,GACZE,gBAAgB,CAAC,CAAC,EAAG,GAAIX,EAAU/G,OACnC2H,GAAG,QAAQ,SAAC1H,GAAD,OAAWF,EAAOgH,EAAU/G,KAAMC,MAChDE,YAAOD,GAAQyH,GAAG,SAAUzG,GAAUE,KAAK2D,KAAKD,cAEhD,IAAM8C,EAAiB,SAAC5G,GACtB,OAAO,WACL,IAAM6G,EAAIC,YAAkB5H,EAAOc,UAAWA,GAC9C,OAAO,SAAC+G,GACN7H,EAAOc,UAAY6G,EAAEE,MAIrBC,EAAkB,SAAClH,GACvB,OAAO,WACL,IAAM+G,EAAIC,YAAkB5H,EAAOY,WAAYA,GAC/C,OAAO,SAACiH,GACN7H,EAAOY,WAAa+G,EAAEE,MAKtBE,EAAK/H,EAAOQ,YAAc,EAAIqG,EAAUmB,OAAO,GAAK7H,EACpD8H,EAAKjI,EAAOU,aAAe,EAAImG,EAAUmB,OAAO,GAAK7H,EACrDG,EAAUC,YAAI,CAClB,GACCP,EAAOQ,YAAcqG,EAAU/G,KAAK,GAAKK,GAAS,IAE/CM,EAAUF,YAAI,CAClB,GACCP,EAAOU,aAAemG,EAAU/G,KAAK,GAAKK,GAAS,IAEhD+H,EAAgBtF,EAAIuF,aAAaC,MAAM,KAAKC,SAAS,KACrDF,EAAazC,EAAKC,cAAgB/C,EAAMsF,EAC9CC,EACGxH,KAAK,YADR,oBACkCL,EADlC,aAC8CG,EAD9C,MAEGE,KAAK,QAASkG,EAAU/G,KAAK,GAAKK,GAClCQ,KAAK,SAAUkG,EAAU/G,KAAK,GAAKK,GAClCuF,EAAKC,eACP3F,EAAOY,YAAcmH,EACrB/H,EAAOc,WAAamH,GAEpBC,EACGI,MAAM,aAAcR,GAAiBC,IACrCO,MAAM,YAAaZ,GAAgBO,IAIxCpD,KAAKH,WAAY,EACjBmC,EAAU0B,iBAAiBC,MAAK,WAC9B,EAAK9D,WAAY,EACb,EAAKC,mBACP,EAAKA,kBAAmB,EACxB,EAAK8D,YAAY,CAAC9C,eAAe,cA9FnCd,KAAKF,kBAAmB,IA9C9B,+BAiJE,WACEE,KAAK4D,YAAY,CAAC9C,eAAe,MAlJrC,gCAqJE,SAAmB+C,GACjB,IAAM/C,EAAgBd,KAAKC,MAAMC,YAAc2D,EAAU3D,UACzDF,KAAK4D,YAAY,CAAC9C,oBAvJtB,oBA+JE,WAAU,IAAD,OACP,OACE,sBAAKsB,GAAG,eAAR,UACE,eAAC0B,EAAA,EAAD,CAAYC,SAAU,IAAKC,UAAU,OAArC,UACE,wBAAQA,UAAU,UAAUC,QAAS,kBAAM,EAAK3H,KA9RtC,MA8RV,eAGA,wBACE0H,UAAU,WACVC,QAAS,kBAAM,EAAK3H,KAAK,EAnSjB,MAiSV,uBAOF,qBAAK8F,GAAG,WAAR,SACE,mBAAGA,GAAG,iBA9KhB,4BAqLE,WACE,IAAMrE,EAAMe,SAASoF,eAAe,YAAaC,WAAU,GAE3DpG,EAAIqG,gBAAgB,aACpB,IAAMjJ,EAASC,YAAO,iBAAiBC,OACjCC,EAAQc,YAAcjB,GAAQK,EAWpC,OAVAuC,EAAIsG,aACF,QACAC,OAAOC,OAAOxG,EAAIyG,aAAa,UAAYlJ,IAE7CyC,EAAIsG,aACF,SACAC,OAAOC,OAAOxG,EAAIyG,aAAa,WAAalJ,IAE9CyC,EAAI0G,cAAc,UAAWL,gBAAgB,aAEtCrG,IArMX,4BAwME,WACE,OAAO,IAAI2G,eAAgBC,kBAAkB3E,KAAK4E,oBAzMtD,oFA4ME,2FACQ7G,EAAMiC,KAAK4E,iBADnB,SAEQ9G,EAAaC,GAFrB,iCAGS,IAAI2G,eAAgBC,kBAAkB5G,IAH/C,gDA5MF,yEAmNE,WAAS,IAAD,OACA8G,EAAc/F,SAASC,cAAc,UAC3C8F,EAAYC,MAAMC,SAAW,WAC7BF,EAAYC,MAAME,IAAM,UACxBH,EAAYC,MAAMG,KAAO,UACzBJ,EAAY7H,OAAS,WACnB6H,EAAYK,gBAAiBC,OAC7BN,EAAYK,gBAAiBE,MAAM,EAAKC,kBACxCR,EAAYK,gBAAiBI,QAE7BC,YAAW,WACTV,EAAYW,cAAeC,QAC3BZ,EAAYW,cAAeE,QAC3Bb,EAAYc,WAAYC,YAAYf,KACnC,MAEL/F,SAAS+G,KAAKC,YAAYjB,KAnO9B,gEAsOE,8BAAAvH,EAAA,sEACyB0C,KAAK+F,kCAD9B,OACQC,EADR,OAEQvJ,EAAO,IAAIwJ,KAAK,CAACD,GAAW,CAACvG,KAAM,kBACzCyG,iBAAOzJ,EAAM,cAHf,gDAtOF,uHA4OE,sGACyBuD,KAAK+F,kCAD9B,cACQC,EADR,OAEQvJ,EAAO,IAAIwJ,KAAK,CAACD,GAAW,CAACvG,KAAM,kBAF3C,KAGeb,EAHf,SAGkCN,EAAU7B,GAH5C,6IA5OF,sHAkPE,8BAAAa,EAAA,sEACuB0C,KAAKpB,eAD5B,cACQC,EADR,gBAEqBW,EAAaX,EAAQ,aAF1C,OAEQpC,EAFR,OAGEyJ,iBAAOzJ,EAAM,cAHf,gDAlPF,sHAwPE,kCAAAa,EAAA,sEAEiC,8BAFjC,uBAEkB6I,EAFlB,EAESC,QAFT,SAGuBpG,KAAKpB,eAH5B,OAGQC,EAHR,QAIQwH,EAAM,IAAIF,EAAM,CACpBG,YAAazH,EAAOG,MAAQH,EAAOI,OAAS,IAAM,IAClDsH,KAAM,KACNC,OAAQ,CAAC3H,EAAOG,MAAOH,EAAOI,WAE5BwH,SAAS5H,EAAQ,MAAO,EAAG,EAAGA,EAAOG,MAAOH,EAAOI,OAAQ,QAC/DoH,EAAIK,KAAK,cAVX,iDAxPF,2DAA2BC,iBAAdhH,EA2JJiH,aAAe,CACpB9E,KAAM+E,K,4DClTGC,GAAb,kDACE,WACkBC,EAChBC,GAEC,IAAD,EADgBnG,EAChB,uDADgD,GAChD,4BACA,cAAMmG,IAJUD,OAGhB,EADgBlG,OAChB,EALJ,uBAAiCoG,QC8B1B,SAASC,GAAYC,GAC1B,OAAOA,EAAQC,UAAU,EAAGD,EAAQE,OAAS,GAGxC,SAASC,GAAY1M,GAC1B,IAAMyD,EAAM,IAAIkJ,IAIhB,OAHA3M,EAAK4M,MAAMC,SAAQ,SAACC,GAClBrJ,EAAIsJ,IAAID,EAAKtF,GAAIsF,MAEZrJ,EAGF,SAASuJ,GAAWhN,GACzB,IAAMyD,EAAM,IAAIkJ,IAIhB,OAHA3M,EAAKiN,KAAKJ,SAAQ,SAACK,GACjBzJ,EAAIsJ,IAAIG,EAAI1F,GAAI0F,MAEXzJ,EAGT,SAAS0J,GAAcC,GACrB,IAAMC,EAAOD,EAAQE,MAAK,SAACC,GAAD,MAAyB,SAAdA,EAAMC,OACrCZ,EAAsC,GACtCK,EAAqC,GACrCQ,EAAsC,GAU5C,OATAL,EAAQP,SAAQ,SAACU,GACG,SAAdA,EAAMC,IACRZ,EAAMN,GAAYiB,EAAMhB,UAAYgB,EACb,QAAdA,EAAMC,IACfP,EAAKX,GAAYiB,EAAMhB,UAAYgB,EAC1BA,EAAMhB,UACfkB,EAAMnB,GAAYiB,EAAMhB,UAAYgB,MAGjC,CAACF,OAAMT,QAAOK,OAAMQ,SAG7B,SAASC,GAAOhL,EAAWiL,GACzB,OAAIjL,EAAIiL,GACE,EAENjL,EAAIiL,EACC,EAEF,EAIT,SAASC,GACPC,EACAC,GAEA,IAAMC,EACJF,IAAWA,EAAOG,MAASH,EAAOI,WAAaJ,EAAOI,UAAU3K,MAC5D4K,EACJJ,IAAWA,EAAOE,MAASF,EAAOG,WAAaH,EAAOG,UAAU3K,MAClE,OAAKyK,GAAUA,EAAMI,MAASD,GAAUA,EAAMC,KAG1CJ,EAAMI,OAASD,EAAMC,KAChBJ,EAAMI,KAAOD,EAAMC,KAEvBJ,EAAMK,OAAUF,EAAME,QAGvBL,EAAMK,QAAUF,EAAME,OAGtBL,EAAMM,KAAOH,EAAMG,KAAON,EAAMM,MAAQH,EAAMG,KAFzCN,EAAMK,MAAQF,EAAME,MAHpB,EANA,EAgEX,SAASE,GAAaC,GACpB,IAAMC,EA/CR,SAA8BD,GAC5B,IAAME,EAAU/B,GAAY6B,GAE5B,OAAO,SAACG,EAAiBC,GACvB,IAAMC,EAA8BH,EAAQI,IAAIH,GAC1CI,EAA8BL,EAAQI,IAAIF,GAChD,OACEf,GAAagB,GAASA,EAAMG,MAAOD,GAASA,EAAMC,QAClDrB,GAAOgB,EAASC,IAuCDK,CAAqBT,GAClCU,EAAUV,EAAOtB,KAAKxJ,KAAI,SAACyJ,GAAD,OAjBlC,SACEA,EACAsB,GAEA,IAAKtB,EAAIgC,SACP,OAAOhC,EAET,IAAMiC,EAAcjC,EAAIgC,SAASE,KAAKZ,GACtC,OAAOa,OAAOC,OAAO,GAAIpC,EAAK,CAACgC,SAAUC,IASAI,CAAmBrC,EAAKsB,MACjE,OAAOa,OAAOC,OAAO,GAAIf,EAAQ,CAACtB,KAAMgC,IAkB1C,SAASO,GAAYjB,GACnB,IAAMC,EAtDR,SAAiCD,GAC/B,IAAMkB,EAASzC,GAAWuB,GAE1B,OAAO,SAACmB,EAAgBC,GACtB,IAAMC,EAA4BH,EAAOZ,IAAIa,GACvCG,EAA4BJ,EAAOZ,IAAIc,GAC7C,OACE/B,GAAagC,GAAQA,EAAKE,SAAUD,GAAQA,EAAKC,WACjDpC,GAAOgC,EAAQC,IA8CAI,CAAwBxB,GACrCyB,EAAWzB,EAAO3B,MAAMnJ,KAAI,SAACqJ,GAAD,OAbpC,SACEA,EACA0B,GAEA,IAAK1B,EAAKG,KACR,OAAOH,EAET,IAAMmC,EAAUnC,EAAKG,KAAKmC,KAAKZ,GAC/B,OAAOa,OAAOC,OAAO,GAAIxC,EAAM,CAACG,KAAMgC,IAMpCgB,CAAgBnD,EAAM0B,MAExB,OAAOa,OAAOC,OAAO,GAAIf,EAAQ,CAAC3B,MAAOoD,IAIpC,SAASE,GAAgB3B,GAC9B,OAAOiB,GAAYlB,GAAaC,IAGlC,IAAM4B,GAAmB,CAAC,OAAQ,OAAQ,QAY1C,SAASC,GAAYtD,EAAgB1J,GACnC,IAAK0J,EAAK1J,QAAiC,IAAvB0J,EAAK1J,OAAOqJ,OAC9B,OAAOK,EAET,IAAMuD,EAAyB,GAU/B,OATAvD,EAAK1J,OAAOyJ,SAAQ,SAACpK,GACnB,IAAM6N,EAAW7N,EAAM8N,IAAIC,MAAM,YAAa,GAE1CpN,EAAOqN,IAAIH,GACbD,EAAUK,KAAK,CAACH,IAAKnN,EAAOyL,IAAIyB,GAAYK,MAAOlO,EAAMkO,QAChDlO,EAAM8N,IAAIK,WAAW,SAnBpC,SAAqBN,GACnB,IAAMO,EAAYP,EAASQ,cAC3B,OAAOX,GAAiBY,MAAK,SAACC,GAAD,OAASH,EAAUI,SAASD,MAiBZE,CAAYzO,EAAM8N,MAC3DF,EAAUK,KAAKjO,MAGZ4M,OAAOC,OAAO,GAAIxC,EAAM,CAAC1J,OAAQiN,IAO1C,SAASc,GACP5C,EACAnL,GAEA,IAAM4M,EAAWzB,EAAO3B,MAAMnJ,KAAI,SAACqJ,GAAD,OAAUsD,GAAYtD,EAAM1J,MAC9D,OAAOiM,OAAOC,OAAO,GAAIf,EAAQ,CAAC3B,MAAOoD,IAiCpC,SAASoB,GAAY/D,GAC1B,IAAMgE,EACJhE,GAAQA,EAAKiE,MAAQjE,EAAKiE,KAAKhE,MAAK,SAACC,GAAD,MAAyB,SAAdA,EAAMC,OACjD+D,EACJF,GAAQA,EAAKC,MAAQD,EAAKC,KAAKhE,MAAK,SAACC,GAAD,MAAyB,SAAdA,EAAMC,OACvD,OAAQ+D,GAAQA,EAAKvR,MAAS,KCnQhC,IAAMwR,GAAkB,IAAI7E,IAAI,CAC9B,CAAC,MAAO,SACR,CAAC,MAAO,cACR,CAAC,MAAO,eAGV,SAAS8E,GAAWzD,EAAkB9G,GACpC,IAAMwK,OAAsBC,IAAb3D,EAAKK,IACduD,OAA0BD,IAAf3D,EAAKI,MAChByD,OAAwBF,IAAd3D,EAAKG,KACrB,IAAKuD,IAAWE,IAAaC,EAC3B,OAAO7D,EAAK8D,MAAQ,GAEtB,IAAMC,EAAa,IAAIC,KACrBH,EAAU7D,EAAKG,KAAQ,EACvByD,EAAW5D,EAAKI,MAAS,EAAI,EAC7BsD,EAAS1D,EAAKK,IAAO,GAGjB4D,EAAYjE,EAAKiE,WAAajE,EAAKiE,UAAUnB,cAQ7CoB,EAA4C,CAChD7D,IAAKqD,EAAS,eAAYC,EAC1BvD,MAAOwD,EAAW,YAASD,EAC3BxD,KAAM0D,EAAU,eAAYF,GAO9B,MAAO,CAhBLM,GACA/K,EAAKiL,cAAc,CACjB3K,GAAG,QAAD,OAAUyK,GACZG,eAAgBZ,GAAgB3C,IAAIoD,IAAcA,IAQ/B,IAAII,KAAKC,eAC9BpL,EAAKF,OACLkL,GACAtG,OAAOmG,IAEoCQ,KAAK,KAuC7C,SAASC,GACdC,EACAvL,GAEA,OAAKuL,EAGDA,EAAYzE,KACPyD,GAAWgB,EAAYzE,KAAM9G,GAElCuL,EAAYxE,UA9ClB,SAAwBA,EAAsB/G,GAC5C,IAAMwL,EAAWzE,EAAU3K,KACrBqP,EAAS1E,EAAU2E,GACnBC,EAAqBH,GAAYjB,GAAWiB,EAAUxL,GACtD4L,EAAmBH,GAAUlB,GAAWkB,EAAQzL,GACtD,OAAI2L,GAAsBC,EACjB5L,EAAKiL,cACV,CACE3K,GAAI,eACJ4K,eAAgB,2BAElB,CAAC9O,KAAMuP,EAAoBD,GAAIE,IAG/BD,EACK3L,EAAKiL,cACV,CACE3K,GAAI,aACJ4K,eAAgB,gBAElB,CAAC9O,KAAMuP,IAGPC,EACK5L,EAAKiL,cACV,CACE3K,GAAI,cACJ4K,eAAgB,eAElB,CAACQ,GAAIE,IAGF,GAeEC,CAAeN,EAAYxE,UAAW/G,GAExC,GARE,GCtEX,IAAM8L,GAAa,CAAC,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAC7DC,GAAgB,CAAC,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QACxDC,GAAmB,IAAIvG,IAAI,CAC/B,CAAC,OAAQ,YACT,CAAC,OAAQ,WACT,CAAC,OAAQ,SACT,CAAC,OAAQ,UACT,CAAC,OAAQ,UACT,CAAC,MAAO,eACR,CAAC,OAAQ,aACT,CAAC,OAAQ,SACT,CAAC,OAAQ,aACT,CAAC,QAAS,UACV,CAAC,OAAQ,cACT,CAAC,OAAQ,SACT,CAAC,OAAQ,QACT,CAAC,OAAQ,eACT,CAAC,OAAQ,qBACT,CAAC,OAAQ,kBACT,CAAC,OAAQ,cACT,CAAC,OAAQ,SACT,CAAC,MAAO,SAGV,SAASwG,GAAa3F,GACpB,IAAM4F,EAAgB5F,EAAI6F,QAAQ,KAAM,IACxC,OACE,cAAC,IAAD,CACE7L,GAAE,iBAAY4L,GACdhB,eAAgBc,GAAiBrE,IAAIuE,IAAkBA,IAK7D,SAASE,GAAUC,GACjB,OACE,mCACGA,EAAM9P,KAAI,SAAC+P,EAAMC,GAAP,OACT,gCACE,cAAC,IAAD,CAASC,WAAY,CAACpR,OAAQ,UAA9B,SAA0CkR,IAC1C,yBAFQC,QAalB,SAASE,GAAQpG,GACf,IAAMhL,EAAS,CAACgL,EAAMvN,MAStB,OARAuN,EAAM+D,KAAKzE,SAAQ,SAAC+G,GAClB,GAAqB,SAAjBA,EAASpG,KAAkBoG,EAAS5T,KAAM,CAC5C,IAAM6T,EAAOtR,EAAOkK,OAAS,EAC7BlK,EAAOsR,IAASD,EAAS5T,SACC,SAAjB4T,EAASpG,KAAkBoG,EAAS5T,MAC7CuC,EAAOmO,KAAKkD,EAAS5T,SAGlBuC,EAGT,SAASuR,GAAavG,EAAoBrG,GACxC,IAAMqM,EAAQ,GACVhG,EAAMvN,MAAQuN,EAAMvN,KAAKyM,OAAS,GACpC8G,EAAM7C,KAAK,4BAAInD,EAAMvN,QAEvB,IAAMgO,EAAOT,EAAM+D,KAAKhE,MAAK,SAACsG,GAAD,MAA+B,SAAjBA,EAASpG,OAChDQ,GAAQA,EAAKhO,MACfuT,EAAM7C,KDWH,SAAuBqD,EAAoB7M,GAChD,OAAOsL,GAAkBwB,kBAAQD,GAAa7M,GCZjC+M,CAAcjG,EAAKhO,KAAMkH,IAEtC,IAAMgN,EAAQ3G,EAAM+D,KAAKhE,MAAK,SAACsG,GAAD,MAA+B,SAAjBA,EAASpG,OASrD,OARI0G,GAASA,EAAMlU,MACjBuT,EAAM7C,KAAN,MAAA6C,EAAK,YAASI,GAAQO,KAExB3G,EAAM+D,KACH6C,QAAO,SAACP,GAAD,MAA+B,SAAjBA,EAASpG,OAC9BX,SAAQ,SAACuH,GAAD,OACPT,GAAQS,GAAMvH,SAAQ,SAAC2G,GAAD,OAAUD,EAAM7C,KAAK,4BAAI8C,WAE9CD,EAAM9G,OAIT,qCACE,qBAAKrD,UAAU,gBAAf,SAAgC+J,GAAa5F,EAAMC,OACnD,+BAAO8F,GAAUC,QALZ,KA+BX,SAASc,GAAY9G,GACnB,OAAO+F,GACLK,GAAQpG,GAAO9J,KAAI,SAAC+P,EAAMC,GAAP,OAAiB,4BAAgBD,GAARC,OAIhD,SAASa,GAAY/G,GACnB,OACE,oBAAInE,UAAU,YAAd,SACGmE,EAAMvN,KACJuU,MAAM,KACNJ,QAAO,SAAC5C,GAAD,QAAYA,KACnB9N,KAAI,SAAC8N,EAAMkC,GAAP,OACH,gCACGlC,EACD,yBAFQkC,QASpB,SAASe,GACPpH,EACAqH,EACAC,GAEA,OAAOC,IAAQF,GAAM,SAACjH,GAAD,OACnBJ,EACG+G,QAAO,SAAC5G,GAAD,OAAWA,EAAMC,MAAQA,KAChC/J,KAAI,SAAC8J,GAAD,OAAWmH,EAAgBnH,SAEjC4G,QAAO,SAACS,GAAD,OAAyB,OAAZA,KACpBnR,KAAI,SAACmR,EAASnB,GAAV,OACH,qBAAKrK,UAAU,aAAf,SACGwL,GAD8BnB,MAWvC,SAASoB,GAAQtH,GACf,OAAOA,EAAM+D,KAAK7E,OAAS,GAAMc,EAAMvN,OAASuN,EAAMvN,KAAK4Q,WAAW,KAGxE,SAASkE,GAAgB1H,GACvB,OAAOA,EACJ+G,QACC,SAAC5G,GAAD,OACG0F,GAAc8B,SAASxH,EAAMC,OAASwF,GAAW+B,SAASxH,EAAMC,QAEpE2G,OAAOU,IACPpR,KAAI,SAAC8J,GAAD,OA7ET,SAAqBA,GACnB,IAAMgG,EAAQ,GASd,OARIhG,EAAMvN,MACRuT,EAAM7C,KAAN,MAAA6C,EAAK,YAASI,GAAQpG,KAExBA,EAAM+D,KACH6C,QAAO,SAACP,GAAD,MAA+B,SAAjBA,EAASpG,OAC9BX,SAAQ,SAACuH,GAAD,OACPT,GAAQS,GAAMvH,SAAQ,SAAC2G,GAAD,OAAUD,EAAM7C,KAAK,4BAAI8C,WAE9CD,EAAM9G,OAIT,qCACE,qBAAKrD,UAAU,gBAAf,SAAgC+J,GAAa5F,EAAMC,OACnD,+BAAO8F,GAAUC,QALZ,KAkESyB,CAAYzH,MAC3B4G,QAAO,SAACS,GAAD,OAAyB,OAAZA,KACpBnR,KAAI,SAACmR,EAASnB,GAAV,OACH,qBAAKrK,UAAU,aAAf,SACGwL,GAD8BnB,MAoBhC,IAAMwB,GAAb,4JAME,WAAU,IAAD,OACD7H,EAAUhI,KAAKC,MAAMkJ,OAAO3B,MAAMxH,KAAKC,MAAMyH,MAAMwE,KACnD4D,EAAkB9H,EACrB3J,KAAI,SAAC8J,GAAD,OAnBX,SAAqBA,EAAoBgB,GACvC,GAAIhB,EAAMvN,KAAM,CACd,IAAMmV,EAAe5G,EAAOd,MAAMnB,GAAYiB,EAAMvN,OACpD,GAAImV,EACF,OAAOA,EAGX,OAAO5H,EAYa6H,CAAY7H,EAAO,EAAKlI,MAAMkJ,WAC7C4F,OAAOU,IAEV,OACE,sBAAKzL,UAAU,cAAc5B,GAAG,UAAhC,UACGgN,GAAWpH,EAAS,CAAC,QAASkH,IAC9BE,GAAWpH,EAAS4F,IAAY,SAACzF,GAAD,OAC/BuG,GAAavG,EAAO,EAAKtG,QAAQC,SAElC4N,GAAgBI,GAChBV,GAAWU,EAAiB,CAAC,QAASb,WAnB/C,GAA6BtI,aCrMtB,SAASsJ,GACdrV,EACAuH,GAQA,MAAO,CAACC,GAHND,GAAavH,EAAK4M,MAAMmE,MAAK,SAAC7I,GAAD,OAAOA,EAAEV,KAAOD,EAAUC,MACnDD,EAAUC,GACVxH,EAAK4M,MAAM,GAAGpF,GACRE,YAAqB,OAATH,QAAS,IAATA,OAAA,EAAAA,EAAWG,aAAc,GAGnD,SAAS4N,GACP/G,EACAgH,EACAnS,GAEA,IAAMpD,EH+MD,SACLuO,EACAnL,GAEA,IAAMgK,EAAUoI,iBAAYjH,GACtBjI,EAAOmP,8BAAoBrI,GACjC,IACG9G,IACAA,EAAKsG,QACLtG,EAAKsG,MAAMH,SACXnG,EAAK2G,OACL3G,EAAK2G,KAAKR,OAEX,MAAM,IAAIP,GAAY,qBAAsB,8BAG9C,MAAO,CACLwJ,UAAWvE,GAAajB,GAAgB5J,GAAOlD,GAC/CmL,OAAQpB,GAAcC,IGjOXuI,CAAcpH,EAAQnL,GAAU,IAAIuJ,KAC3CiJ,EAAiBC,KAAKC,UAAU9V,GACtC,IACE+V,eAAeC,QAAQT,EAASK,GAChC,MAAOvT,GACPW,QAAQC,KAAK,4CAA8CZ,GAE7D,OAAOrC,EAIF,SAAeiW,GAAtB,qC,8CAAO,WACL1F,EACA2F,GAFK,yBAAAxT,EAAA,oEAKGyT,EAAaJ,eAAeK,QAAQ7F,IALvC,yCAOMsF,KAAKQ,MAAMF,IAPjB,sDAUHnT,QAAQC,KAAK,mDAVV,cAaCqT,EAAiB/F,EAAIC,MACzB,sDAGAD,EAAG,yCAAqC+F,EAAe,GAApD,sBAECC,EAAiBhG,EAAIC,MACzB,yDAGAD,EAAG,yCAAqCgG,EAAe,GAApD,qBAGCC,EAAaN,EACf,qCAAuC3F,EACvCA,EA5BC,UA8BkBtQ,OAAO4C,MAAM2T,GA9B/B,WA+BmB,OADlB1T,EA9BD,QA+BQ2T,OA/BR,uBAgCG,IAAIpK,MAAMvJ,EAAS4T,YAhCtB,yBAkCgB5T,EAASgP,OAlCzB,eAkCCvD,EAlCD,yBAmCE+G,GAAY/G,EAAQgC,IAnCtB,0D,sBAuCA,SAAeoG,GAAtB,uC,8CAAO,WACLC,EACArI,EACAnL,GAHK,eAAAV,EAAA,oEAMGyT,EAAaJ,eAAeK,QAAQQ,IANvC,yCAQMf,KAAKQ,MAAMF,IARjB,sDAWHnT,QAAQC,KAAK,mDAXV,UAaAsL,EAbA,uBAcG,IAAIrC,GACR,8BACA,sDAhBC,iCAmBEoJ,GAAY/G,EAAQqI,EAAMxT,IAnB5B,0D,sBDiIM6R,GAEJjJ,aAAe,CACpB9E,KAAM+E,KCrGH,ICjGF4K,GDiGQC,GAAb,yFAEE,SACEC,EACAC,EACAhX,GAEA,OAAO+W,EAAUE,KAAKL,OAASI,EAAUC,KAAKL,OAPlD,6DAUE,WACEM,GADF,eAAAxU,EAAA,+EAIuBiU,GACjBO,EAAOD,KAAKL,KACZM,EAAOD,KAAK1I,OACZ2I,EAAOD,KAAK7T,QAPlB,cAIUpD,EAJV,OAUIF,EAAe,qBAAsB,CACnCqX,YAFe/F,GAAYpR,EAAKuO,OAAOlB,MAGvC+J,YAAcF,EAAOD,KAAK7T,QAAU8T,EAAOD,KAAK7T,OAAO/C,MAAS,IAZtE,kBAcWL,GAdX,sCAgBIF,EAAe,qBAhBnB,8DAVF,8DAwCauX,GAAb,yFACE,SACEN,EACAC,EACAhX,GAEA,OAAO+W,EAAUE,KAAK1G,MAAQyG,EAAUC,KAAK1G,MANjD,6DASE,WAAe2G,GAAf,eAAAxU,EAAA,+EAEuBuT,GAAYiB,EAAOD,KAAK1G,IAAK2G,EAAOD,KAAKf,YAFhE,cAEUlW,EAFV,OAIIF,EAAe,qBAAsB,CAACqX,YADrB/F,GAAYpR,EAAKuO,OAAOlB,QAH7C,kBAKWrN,GALX,sCAOIF,EAAe,kBAPnB,8DATF,+D,SCzIK+W,K,gBAAAA,E,cAAAA,E,6BAAAA,Q,KAqBE,IAAMS,GAAb,yFACE,SACEP,EACAC,EACAhX,GAGA,OAAO,IAPX,8DAUE,WACEoM,EACAlK,EACAC,GAHF,4EAKMiK,EAAQA,UAAYyK,GAAoBU,aAL9C,gBAOItX,OAAOM,OAAOiX,YAAY,CAACpL,QAASyK,GAAoBY,OAAQ,KAPpE,0BAQarL,EAAQA,UAAYyK,GAAoBa,OARrD,oBASUnJ,EAAUnC,EAA0BmC,OAT9C,2EAcyBoI,GAAW,GAAIpI,GAdxC,QAcYvO,EAdZ,OAgBMF,EAAe,uBAAwB,CACrCqX,YAFe/F,GAAYpR,EAAKuO,OAAOlB,QAIzCnL,EAAQlC,GAnBd,kDAqBMF,EAAe,uBACfqC,EAAO,EAAD,IAtBZ,0DAVF,wHAqCE,WACE+U,GADF,oBAAAxU,EAAA,+EAIS,IAAIT,SAAoB,SAACC,EAASC,GACvClC,OAAOM,OAAOiX,YAAY,CAACpL,QAASyK,GAAoBY,OAAQ,KAChExX,OAAO8D,iBAAiB,WAAW,SAAC/D,GAAD,OACjC,EAAK2X,UAAU3X,EAAKA,KAAMkC,EAASC,UAPzC,2CArCF,8DCjCe,OAA0B,mC,uCCQzC,SAASyV,GAAWvS,GAClB,OACE,cAAC,KAAD,CACEuN,GAAI,CAACiF,SAAU,QAASC,OAAQC,YAAsB,CAACxH,IAAKlL,EAAMkL,OADpE,SAGGlL,EAAMyM,OAUN,SAASkG,KACd,IANuBC,EAMjB7M,EACJ,qCACE,4BACE,cAAC,IAAD,CACE5D,GAAG,oBACH4K,eACE,oGAKN,4BACE,cAAC,IAAD,CACE5K,GAAG,qBACH4K,eACE,uKAMN,4BACE,cAAC,IAAD,CACE5K,GAAG,iBACH4K,eACE,6DAIN,+BACE,+BACE,cAACwF,GAAD,CACErH,IAAI,+DACJuB,KAAK,uBACJ,IAJL,IAKG,cAAC,IAAD,CAAkBtK,GAAG,aAAa4K,eAAe,SAAU,IAC5D,mBAAGzP,KAAK,yDAAR,oBANF,OAWA,+BACE,cAACiV,GAAD,CACErH,IAAI,iFACJuB,KAAK,gBACJ,IAJL,IAKG,cAAC,IAAD,CAAkBtK,GAAG,aAAa4K,eAAe,SAAU,IAC5D,mBAAGzP,KAAK,iDAAR,8BANF,OAWA,+BACE,cAACiV,GAAD,CACErH,IAAI,wDACJuB,KAAK,iBACJ,IAJL,IAKG,cAAC,IAAD,CAAkBtK,GAAG,aAAa4K,eAAe,SAAU,IAC5D,mBAAGzP,KAAK,yCAAR,iCANF,UAYF,8BACE,4BACE,cAAC,IAAD,CAAkB6E,GAAG,gBAAgB4K,eAAe,cAErD,KACD,cAAC,IAAD,CACE5K,GAAG,qBACH4K,eACE,4RAMF8F,OAAQ,CACNC,KACE,mBAAGxV,KAAK,qCAAR,iCAKR,oBAAGyG,UAAU,2BAAb,uBA3FmB6O,EA4FSG,4BA3FzBH,EAAWI,MAAM,EAAG,KA0FvB,KAEE,mBACE1V,KAAI,uDAAkDyV,WADxD,SAGGA,YALL,UAYJ,OACE,sBAAK5Q,GAAG,UAAR,UACE,qBAAK4B,UAAU,oBACf,eAACkP,GAAA,EAAD,CAAMlP,UAAU,QAAhB,UACE,cAACF,EAAA,EAAD,CAAYqP,GAAID,KAAKE,QAASrP,SAAU,IAAxC,SACE,cAACmP,GAAA,EAAKG,OAAN,UACE,cAAC,IAAD,CACEjR,GAAG,cACH4K,eAAe,gCAIrB,eAACkG,GAAA,EAAKE,QAAN,WACE,cAACtP,EAAA,EAAD,CAAYqP,GAAIG,KAAMvP,SAAU,IAAhC,SACE,eAACuP,GAAA,EAAKC,IAAN,WACE,cAACD,GAAA,EAAKE,OAAN,CAAaxU,MAAO,EAApB,SACE,cAAC,KAAD,CAAOR,IAAKiV,GAAMC,IAAI,kBAExB,cAACJ,GAAA,EAAKE,OAAN,CAAaxU,MAAO,GAApB,SAAyBgH,SAG7B,eAAClC,EAAA,EAAD,CAAY6P,SAAU,IAAtB,UACE,cAAC,KAAD,CACEnV,IAAKiV,GACLC,IAAI,cACJE,UAAU,EACV3Y,KAAK,OACL+I,UAAU,eAEXgC,c,IC9ID6N,G,qEAAAA,O,eAAAA,I,wBAAAA,Q,KASL,IAAMC,GAAb,4JAGE,WACE,IAAMC,EAAQ,eAAO/T,KAAKC,OAG1B,cADO8T,EAASC,SAEd,mCACGhU,KAAKC,MAAM+T,WAAaH,GAASI,KAChC,cAACA,GAAA,EAAKC,KAAN,2BAAeH,GAAf,aAA0B/T,KAAKC,MAAM6J,YAErC,cAACqK,GAAA,EAASD,KAAV,2BAAmBH,GAAnB,aAA8B/T,KAAKC,MAAM6J,kBAZnD,GAA8BnD,a,8BCR9B,SAASyN,GAAeC,GACtB,OAAO,IAAIxX,SAAQ,SAACC,GAClB,IAAMJ,EAAS,IAAIC,WACnBD,EAAOM,OAAS,SAACsX,GACfxX,EAASwX,EAAIpX,OAAsBC,SAErCT,EAAO6X,WAAWF,MAItB,SAASG,GAAgBtJ,GACvB,IAAMuJ,EAAQvJ,EAASQ,cACvB,OAAO+I,EAAM5I,SAAS,SAAW4I,EAAM5I,SAAS,QAQ3C,IAAM6I,GAAb,yMACE,WAA2BxZ,GAA3B,2FACQyZ,EAASzZ,EAAMgC,OAA4ByX,QAClCA,EAAMtN,OAFvB,wDAKQuN,EAAa3W,MAAMC,KAAKyW,GAC7BzZ,EAAMgC,OAA4B2X,MAAQ,GAC3Cna,EAAe,wBAAyB,CACtCsX,YAAa2C,EAAMtN,SAGfyN,EACkB,IAAtBF,EAAWvN,OACPuN,EAAW,GACXA,EAAW1M,MAAK,SAACmM,GAAD,OAAUA,EAAKlI,KAAKT,cAAcG,SAAS,YAC3D+I,EAAW,GAGX5W,EAAS4W,EACZ7F,QACC,SAACsF,GAAD,OAAUA,EAAKlI,OAAS2I,EAAW3I,MAAQqI,GAAgBH,EAAKlI,SAEjE9N,KAAI,SAACgW,GAAD,MAAW,CACdlI,KAAMkI,EAAKlI,KACXhB,IAAK1M,IAAIC,gBAAgB2V,OAEvBU,EAAW,IAAIxN,IACnBvJ,EAAOK,KAAI,SAAC8J,GAAD,MAAW,CAACA,EAAMgE,KAAMhE,EAAMgD,SA3B7C,UA8BqBiJ,GAAeU,GA9BpC,QA8BQla,EA9BR,OA+BQoa,EAAiBhX,EACpBK,KAAI,SAAChB,GAAD,OAAWA,EAAM8O,QACrBnC,OACAmD,KAAK,KAEFqE,EAAOyD,KAAIA,KAAIra,GAAQoa,GAIvBtC,EAASC,QAAkB3S,KAAKC,MAAMiV,SAASxC,SAEnDA,EAAO2B,OAAS7C,EACZxR,KAAKC,MAAMkV,QAAQlH,QACnBjO,KAAKC,MAAMkV,QAAQ7J,MAEb,CACVmH,SAAU,QACVC,OAAQC,YAAsB,CAAC0B,KAAM7C,IACrC4D,MAAO,CAACxa,OAAMoD,OAAQ+W,KAjD1B,iDADF,2EAsDE,WAAU,IAAD,OACDM,EACJ,qCACE,cAACC,GAAA,EAAD,CAAMnJ,KAAK,gBACX,cAAC,IAAD,CAAkB/J,GAAG,iBAAiB4K,eAAe,iBAGzD,OACE,qCACGhN,KAAKC,MAAM+T,WAAaH,GAASI,KAChC,uBAAOsB,QAAQ,YAAf,SACE,cAACtB,GAAA,EAAKC,KAAN,CAAWf,GAAG,IAAd,SAAmBkC,MAGrB,cAAClB,GAAA,EAASD,KAAV,CAAef,GAAG,QAAQoC,QAAQ,YAAlC,SACGF,IAGL,uBACErR,UAAU,SACVvE,KAAK,OACL+V,OAAO,eACPpT,GAAG,YACHqT,UAAQ,EACRC,SAAU,SAACzY,GAAD,OAAO,EAAK0Y,aAAa1Y,aA9E7C,GAAgC0J,a,kDCXnBiP,GAAb,4MAIER,MAAe,CAACS,YAAY,GAJ9B,EAMEC,SAAmCnP,cANrC,gDASE,WAAsB,IAAD,OACnB3G,KAAK+V,SAAS9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAACS,YAAY,KAAQ,kBAC/D,EAAKC,SAASE,QAASvQ,aAX7B,yBAgBE,WACEzF,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BS,YAAY,OAnBpB,wBAyBE,WACE7V,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BS,YAAY,KAGZ7V,KAAKoV,MAAMjK,MACbzQ,EAAe,gBACfsF,KAAKC,MAAMkV,QAAQ7J,KAAK,CACtBmH,SAAU,QACVC,OAAQC,YAAsB,CAACxH,IAAKnL,KAAKoV,MAAMjK,WAnCvD,6BAyCE,SAAwB0J,GACtB7U,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BjK,IAAK0J,OA5Cb,8BAiDE,WAA4B,IAAD,OACzB,OACE,eAACoB,GAAA,EAAD,CACE9Q,KAAMnF,KAAKoV,MAAMS,WACjBK,QAAS,kBAAM,EAAKC,eACpBvC,UAAU,EAHZ,UAKE,eAACP,GAAA,EAAD,WACE,cAACiC,GAAA,EAAD,CAAMnJ,KAAK,mBACX,cAAC,IAAD,CACE/J,GAAG,sBACH4K,eAAe,gBACflD,SAAU,SAACsM,GAAD,OAASA,QAGvB,cAACH,GAAA,EAAM7C,QAAP,UACE,eAACiD,GAAA,EAAD,CAAMC,SAAU,kBAAM,EAAKC,cAA3B,UACE,cAACC,GAAA,EAAD,CACEC,YAAY,WACZC,OAAK,EACLhB,SAAU,SAACzY,EAAGrC,GAAJ,OAAa,EAAK+b,gBAAgB/b,EAAKia,QACjD+B,IAAK5W,KAAK8V,WAEZ,4BACE,cAAC,IAAD,CACE1T,GAAG,wBACH4K,eACE,wEAEF8F,OAAQ,CACNC,KACE,mBAAGxV,KAAK,qCAAR,iDASZ,eAAC0Y,GAAA,EAAMY,QAAP,WACE,cAACC,GAAA,EAAD,CAAQC,WAAS,EAAC9S,QAAS,kBAAM,EAAKkS,eAAtC,SACE,cAAC,IAAD,CACE/T,GAAG,uBACH4K,eAAe,aAGnB,cAAC8J,GAAA,EAAD,CAAQE,SAAO,EAAC/S,QAAS,kBAAM,EAAKsS,cAApC,SACE,cAAC,IAAD,CAAkBnU,GAAG,qBAAqB4K,eAAe,mBAjGrE,oBAwGE,WAAU,IAAD,OACP,OACE,qCACE,eAAC,GAAD,CACE/I,QAAS,kBAAM,EAAKgT,cACpBjD,SAAUhU,KAAKC,MAAM+T,SAFvB,UAIE,cAACsB,GAAA,EAAD,CAAMnJ,KAAK,mBACX,cAAC,IAAD,CACE/J,GAAG,qBACH4K,eAAe,qBAGlBhN,KAAKkX,0BArHd,GAA6BvQ,aClBd,OAA0B,qC,qBCU5BwQ,GAAoB,WAM3BC,GAAmB,sBAiEzB,SAASC,GAAsBC,GAC7B,IACE,OAAO3G,eAAeK,QAAQsG,GAC9B,MAAOra,GACPW,QAAQC,KAAK,6CAA+CZ,GAE9D,OAAO,KAIT,SAASsa,GAAsBD,EAAazC,GAC1C,IACElE,eAAeC,QAAQ0G,EAAKzC,GAC5B,MAAO5X,GACPW,QAAQC,KAAK,4CAA8CZ,I,SAKhDua,G,mFAAf,WAA2BC,EAA0B3G,GAArD,uBAAAxT,EAAA,sDAGE,IAAWga,KAFLI,EAAc,IAAIC,UACZC,OAAO,SAAU,QACXH,EAChBC,EAAYE,OAAON,EAAKG,EAAQH,IAJpC,OAMQO,EAAS/G,EACX,qEACA,mCARN,SASyBjW,OAAO4C,MAAMoa,EAAQ,CAC1CC,OAAQ,OACRjS,KAAM6R,EACNK,YAAajH,OAAavE,EAAY,YAZ1C,cASQ7O,EATR,gBAc6BA,EAASgP,OAdtC,cAcQsL,EAdR,yBAeSvH,KAAKQ,MAAM+G,IAfpB,6C,+BAsBeC,G,mFAAf,WACEX,EACAxG,GAFF,qBAAAxT,EAAA,yDAIQ4a,EAJR,6BAIyCZ,KACjCvG,EAAasG,GAAsBa,IAL3C,yCAOWzH,KAAKQ,MAAMF,IAPtB,uBASyByG,GACrB,CACE7c,OAAQ,eACR2c,IAAKA,EACLa,OAAQ,KAEVrH,GAfJ,cASQpT,EATR,OAiBQP,EAASO,EAAS,GAAG0a,UAC3Bb,GAAsBW,EAAUzH,KAAKC,UAAUvT,IAlBjD,kBAmBSA,GAnBT,6C,+BA0Bekb,G,mFAAf,WACEC,EACAxH,GAFF,uBAAAxT,EAAA,yDAIQH,EAAmB,GACnBob,EAAwB,GAC9BD,EAAK7Q,SAAQ,SAAC6P,GACZ,IAAMvG,EAAasG,GAAsB,sBAAD,OAAuBC,IAC3DvG,EACF5T,EAAOmO,KAAKmF,KAAKQ,MAAMF,IAEvBwH,EAAYjN,KAAKgM,MAGM,IAAvBiB,EAAYlR,OAdlB,yCAeWlK,GAfX,uBAiByBqa,GACrB,CACE7c,OAAQ,eACR2d,KAAMC,EAAYpL,KAAK,KACvBqL,aAAa,EACbC,YAAY,GAEd3H,GAxBJ,UA0B4B,QATpBpT,EAjBR,QA0Be,GAAGgb,MA1BlB,uBA2BUtW,EAAKmW,EAAY,GACjB,IAAIzR,GACR,6BADI,2BAEgB1E,EAFhB,cAGJ,CAACA,OA/BP,eAkCQuW,EAAiBjb,EAAS,GAAGgb,MAAMra,KACvC,SAACrC,GAAD,OAAyBA,EAAE4c,WAEdnR,SAAQ,SAACmR,GACtBrB,GAAsB,sBAAD,OACGqB,EAAOC,MAC7BpI,KAAKC,UAAUkI,OAxCrB,kBA2CSzb,EAAO2b,OAAOH,IA3CvB,6C,sBA8CO,SAAeI,GAAtB,mC,8CAAO,WACLC,GADK,eAAA1b,EAAA,sEAGkBka,GACrB,CACE7c,OAAQ,cACRqe,aAEF,GARG,cAGCtb,EAHD,yBAUEA,EAASqb,aAVX,4C,sBAqBA,SAASE,KACd,OAAOC,KAAQzP,IAAI2N,IAOd,SAAe+B,GAAtB,uC,8CAAO,WACL7B,EACAxV,EACAkX,GAHK,iEAAA1b,EAAA,0DAMCwT,EAA0C,sBAA7BjW,OAAOqa,SAASkE,WAEfH,OAAyBD,EARxC,gCASuBD,GAAYC,GATnC,OAUwB,aADrBK,EATH,QAUalc,SACdwT,eAAe2I,QACfJ,KAAQvR,IAAIyP,GAAkBiC,EAAYE,WAZzC,cAgBCC,EAAqB,GAhBtB,SAmBqBnB,GAAa,CAACf,GAAMxG,GAnBzC,WAmBC2I,EAnBD,QAoBY,GAAGZ,KApBf,uBAsBG,IAAI/R,GACR,kCADI,2BADA1E,EAAKkV,EACL,uCAGJ,CAAClV,OAzBA,eA6BCsX,EAAazP,OAAO6I,OAAO2G,EAAY,GAAGE,SAAStb,KAAI,SAACub,GAAD,OAAOA,EAAEf,QA7BjE,UA8BmBhc,QAAQuB,IAC9B,CAACkZ,GACEwB,OAAOY,GACPrb,KAAI,SAACwb,GAAD,OAAc5B,GAAa4B,EAAU/I,OAjCzC,eA8BCsH,EA9BD,OAmCC0B,EAAe1B,EAClB2B,OACA1b,KAAI,SAACua,GAAD,OAAYA,EAAOC,QACvB9J,QAAO,SAACuI,GAAD,QAAWA,KAtChB,UAuCyBe,GAAayB,EAAchJ,GAvCpD,QAuCCkJ,EAvCD,OA0CCC,EAAsC,IAAI1S,IAE1C2S,EAAsC,IAAI3S,IAIhD6Q,EAAU3Q,SAAQ,SAAC0S,EAAc9L,GAC/B,IAAM+L,EAAS,IAAO/L,EAEtB8L,EAAa1S,SAAQ,SAACmR,GAChBA,EAAOyB,GAAK,IACdzB,EAAOyB,IAAMD,EACbxB,EAAOC,KAAP,UAAiB1B,IAAjB,OAAqCyB,EAAOyB,KAE1CzB,EAAO0B,OAAS,IAClB1B,EAAO0B,QAAUF,EACjBH,EAAetS,IAAIiR,EAAOyB,GAAIzB,EAAO0B,SAEnC1B,EAAO2B,OAAS,IAClB3B,EAAO2B,QAAUH,EACjBF,EAAevS,IAAIiR,EAAOyB,GAAIzB,EAAO2B,eAO3CP,EAAgBvS,SAAQ,SAACmR,GACvB,IAAM4B,EAAgBP,EAAexQ,IAAImP,EAAOyB,IAC5CG,IACF5B,EAAO0B,OAASE,GAElB,IAAMC,EAAgBP,EAAezQ,IAAImP,EAAOyB,IAC5CI,IACF7B,EAAO2B,OAASE,MAGpBjB,EAASlO,KAAT,MAAAkO,EAAQ,YAASQ,IAGXU,EAAmBtC,EAAU2B,OAAOhL,QAAO,SAAC6J,GAAD,OAAYA,EAAOyB,GAAK,KACzEb,EAASlO,KAAT,MAAAkO,EAAQ,YAASkB,IAIXC,EAA4B,EAG9BC,EAAU,CAACtD,GACXhV,EAAa,EA3FZ,aA4FEsY,EAAQvT,OAAS,GAAK/E,GAAcqY,GA5FtC,kCA6FkBtC,GAAauC,EAAS9J,GA7FxC,QA6FG+J,EA7FH,OA8FHrB,EAASlO,KAAT,MAAAkO,EAAQ,YAASqB,IACXC,EAAaD,EAAOtL,SAAQ,SAACqJ,GAAD,OAChC3O,OAAO6I,OAAO8F,EAAOe,YAEvBH,EAASlO,KAAT,MAAAkO,EAAQ,YAASsB,IAEjBF,EAAUC,EAAOtL,SAAQ,SAACqJ,GAAD,OACvB3O,OAAO6I,OAAO8F,EAAOmC,UAAU1c,KAAI,SAAC2c,GAAD,OAAOA,EAAEnC,WAE9CvW,IAvGG,+BA2GC2Y,EAAW,IAAI1T,IAEfuC,EAAW,IAAIvC,IAEf2T,EAAU,IAAI3T,IAKd4T,EAAW,IAAI5T,IAErBiS,EAAS/R,SAAQ,SAACmR,GAEhB,GADAuC,EAASxT,IAAIiR,EAAOyB,GAAIzB,EAAOC,MAC3BD,EAAO2B,QAAU3B,EAAO0B,OAAQ,CAClC,IAAMc,EAAQC,GAAYzC,EAAO2B,OAAQ3B,EAAO0B,QAChDgB,GAAOL,EAAUrC,EAAO2B,QAAQgB,IAAIH,GACpCE,GAAOL,EAAUrC,EAAO0B,QAAQiB,IAAIH,GACpCE,GAAOxR,EAAUsR,GAAOG,IAAI3C,EAAOyB,IACnCa,EAAQvT,IAAIyT,EAAO,CACjBI,KAAM5C,EAAO2B,aAAUhO,EACvBkP,QAAS7C,EAAO0B,aAAU/N,QAK1B/E,EAAoB,GACpBkU,EAAY,IAAIC,IACtBnC,EAAS/R,SAAQ,SAACmR,GAChB,IAAI8C,EAAUrQ,IAAIuN,EAAOyB,IAAzB,CAGAqB,EAAUH,IAAI3C,EAAOyB,IACrB,IAAM3S,EAAOkU,GAAchD,EAAQ9W,GAC/B8W,EAAOe,SACT1P,OAAO6I,OAAO8F,EAAOe,SAASlS,SAAQ,SAACoU,GACrC,IAAMT,EAAQC,GAAYzC,EAAOyB,GAAIwB,EAAOxB,IAC5CiB,GAAOL,EAAUrC,EAAOyB,IAAIkB,IAAIH,GAChCE,GAAOL,EAAUY,EAAOxB,IAAIkB,IAAIH,GAChC,IAAMU,EACc,SAAlBlD,EAAOmD,OACH,CAACP,KAAMK,EAAOxB,GAAIoB,QAAS7C,EAAOyB,GAAIwB,UACtC,CAACL,KAAM5C,EAAOyB,GAAIoB,QAASI,EAAOxB,GAAIwB,UAC5CX,EAAQvT,IAAIyT,EAAOU,MAGvBpU,EAAKG,KAAO5J,MAAMC,KAAKod,GAAOL,EAAUrC,EAAOyB,KAC/C7S,EAAM8D,KAAK5D,OAGPG,EAAO5J,MAAMC,KAAKgd,EAAQlT,WAAW3J,KAAI,YAAmB,IAAD,mBAAhBiZ,EAAgB,KAAXzC,EAAW,KACzD/M,EAAe,CACnB1F,GAAIkV,GAEAkE,EAAO3G,EAAM2G,MAAQL,EAAS1R,IAAIoL,EAAM2G,MAC1CA,IACF1T,EAAI0T,KAAOA,GAEb,IAAMC,EAAU5G,EAAM4G,SAAWN,EAAS1R,IAAIoL,EAAM4G,SAOpD,GANIA,IACF3T,EAAIkU,KAAOP,GAEb3T,EAAIgC,SAAW7L,MAAMC,KAAKod,GAAOxR,EAAUwN,IAAMjZ,KAC/C,SAAC4d,GAAD,OAAWd,EAAS1R,IAAIwS,MAGxBpH,EAAMgH,SACJhH,EAAMgH,OAAOK,eACkB,eAA/BrH,EAAMgH,OAAOK,eACbrH,EAAMgH,OAAOM,mBACf,CACA,IAAMC,EAAaC,GAAUxH,EAAMgH,OAAOK,eAC1CpU,EAAI4C,SAAWT,OAAOC,OAAO,GAAIkS,EAAY,CAC3CtN,MAAO+F,EAAMgH,OAAOM,oBAGxB,OAAOrU,KAGHwI,EAAYxF,GAAgB,CAACtD,QAAOK,SACpCsB,EAASmT,GAAY9U,GA1LtB,kBA2LE,CAAC8I,YAAWnH,WA3Ld,6C,sBA+LP,SAASkS,GAAYkB,EAAiBC,GACpC,OAAIA,EAAUD,EACN,GAAN,OAAUA,EAAV,YAAqBC,GAEjB,GAAN,OAAUA,EAAV,YAAqBD,GAGvB,SAASX,GAAchD,EAAgB9W,GACrC,IAAM4F,EAAiB,CACrBtF,GAAIwW,EAAOC,MAyBb,GAvBID,EAAOC,KAAKrN,WAAW2L,MACzBzP,EAAK+U,QAAS,EACd/U,EAAKgV,UAAY5a,EAAKiL,cAAc,CAClC3K,GAAI,mBACJ4K,eAAgB,aAGhB4L,EAAO+D,WAAkC,YAArB/D,EAAO+D,UAC7BjV,EAAKgV,UAAY9D,EAAO+D,UACf/D,EAAOgE,UAAgC,YAApBhE,EAAOgE,WACnClV,EAAKgV,UAAY9D,EAAOgE,UAEK,YAA3BhE,EAAOiE,kBACTnV,EAAKoV,SAAWlE,EAAOiE,kBAErBjE,EAAO2B,QAAU3B,EAAO0B,UAC1B5S,EAAKqV,KAAO1B,GAAYzC,EAAO2B,OAAQ3B,EAAO0B,SAE1B,SAAlB1B,EAAOmD,OACTrU,EAAKsV,IAAM,IACgB,WAAlBpE,EAAOmD,SAChBrU,EAAKsV,IAAM,KAGVpE,EAAOqE,WAAkC,eAArBrE,EAAOqE,WAC5BrE,EAAOsE,eACoB,YAA3BtE,EAAOuE,gBACP,CACA,IAIMvU,EAJayT,GACjBzD,EAAOqE,UACPrE,EAAOwE,YAAcxE,EAAOwE,WAAWH,YAEdI,GAAYzE,EAAOuE,iBAC9CzV,EAAKiC,MAAQM,OAAOC,OAAO,GAAItB,EAAM,CAACkG,MAAO8J,EAAOsE,gBAEtD,GACGtE,EAAO0E,WAAkC,eAArB1E,EAAO0E,WAC5B1E,EAAO2E,eACoB,YAA3B3E,EAAO4E,gBACP,CACA,IAIM5U,EAJayT,GACjBzD,EAAO0E,UACP1E,EAAOwE,YAAcxE,EAAOwE,WAAWE,YAEdD,GAAYzE,EAAO4E,iBAC9C9V,EAAK+V,MAAQxT,OAAOC,OAAO,GAAItB,EAAM,CAACkG,MAAO8J,EAAO2E,gBAKtD,OAHI3E,EAAO8E,YACThW,EAAK1J,OAAS,CAAC,CAACmN,IAAI,2BAAD,OAA6ByN,EAAO8E,UAAUvS,QAE5DzD,EAOT,SAAS2U,GAAUzT,EAAc+U,GAC/B,GAAK/U,EAAL,CAGA,IAAMgV,EAAchV,EAAKwC,MAAM,4BAC/B,IAAKwS,EACH,MAAO,CAAChV,KAAM,CAAC8D,KAAM9D,IAEvB,IAAMwT,EAAmB,GAUzB,MATuB,SAAnBwB,EAAY,KACdxB,EAAWrT,OAAS6U,EAAY,IAEX,OAAnBA,EAAY,KACdxB,EAAWpT,QAAU4U,EAAY,IAEZ,OAAnBA,EAAY,KACdxB,EAAWnT,MAAQ2U,EAAY,IAEd,UAAfD,EACK,CAAC9U,UAAW,CAAC3K,KAAMke,IAET,WAAfuB,EACK,CAAC9U,UAAW,CAAC2E,GAAI4O,KAEP,UAAfuB,IACFvB,EAAWvP,UAAY,OAElB,CAACjE,KAAMwT,KAGhB,SAASiB,GAAYQ,GACnB,MAAkB,YAAXA,EAAuB,CAACjV,KAAM,CAAC8D,KAAMmR,SAAWtR,EAOzD,SAAS+P,GAAY9U,GACnB,IAAMsW,EAA4C,GA8BlD,OA7BAtW,EAAMC,SAAQ,SAACC,GAEb,IAAMqW,EAAYrW,EAAKtF,GAAG6L,QAAQ,KAAM,KACxC6P,EAAYpW,EAAKtF,IAAM,CACrB4b,MAAO,EACP7W,QAAQ,IAAD,OAAMO,EAAKtF,GAAX,KACPgG,IAAK,OACLxN,KAAM,GACNsR,KAAM,CACJ,CACE8R,MAAO,EACP7W,QAAS,GACTiB,IAAK,OACLxN,KAAK,GAAD,OAAK8M,EAAKgV,WAAa,GAAvB,aAA8BhV,EAAKoV,UAAY,GAA/C,KACJ5Q,KAAM,MAIPxE,EAAKtF,GAAGoJ,WAAW,MACtBsS,EAAYpW,EAAKtF,IAAI8J,KAAKZ,KAAK,CAC7B0S,MAAO,EACP7W,QAAS,GACTiB,IAAK,MACLxN,KAAK,iCAAD,OAAmCmjB,GACvC7R,KAAM,QAKL,CACLjE,KAAM,CAAC+V,MAAO,EAAG7W,QAAS,GAAIiB,IAAK,OAAQxN,KAAM,GAAIsR,KAAM,IAC3D1E,MAAOsW,EACPjW,KAAM,GACNQ,MAAO,IAQX,SAASiT,GAAajd,EAAqBiZ,GACzC,IAAM3P,EAAMtJ,EAAIoL,IAAI6N,GACpB,GAAI3P,EACF,OAAOA,EAET,IAAMsW,EAAS,IAAItC,IAEnB,OADAtd,EAAIsJ,IAAI2P,EAAK2G,GACNA,EASF,ICzjBFC,GDyjBQC,GAAb,WACE,WAAoBrc,GAAqB,yBAArBA,OADtB,6CAGE,SACE6P,EACAC,EACAhX,GACU,IAAD,EACT,QAAK+W,EAAUxP,aAGX,UAAAyP,EAAUzP,iBAAV,eAAqBC,MAAOuP,EAAUxP,UAAUC,MAKlDxH,IACAA,EAAK0V,UAAU9I,MAAMmE,MAAK,SAACjE,GAAD,aAAUA,EAAKtF,MAAL,UAAYuP,EAAUxP,iBAAtB,aAAY,EAAqBC,WAjB3E,6DAyBE,WACE0P,GADF,eAAAxU,EAAA,yDAGOwU,EAAO3P,UAHd,sBAIU,IAAI2E,GACR,2BACA,oCANN,gCAUuBqS,GACjBrH,EAAO3P,UAAUC,GACjBpC,KAAK8B,KACLgQ,EAAOD,KAAKmH,UAblB,cAUUpe,EAVV,OAeIF,EAAe,mBAfnB,kBAgBWE,GAhBX,wCAkBIF,EAAe,kBAlBnB,+DAzBF,+D,SCzjBKwjB,O,qBAAAA,I,iCAAAA,I,0BAAAA,Q,KAgBE,IAAME,GAAb,4MAIEhJ,MAAe,CACbS,YAAY,GALhB,EAQEC,SAAmCnP,cARrC,gDAUE,WAAsB,IAAD,OACnB3G,KAAK+V,SAAS9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAACS,YAAY,KAAQ,kBAC/D,EAAKC,SAASE,QAASvQ,aAZ7B,yBAiBE,WACEzF,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BS,YAAY,OApBpB,4BA0BE,WAME,GALA7V,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BS,YAAY,KAGZ7V,KAAKoV,MAAMiJ,WAAY,CACzB3jB,EAAe,wBACf,IAAMgY,EAASC,QAAkB3S,KAAKC,MAAMiV,SAASxC,QAC/C4L,OACkB/R,IAAtBmG,EAAO4L,YAA2B5L,EAAO4L,WAC3Cte,KAAKC,MAAMkV,QAAQ7J,KAAK,CACtBmH,SAAU,QACVC,OAAQC,YAAsB,CAC5BjL,KAAM1H,KAAKoV,MAAMiJ,WACjBvM,OAAQ,WACRwM,oBA1CV,4BAiDE,SAAuBzJ,GACrB7U,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BiJ,WAAYxJ,OApDpB,qBAyDE,SAAgB3Z,EAAyBkH,GACvClH,EAAMqjB,iBACJve,KAAK8V,SAASE,QAEbF,SAASjB,MAAQzS,EACpBpC,KAAKwe,eAAepc,GACpBpC,KAAK8V,SAASE,QAASvQ,UA/D3B,6BAkEE,WAA2B,IAAD,OACxB,OACE,eAACwQ,GAAA,EAAD,CACE9Q,KAAMnF,KAAKoV,MAAMS,WACjBK,QAAS,kBAAM,EAAKC,eACpBvC,UAAU,EAHZ,UAKE,eAACP,GAAA,EAAD,WACE,qBACE7U,IAAKigB,GACL/K,IAAI,gBACJ5O,MAAO,CAAC9F,MAAO,OAAQC,OAAQ,UAEjC,cAAC,IAAD,CACEmD,GAAG,2BACH4K,eAAe,qBACflD,SAAU,SAACsM,GAAD,OAASA,QAGvB,cAACH,GAAA,EAAM7C,QAAP,UACE,eAACiD,GAAA,EAAD,CAAMC,SAAU,kBAAM,EAAKoI,kBAA3B,UACE,4BACE,cAAC,IAAD,CACEtc,GAAG,6BACH4K,eACE,uEAEF8F,OAAQ,CACN6L,aACE,mBACEphB,KAAK,wBACLL,OAAO,SACP0hB,IAAI,sBAHN,sBAQFC,SACE,sBACE5a,QAAS,SAAChH,GAAD,OAAO,EAAK6hB,QAAQ7hB,EAAG,eAChC+G,UAAU,YAFZ,wBAOF+a,SACE,sBACE9a,QAAS,SAAChH,GAAD,OAAO,EAAK6hB,QAAQ7hB,EAAG,sBAChC+G,UAAU,YAFZ,oCAUR,cAACwS,GAAA,EAAD,CACEE,OAAK,EACLhB,SAAU,SAACzY,EAAGrC,GAAJ,OAAa,EAAK4jB,eAAe5jB,EAAKia,QAChD+B,IAAK5W,KAAK8V,gBAIhB,eAACG,GAAA,EAAMY,QAAP,WACE,cAACC,GAAA,EAAD,CAAQC,WAAS,EAAC9S,QAAS,kBAAM,EAAKkS,eAAtC,SACE,cAAC,IAAD,CACE/T,GAAG,4BACH4K,eAAe,aAGnB,cAAC8J,GAAA,EAAD,CAAQE,SAAO,EAAC/S,QAAS,kBAAM,EAAKya,kBAApC,SACE,cAAC,IAAD,CACEtc,GAAG,0BACH4K,eAAe,mBA3I7B,oBAmJE,WAAU,IAAD,OACP,OACE,qCACE,eAAC,GAAD,CACEgH,SAAUhU,KAAKC,MAAM+T,SACrB/P,QAAS,kBAAM,EAAKgT,cAFtB,UAIE,qBAAKzY,IAAKigB,GAAc/K,IAAI,gBAAgB1P,UAAU,cACtD,cAAC,IAAD,CACE5B,GAAG,0BACH4K,eAAe,0BAGlBhN,KAAKgf,yBAhKd,GAAkCrY,aA4KrBsY,GAAb,4MAIE7J,MAAoB,CAClB8J,mBAAoBhB,GAAmBiB,SAL3C,EAYEC,qBAAyDzY,cAZ3D,EAaE0Y,qBAA0D1Y,cAb5D,mDAmBE,WACE,IAIM2Y,EAAS,UAHb,wDAGa,OAA0BzkB,OAAOqa,SAAS1D,KAA1C,KACfxR,KAAKqf,qBAAqBrJ,QAASnB,MAAQyK,EAC3Ctf,KAAKof,qBAAqBpJ,QAASuJ,WA1BvC,qCA6BE,WACE,IAAMC,EAAwBvG,KACxBiG,EAAqBM,EACvBtB,GAAmBuB,UACnBvB,GAAmBwB,cACnB1f,KAAKoV,MAAM8J,qBAAuBA,GACpClf,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5B8J,qBACAM,6BAtCV,+BA4CE,WACExf,KAAK2f,4BA7CT,gCAgDE,WACE3f,KAAK2f,4BAjDT,oBAoDE,WAAU,IAAD,OACP,OAAQ3f,KAAKoV,MAAM8J,oBACjB,KAAKhB,GAAmBwB,cACtB,OACE,qCACE,eAAC,GAAD,CACE1L,SAAUhU,KAAKC,MAAM+T,SACrB/P,QAAS,kBAAM,EAAK2b,iBAFtB,UAIE,qBACEphB,IAAKigB,GACL/K,IAAI,gBACJ1P,UAAU,cAEZ,cAAC,IAAD,CACE5B,GAAG,sBACH4K,eAAe,0BAGnB,uBACErS,OAAO,mCACPmd,OAAO,OACPhT,MAAO,CAAC+a,QAAS,UACjBjJ,IAAK5W,KAAKof,qBAJZ,UAME,uBAAO3f,KAAK,SAAS0M,KAAK,SAAS0I,MAAM,gBACzC,uBACEpV,KAAK,SACL0M,KAAK,YACLyK,IAAK5W,KAAKqf,6BAMpB,KAAKnB,GAAmBuB,UACtB,IAAMK,EAAU9f,KAAKoV,MAAMoK,sBACvBxf,KAAK6B,QAAQC,KAAKiL,cAChB,CACE3K,GAAI,+BACJ4K,eAAgB,uCAElB,CAACuM,SAAUvZ,KAAKoV,MAAMoK,wBAExBxf,KAAK6B,QAAQC,KAAKiL,cAAc,CAC9B3K,GAAI,sBACJ4K,eAAgB,0BAEtB,OACE,eAAC,GAAD,CAAUgH,SAAUhU,KAAKC,MAAM+T,SAAUzI,MAAOuU,EAAhD,UACE,qBAAKthB,IAAKigB,GAAc/K,IAAI,gBAAgB1P,UAAU,cACtD,cAAC,IAAD,CACE5B,GAAG,0BACH4K,eAAe,iBAKzB,OAAO,SA9GX,GAAuCrG,aAA1BsY,GAQJrY,aAAe,CACpB9E,KAAM+E,K,kECzMVkZ,EAAQ,IAARA,CAA+CC,MAC/CD,EAAQ,IAARA,CAAqCC,MACrCD,EAAQ,IAARA,CAAkCC,MAClCD,EAAQ,IAARA,CAAkCC,MAClCD,EAAQ,IAARA,CAAkCC,MAClCD,EAAQ,IAARA,CAAkCC,MAclC,SAASC,GAAUC,GACjB,OAAOA,EACJC,oBACAF,UAAU,OACVhS,QAAQ,mBAAoB,IAC5BA,QAAQ,UAAW,KAIxB,SAASmS,GAAQ9iB,EAAsBiL,GACrC,OAAIjL,EAAE+iB,QAAU9X,EAAE8X,MACT9X,EAAE8X,MAAQ/iB,EAAE+iB,MAEdC,KAAYhjB,EAAEsZ,IAAKrO,EAAEqO,K,IAiBxB2J,G,WAKJ,WAAY3lB,GAAuB,yBAJ3ByT,WAI0B,OAH1BhF,aAG0B,OAF1BgB,YAE0B,EAChCrK,KAAKqJ,QAAU/B,GAAY1M,GAC3BoF,KAAKqK,OAASzC,GAAWhN,G,8CAG3B,WACE,IAAM4lB,EAAOxgB,KACbA,KAAKqO,MAAQ2R,MAAK,WAAY,IAAD,OAC3BhgB,KAAKygB,IAAKT,KAAaU,cAAc,KAAM,KAAM,KAAM,KAAM,OAC7D1gB,KAAK4W,IAAI,MACT5W,KAAK2gB,MAAM,MACX3gB,KAAK2gB,MAAM,OAAQ,CAACC,MAAO,KAC3B5gB,KAAK2gB,MAAM,iBAAkB,CAACC,MAAO,IACrC5gB,KAAK2gB,MAAM,iBAAkB,CAACC,MAAO,IACrC5gB,KAAK2gB,MAAM,2BAA4B,CAACC,MAAO,IAE/CJ,EAAKnX,QAAQ5B,SAAQ,SAACC,GACpB,IAAMyE,EAAO,CAACzE,EAAKgV,UAAWhV,EAAKoV,UAAU3P,KAAK,KAC5C0T,EApCd,SACEnZ,EACA2B,EACAgB,GAEA,OAAQ3C,EAAKG,MAAQ,IAClBxJ,KAAI,SAAC+c,GAAD,OAAW/Q,EAAOZ,IAAI2R,MAC1B/c,KAAI,SAACyJ,GAAD,OAASA,GAAOA,EAAIkU,QACxB3d,KAAI,SAACyiB,GAAD,OAAYA,GAAUzX,EAAQI,IAAIqX,MACtCziB,KAAI,SAACod,GAAD,OAAaA,GAAWA,EAAQqB,YACpC3P,KAAK,KA0BqB4T,CACrBrZ,EACA8Y,EAAKnX,QACLmX,EAAKnW,QAEP,EAAKkR,IAAI,CACPnZ,GAAIsF,EAAKtF,GACT+J,OACA6U,eAAgBf,GAAU9T,GAC1B0U,iBACAI,yBAA0BhB,GAAUY,a,oBAM5C,SAAcX,GAAgC,IAAD,OACrCgB,EAAQhB,EACX/Q,MAAM,KACNJ,QAAO,SAAC6K,GAAD,QAASA,KAChBvb,KAAI,SAACub,GAAD,iBAAWA,EAAX,QACJzM,KAAK,KAER,OADgBnN,KAAKqO,MAAOqE,OAAOwO,GAEhClX,KAAKoW,IACLnN,MAAM,EA1FO,GA2Fb5U,KAAI,SAAClB,GAAD,MAAa,CAACiF,GAAIjF,EAAOyZ,IAAKlP,KAAM,EAAK2B,QAAQI,IAAItM,EAAOyZ,a,mBC7FvE,SAASuK,GAAYhkB,GACnB,IAAMgP,EAAO,CAAChP,EAAOuK,KAAKgV,UAAWvf,EAAOuK,KAAKoV,UAAU3P,KAAK,KAAKiU,OACrE,OAAIjkB,EAAOiF,GAAGiF,OAAS,EACd8E,EAGP,qCACGA,EADH,IACS,kCAAKhP,EAAOiF,GAAZ,UAgBN,ICrBFif,GDqBQC,GAAb,4MAIElM,MAAe,CACbmM,cAAe,IALnB,EAYEC,eAZF,IAaEC,iBAbF,0DAeE,SAA2B/Z,GACzB,IAAMga,EAAYtU,GAAkB1F,EAAKiC,MAAO3J,KAAK6B,QAAQC,MACvD6f,EAAYvU,GAAkB1F,EAAK+V,MAAOzd,KAAK6B,QAAQC,MAC7D,OAAK6f,EAGC,GAAN,OAAUD,EAAV,mBAAyBC,GAFhBD,IAnBb,iCAyBE,SAA4BvkB,GAC1B,MAAO,CACLiF,GAAIjF,EAAOiF,GACXkV,IAAKna,EAAOiF,GACZmJ,MAAO4V,GAAYhkB,GACnBykB,YAAa5hB,KAAK6hB,mBAAmB1kB,EAAOuK,SA9BlD,0BAmCE,SAAqBwY,GAA4B,IAAD,OAC9C,GAAKA,EAAL,CAGA,IAAM4B,EAAU9hB,KAAKyhB,YAAa/O,OAAOwN,GAAO7hB,KAAI,SAAClB,GAAD,OAClD,EAAK4kB,oBAAoB5kB,MAE3B6C,KAAK+V,SAAS9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAACmM,cAAeO,QA1ChE,gCA8CE,SAA2B1f,GACzB1H,EAAe,0BACfsF,KAAKC,MAAMwB,YAAY,CAACW,KAAIE,WAAY,IACxCtC,KAAKwhB,UAAWQ,SAAS,MAjD7B,mCAoDE,WACEhiB,KAAKyhB,YDsBF,SAA0B7mB,GAC/B,IAAMyT,EAAQ,IAAIkS,GAAgB3lB,GAElC,OADAyT,EAAM4T,aACC5T,ECzBc6T,CAAiBliB,KAAKC,MAAMrF,QArDnD,+BAwDE,WACEoF,KAAKmiB,0BAzDT,gCA4DE,SAAmBte,GACbA,EAAUjJ,OAASoF,KAAKC,MAAMrF,MAChCoF,KAAKmiB,0BA9DX,oBAkEE,WAAU,IAAD,OACP,OACE,cAACC,GAAA,EAAD,CACEC,eAAgBC,MACd,SAACC,EAAkC3nB,GAAnC,OACE,EAAK4nB,aAAa5nB,EAAKia,SACzB,KAEF4N,eAAgB,SAACF,EAAG3nB,GAAJ,OAAa,EAAK8nB,mBAAmB9nB,EAAKuC,OAAOiF,KACjE0f,QAAS9hB,KAAKoV,MAAMmM,cACpBoB,iBAAkB3iB,KAAK6B,QAAQC,KAAKiL,cAAc,CAChD3K,GAAI,yBACJ4K,eAAgB,qBAElByJ,YAAazW,KAAK6B,QAAQC,KAAKiL,cAAc,CAC3C3K,GAAI,0BACJ4K,eAAgB,sBAElB4V,mBAAmB,EACnBhM,IAAK,SAACA,GAAD,OACF,EAAK4K,UAAa5K,GAIrBxU,GAAG,eA1FX,GAA+BuE,aAAlB2a,GAQJ1a,aAAe,CACpB9E,KAAM+E,K,SC9BLwa,O,iBAAAA,I,kBAAAA,Q,KA0BE,ICnCKwB,GCgEPC,GF7BQC,GAAb,gKACE,SAAmBC,GACjB,IAAM9N,EAAWlV,KAAKC,MAAMiV,SACtBxC,EAASC,QAAkBuC,EAASxC,QACtCA,EAAOsQ,OAASA,IAClBtQ,EAAOsQ,KAAOA,EACd9N,EAASxC,OAASC,YAAsBD,GACxC1S,KAAKC,MAAMkV,QAAQ7J,KAAK4J,MAP9B,wBAWE,SAAmB+N,GAAyB,IAAD,OACzC,IAAKjjB,KAAKC,MAAMijB,aACd,OAAO,KAET,IAAMC,EACJ,qCACE,eAAChP,GAAA,EAASD,KAAV,CAAejQ,QAAS,kBAAM,EAAKmf,WAAW,cAA9C,UACE,cAAC9N,GAAA,EAAD,CAAMnJ,KAAK,cACX,cAAC,IAAD,CACE/J,GAAG,iBACH4K,eAAe,uBAGlBhN,KAAKC,MAAMojB,uBACV,eAAClP,GAAA,EAASD,KAAV,CAAejQ,QAAS,kBAAM,EAAKmf,WAAW,cAA9C,UACE,cAAC9N,GAAA,EAAD,CAAMnJ,KAAK,UACX,cAAC,IAAD,CACE/J,GAAG,iBACH4K,eAAe,qBAGjB,KACJ,eAACmH,GAAA,EAASD,KAAV,CAAejQ,QAAS,kBAAM,EAAKmf,WAAW,UAA9C,UACE,cAAC9N,GAAA,EAAD,CAAMnJ,KAAK,UACX,cAAC,IAAD,CACE/J,GAAG,aACH4K,eAAe,oCAKvB,OAAQiW,GACN,KAAK5B,GAAWiC,MACd,OACE,qCACE,eAACrP,GAAA,EAAKC,KAAN,CAAWjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcC,WAAnD,UACE,cAAClO,GAAA,EAAD,CAAMnJ,KAAK,UACX,cAAC,IAAD,CAAkB/J,GAAG,aAAa4K,eAAe,aAGnD,cAACmH,GAAA,EAAD,CACEsP,QACE,gCACE,cAACnO,GAAA,EAAD,CAAMnJ,KAAK,aACX,cAAC,IAAD,CACE/J,GAAG,gBACH4K,eAAe,gBAIrBhJ,UAAU,OAVZ,SAYE,eAACmQ,GAAA,EAASF,KAAV,WACE,cAACE,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcG,iBAD1C,SAGE,cAAC,IAAD,CACEthB,GAAG,gBACH4K,eAAe,eAGnB,cAACmH,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcI,iBAD1C,SAGE,cAAC,IAAD,CACEvhB,GAAG,gBACH4K,eAAe,eAGnB,cAACmH,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcK,iBAD1C,SAGE,cAAC,IAAD,CACExhB,GAAG,gBACH4K,eAAe,oBAMvB,cAACmH,GAAA,EAAD,CACEsP,QACE,gCACE,cAACnO,GAAA,EAAD,CAAMnJ,KAAK,QACX,cAAC,IAAD,CAAkB/J,GAAG,YAAY4K,eAAe,YAGpDhJ,UAAU,OAPZ,SASE,cAACmQ,GAAA,EAASF,KAAV,UAAgBkP,MAElB,cAAC,GAAD,aACEvoB,KAAMoF,KAAKC,MAAMrF,KACjB6G,YAAazB,KAAKC,MAAMsjB,cAAc9hB,aAClCzB,KAAKC,WAKjB,KAAKohB,GAAWwC,MACd,OACE,qCACE,eAAC1P,GAAA,EAASD,KAAV,CAAejQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcC,WAAvD,UACE,cAAClO,GAAA,EAAD,CAAMnJ,KAAK,UACX,cAAC,IAAD,CAAkB/J,GAAG,aAAa4K,eAAe,aAGnD,cAACmH,GAAA,EAAS2P,QAAV,IAEA,eAAC3P,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcG,iBAD1C,UAGE,cAACpO,GAAA,EAAD,CAAMnJ,KAAK,aACX,cAAC,IAAD,CACE/J,GAAG,oBACH4K,eAAe,mBAGnB,eAACmH,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcI,iBAD1C,UAGE,cAACrO,GAAA,EAAD,CAAMnJ,KAAK,aACX,cAAC,IAAD,CACE/J,GAAG,oBACH4K,eAAe,oBAGnB,eAACmH,GAAA,EAASD,KAAV,CACEjQ,QAAS,kBAAM,EAAKhE,MAAMsjB,cAAcK,iBAD1C,UAGE,cAACtO,GAAA,EAAD,CAAMnJ,KAAK,aACX,cAAC,IAAD,CACE/J,GAAG,oBACH4K,eAAe,oBAInB,cAACmH,GAAA,EAAS2P,QAAV,IACCX,EACD,cAAChP,GAAA,EAAS2P,QAAV,UAtJZ,mBA4JE,WACE,OACE,cAAC7P,GAAA,EAAKC,KAAN,UACE,qDA/JR,uBAoKE,SAAkB+O,GAEhB,IAAKjjB,KAAKC,MAAMqe,YAActe,KAAKC,MAAM8jB,kBACvC,OAAQd,GACN,KAAK5B,GAAWiC,MACd,OAAO,cAAC,GAAD,aAActP,SAAUH,GAASI,MAAUjU,KAAKC,QACzD,KAAKohB,GAAWwC,MACd,OACE,qCACE,cAAC,GAAD,aAAc7P,SAAUH,GAASM,UAAcnU,KAAKC,QACpD,cAACkU,GAAA,EAAS2P,QAAV,OAOV,IAAK9jB,KAAKC,MAAMqe,WACd,OAAO,KAGT,OAAQ2E,GACN,KAAK5B,GAAWiC,MA0Bd,OAvBctjB,KAAKC,MAAMijB,aACvB,cAAC/O,GAAA,EAAD,CACEsP,QACE,gCACE,cAACnO,GAAA,EAAD,CAAMnJ,KAAK,gBACX,cAAC,IAAD,CAAkB/J,GAAG,YAAY4K,eAAe,YAGpDhJ,UAAU,OAPZ,SASE,eAACmQ,GAAA,EAASF,KAAV,WACE,cAAC,GAAD,aAAYD,SAAUH,GAASM,UAAcnU,KAAKC,QAClD,cAAC,GAAD,aAAS+T,SAAUH,GAASM,UAAcnU,KAAKC,QAC/C,cAAC,GAAD,aAAc+T,SAAUH,GAASM,UAAcnU,KAAKC,aAIxD,qCACE,cAAC,GAAD,aAAY+T,SAAUH,GAASI,MAAUjU,KAAKC,QAC9C,cAAC,GAAD,aAAS+T,SAAUH,GAASI,MAAUjU,KAAKC,QAC3C,cAAC,GAAD,aAAc+T,SAAUH,GAASI,MAAUjU,KAAKC,WAKtD,KAAKohB,GAAWwC,MACd,OACE,qCACE,cAAC,GAAD,aAAY7P,SAAUH,GAASM,UAAcnU,KAAKC,QAClD,cAAC,GAAD,aAAS+T,SAAUH,GAASM,UAAcnU,KAAKC,QAC/C,cAAC,GAAD,aAAc+T,SAAUH,GAASM,UAAcnU,KAAKC,QACpD,cAACkU,GAAA,EAAS2P,QAAV,UA5NZ,+BAkOE,SAA0Bb,GACxB,OAAKjjB,KAAKC,MAAM8jB,kBAId,qCACE,cAAC,GAAD,aACE/P,SACEiP,IAAe5B,GAAWwC,MAAQhQ,GAASM,SAAWN,GAASI,MAE7DjU,KAAKC,QAEVgjB,IAAe5B,GAAWwC,MAAQ,cAAC1P,GAAA,EAAS2P,QAAV,IAAuB,QAVrD,OApOb,yBAmPE,WACE,OACE,qCACE,cAAC3P,GAAA,EAAD,CACEsP,QACE,8BACE,cAACnO,GAAA,EAAD,CAAMnJ,KAAK,cAGfnI,UAAU,OACVggB,KAAM,KAPR,SASE,eAAC7P,GAAA,EAASF,KAAV,WACGjU,KAAKikB,UAAU5C,GAAWwC,OAC1B7jB,KAAKkkB,WAAW7C,GAAWwC,OAC3B7jB,KAAKmkB,kBAAkB9C,GAAWwC,OAEnC,cAAC1P,GAAA,EAASD,KAAV,CACE3W,KAAK,wCACLL,OAAO,SACP0hB,IAAI,sBAHN,SAKE,cAAC,IAAD,CACExc,GAAG,cACH4K,eAAe,0BAKtBhN,KAAKC,MAAMqe,WACV,cAAC,KAAD,CAAM9Q,GAAG,IAAT,SAAcxN,KAAKuL,UAEnBvL,KAAKuL,aAnRf,0BAyRE,WACE,OACE,qCACGvL,KAAKC,MAAMqe,WAAa,cAAC,KAAD,CAAM9Q,GAAG,IAAT,SAAcxN,KAAKuL,UAAkB,KAC7DvL,KAAKikB,UAAU5C,GAAWiC,OAC1BtjB,KAAKkkB,WAAW7C,GAAWiC,OAC5B,eAACrP,GAAA,EAAKA,KAAN,CAAWlP,SAAS,QAApB,UACG/E,KAAKmkB,kBAAkB9C,GAAWiC,OACnC,cAACrP,GAAA,EAAKC,KAAN,CACE3W,KAAK,wCACLL,OAAO,SACP0hB,IAAI,sBAHN,SAKE,cAAC,IAAD,CACExc,GAAG,cACH4K,eAAe,6BAxS7B,oBAgTE,WACE,OACE,qCACE,cAAClJ,EAAA,EAAD,CACEqP,GAAIc,KACJmQ,SAAS,MACTC,UAAQ,EACRC,MAAM,OACNrpB,KAAK,QACL8I,SAAU,IANZ,SAQG/D,KAAKukB,iBAER,cAACzgB,EAAA,EAAD,CACEqP,GAAIc,KACJmQ,SAAS,MACTC,UAAQ,EACRC,MAAM,OACNrpB,KAAK,QACL0Y,SAAU,IANZ,SAQG3T,KAAKwkB,uBArUhB,GAA4B7d,aEP5B,SAAS8d,GAAaxkB,GACpB,OACE,eAACykB,GAAA,EAAD,CAASC,UAAQ,EAAC3gB,UAAU,QAA5B,UACE,cAAC0gB,GAAA,EAAQrR,OAAT,UACE,cAAC,IAAD,CACEjR,GAAG,4BACH4K,eAAgB,0BAGpB,4BAAI/M,EAAM+G,aAchB,SAAS4d,GAAW3kB,GAClB,OACE,cAAC4kB,GAAA,EAAD,CAAQ1f,KAAMlF,EAAMkF,KAAM+Q,QAASjW,EAAM6kB,UAAzC,SACE,eAACJ,GAAA,EAAD,CAASC,UAAQ,EAAC3gB,UAAU,aAAa8gB,UAAW7kB,EAAM6kB,UAA1D,UACE,cAACJ,GAAA,EAAQrR,OAAT,UACE,cAAC,IAAD,CAAkBjR,GAAG,cAAc4K,eAAgB,YAErD,4BAAI/M,EAAM+G,eAkClB,SAAS+d,GAAa7P,GACpB,IAAMxC,EAASC,QAAkBuC,EAASxC,QACpCsS,EAAW,SAAC7Y,GAChB,IAAM0I,EAAQnC,EAAOvG,GACrB,MAAwB,kBAAV0I,EAAqBA,OAAQtI,GAGvCyW,EAAOgC,EAAS,QAChBC,EAAa,IAAI1d,IAAmC,CACxD,CAAC,YAAaxM,EAAUsF,WACxB,CAAC,QAAStF,EAAUwF,SAGhBiR,EAAOwT,EAAS,QAChB7Z,EAAM6Z,EAAS,OACfE,EAAoC,SAAzBF,EAAS,YACtBG,OAAyC5Y,EAClB,aAAvByY,EAAS,UACXG,EAAa,CACXrT,OAAQ+Q,GAAeuC,SACvBpM,SAAUgM,EAAS,cAEZxT,EACT2T,EAAa,CACXrT,OAAQ+Q,GAAewC,SACvB7T,OACArI,OAAQ+L,EAASE,OAASF,EAASE,MAAMxa,KACzCoD,OAAQkX,EAASE,OAASF,EAASE,MAAMpX,QAElCmN,EACTga,EAAa,CACXrT,OAAQ+Q,GAAeyC,WACvBna,MACA2F,WAAuC,UAA3BkU,EAAS,eAEdE,IACTC,EAAa,CAACrT,OAAQ+Q,GAAe0C,WAGvC,IAAM7d,EAAOsd,EAAS,QAChBQ,EAAYjhB,OAAOygB,EAAS,QAKlC,MAAO,CACLG,aACAhjB,UANgBuF,EACd,CAACtF,GAAIsF,EAAMpF,WAAamjB,MAAMD,GAAyB,EAAZA,QAC3CjZ,EAMFrM,UAAW+kB,EAAWxb,IAAIuZ,IAASjoB,EAAUoF,UAE7CulB,cAAyC,UAA1BV,EAAS,aACxB1G,WAAuC,UAA3B0G,EAAS,gBAA8BE,EACnDnkB,gBAAwC,SAAvBikB,EAAS,Y,SDjJlBnC,O,uBAAAA,I,2BAAAA,I,uBAAAA,I,wBAAAA,Q,cCgEPC,O,qBAAAA,I,qBAAAA,I,iBAAAA,I,iCAAAA,I,gCAAAA,Q,KAyHE,IAAM6C,GAAb,4MACEvQ,MAAe,CACbA,MAAO0N,GAAS8C,QAChBtH,YAAY,EACZpe,UAAWnF,EAAUoF,UACrB0lB,gBAAgB,GALpB,EAOEC,SAAyB,KAP3B,EA6CmBC,mBAAqB,IAAIrU,GA7C5C,EA8CmBsU,oBAAsB,IAAI/T,GA9C7C,EA+CmBgU,mBAAqB,IAAI9H,GACxC,EAAKtc,QAAQC,MAhDjB,EAkDmBokB,mBAAqB,IAAIhU,GAlD5C,EAsMUzQ,YAAc,SAACU,GAErB,IAAIA,EAAUC,GAAGoJ,WAAW2L,IAA5B,CAGAzc,EAAe,qBACf,IAAMwa,EAAW,EAAKjV,MAAMiV,SACtBxC,EAASC,QAAkBuC,EAASxC,QAC1CA,EAAOhL,KAAOvF,EAAUC,GACxBsQ,EAAOyT,IAAM7hB,OAAOnC,EAAUG,YAC9B4S,EAASxC,OAASC,YAAsBD,GACxC,EAAKzS,MAAMkV,QAAQ7J,KAAK4J,KAjN5B,EAoNUsO,QAAU,WAChB9oB,EAAe,SACf,EAAKorB,UAAY,EAAKA,SAASpgB,SAtNnC,EAuOUge,cAvOV,sBAuO0B,sBAAApmB,EAAA,yDACtB5C,EAAe,gBADO,cAGpB,EAAKorB,UAHe,qCAGI,EAAKA,SAASM,cAHlB,uDAKpB,EAAKP,eACH,EAAKhkB,QAAQC,KAAKiL,cAAc,CAC9B3K,GAAI,mBACJ4K,eACE,6FATc,yDAvO1B,EAuPU2W,cAvPV,sBAuP0B,sBAAArmB,EAAA,yDACtB5C,EAAe,gBADO,cAGpB,EAAKorB,UAHe,qCAGI,EAAKA,SAASO,cAHlB,uDAKpB,EAAKR,eACH,EAAKhkB,QAAQC,KAAKiL,cAAc,CAC9B3K,GAAI,mBACJ4K,eACE,6FATc,yDAvP1B,EAuQU4W,cAAgB,WACtBlpB,EAAe,gBACf,EAAKorB,UAAY,EAAKA,SAASQ,eAzQnC,EA4QUC,oBAAsB,WAC5B,EAAKxQ,SACH9L,OAAOC,OAAO,GAAI,EAAKkL,MAAO,CAC5ByQ,gBAAgB,MA/QxB,EAoRUW,eAAiB,WACvB,OAAQ,EAAKpR,MAAMA,OACjB,KAAK0N,GAAS2D,cACd,KAAK3D,GAAS4D,aACZ,OACE,sBAAKtkB,GAAG,UAAR,UACE,cAACwiB,GAAD,CACEzf,KAAM,EAAKiQ,MAAMyQ,eACjB7e,QAAS,EAAKoO,MAAMuR,MACpB7B,UAAW,EAAKyB,sBAEjB,EAAKnR,MAAMA,QAAU0N,GAAS4D,aAC7B,cAACE,GAAA,EAAD,CAAQC,QAAM,EAAC5rB,KAAK,QAAQ+I,UAAU,iBACpC,KACJ,cAAC,EAAD,CACEpJ,KAAM,EAAKwa,MAAMxa,KAAM0V,UACvBnO,UAAW,EAAKiT,MAAMjT,UACtBjC,UAAW,EAAKkV,MAAMlV,UACtBuB,YAAa,EAAKA,YAClBV,gBAAiB,EAAKqU,MAAMrU,gBAC5B6V,IAAK,SAACA,GAAD,OAAU,EAAKkP,SAAWlP,KAEhC,EAAKxB,MAAMsQ,cACV,cAAC5hB,EAAA,EAAD,CAAYC,SAAU,IAAK3B,GAAG,YAA9B,SACE,cAAC,GAAD,CACE+G,OAAQ,EAAKiM,MAAMxa,KAAMuO,OACzBzB,KAAM,EAAK0N,MAAMjT,UAAWC,OAG9B,QAIV,KAAK0gB,GAASgE,MACZ,OAAO,cAACrC,GAAD,CAAczd,QAAS,EAAKoO,MAAMuR,QAE3C,KAAK7D,GAAS8C,QACd,KAAK9C,GAASiE,QACZ,OAAO,cAACH,GAAA,EAAD,CAAQC,QAAM,EAAC5rB,KAAK,YA1TnC,mDAeE,SACEkH,EACA6kB,GAjDJ,IAA6B5R,EAAU6R,IAoDhCjnB,KAAKoV,MAAMjT,WACZnC,KAAKoV,MAAMjT,UAAUC,KAAOD,EAAUC,IACtCpC,KAAKoV,MAAMjT,UAAWG,aAAeH,EAAUG,aAtDxB8S,EAuDNpV,KAAKoV,OAvDW6R,EAuDJD,IAnD1B/c,OAAOjC,QAAQif,GAAStb,MAC7B,mCAAE2L,EAAF,KAAOzC,EAAP,iBAA4BtI,IAAVsI,GAAuBO,EAAMkC,KAASzC,QAoDtD7U,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAACjT,aAAY6kB,MA1BnD,sBAgCE,SAAiBL,GACf3mB,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BA,MAAO0N,GAASgE,MAChBH,aApCR,+BAyCE,WACE3mB,KAAKknB,uBA1CT,uBAoDE,SAAkB/B,EAA4BhjB,GAC5C,IACGnC,KAAKoV,MAAM+P,YACZnlB,KAAKoV,MAAM+P,WAAWrT,SAAWqT,EAAWrT,OAG5C,OAAO,EAET,IAAMH,EAAY,CAACE,KAAMsT,EAAYhjB,aAC/BglB,EAAW,CACftV,KAAM7R,KAAKoV,MAAM+P,WACjBhjB,UAAWnC,KAAKoV,MAAMjT,WAExB,OAAQwP,EAAUE,KAAKC,QACrB,KAAK+Q,GAAewC,SAClB,OAAOrlB,KAAK+lB,mBAAmBqB,UAC7BzV,EACAwV,EACAnnB,KAAKoV,MAAMxa,MAEf,KAAKioB,GAAeyC,WAClB,OAAOtlB,KAAKgmB,oBAAoBoB,UAC9BzV,EACAwV,EACAnnB,KAAKoV,MAAMxa,MAEf,KAAKioB,GAAeuC,SAClB,OAAOplB,KAAKimB,mBAAmBmB,UAC7BzV,EACAwV,EACAnnB,KAAKoV,MAAMxa,MAEf,KAAKioB,GAAe0C,SAClB,OAAOvlB,KAAKkmB,mBAAmBkB,UAC7BzV,EACAwV,EACAnnB,KAAKoV,MAAMxa,SAxFrB,sBA6FE,SAAiBuqB,EAA4BhjB,GAC3C,OAAQgjB,EAAWrT,QACjB,KAAK+Q,GAAewC,SAClB,OAAOrlB,KAAK+lB,mBAAmBsB,SAAS,CAACxV,KAAMsT,EAAYhjB,cAC7D,KAAK0gB,GAAeyC,WAClB,OAAOtlB,KAAKgmB,oBAAoBqB,SAAS,CAACxV,KAAMsT,EAAYhjB,cAC9D,KAAK0gB,GAAeuC,SAClB,OAAOplB,KAAKimB,mBAAmBoB,SAAS,CAACxV,KAAMsT,EAAYhjB,cAC7D,KAAK0gB,GAAe0C,SAClB,OAAOvlB,KAAKkmB,mBAAmBmB,SAAS,CAACxV,KAAMsT,EAAYhjB,iBAtGnE,uEA0GE,sCAAA7E,EAAA,yDACuC,UAAjC0C,KAAKC,MAAMiV,SAASzC,SAD1B,uBAEQzS,KAAKoV,MAAMA,QAAU0N,GAAS8C,SAChC5lB,KAAK+V,SAAS9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAACA,MAAO0N,GAAS8C,WAHnE,8BAQQ/kB,EAAOkkB,GAAa/kB,KAAKC,MAAMiV,WAE3BiQ,WAVZ,gBAWInlB,KAAKC,MAAMkV,QAAQlH,QAAQ,CAACwE,SAAU,MAX1C,0BAaIzS,KAAKoV,MAAMA,QAAU0N,GAAS8C,UAC9B5lB,KAAKonB,UAAUvmB,EAAKskB,WAAYtkB,EAAKsB,WAdzC,wBAiBInC,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BA,MAAO0N,GAASiE,QAChB5B,WAAYtkB,EAAKskB,WACjBhjB,UAAWtB,EAAKsB,UAChBmc,WAAYzd,EAAKyd,WACjBpe,UAAWW,EAAKX,aAvBxB,oBA2ByBF,KAAKqnB,SAASxmB,EAAKskB,WAAYtkB,EAAKsB,WA3B7D,QA2BYvH,EA3BZ,OA6BMoF,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BA,MAAO0N,GAAS2D,cAChB7rB,OACAuH,UAAW8N,GAAarV,EAAK0V,UAAWzP,EAAKsB,WAC7CujB,cAAe7kB,EAAK6kB,iBAlC9B,mDAsCM1lB,KAAKsnB,UCtUkBX,EDsUM,EAAD,GCtUS7kB,EDsUD9B,KAAK6B,QAAQC,KCrUjD6kB,aAAiB7f,GAGhBhF,EAAKiL,cACV,CACE3K,GAAG,SAAD,OAAWukB,EAAM5f,MACnBiG,eAAgB2Z,EAAM3f,SAExB2f,EAAM9lB,MAPC8lB,EAAM3f,UD8Rf,mCAyCIhH,KAAKoV,MAAMA,QAAU0N,GAAS2D,eAC9BzmB,KAAKoV,MAAMA,QAAU0N,GAAS4D,aA1ClC,oBA6CUvkB,EAAY8N,GAChBjQ,KAAKoV,MAAMxa,KAAM0V,UACjBzP,EAAKsB,WAEDolB,EACJ1mB,EAAKskB,WAAWrT,SAAW+Q,GAAeuC,YACxCplB,KAAKoV,MAAMjT,WAAanC,KAAKoV,MAAMjT,UAAUC,KAAOD,EAAUC,IAClEpC,KAAKwnB,cAAcrlB,EAAW,CAC5BjC,UAAWW,EAAKX,UAChBkV,MAAOmS,EACHzE,GAAS4D,aACT5D,GAAS2D,iBAEXc,EA1DR,4CA4D2BpO,GACjBtY,EAAKsB,UAAWC,GAChBpC,KAAK6B,QAAQC,MA9DvB,QA4DclH,EA5Dd,OAgEcuH,EAAY8N,GAAarV,EAAK0V,UAAWzP,EAAKsB,WACpDnC,KAAK+V,SACH9L,OAAOC,OAAO,GAAIlK,KAAKoV,MAAO,CAC5BA,MAAO0N,GAAS2D,cAChB7rB,OACAuH,eArEZ,mDAyEQnC,KAAK6lB,eACH7lB,KAAK6B,QAAQC,KAAKiL,cAChB,CACE3K,GAAI,kCACJ4K,eAAgB,8CAElB,CAAC2Z,MAAK,OAER,CAACvR,MAAO0N,GAAS2D,gBAjF3B,kCChSK,IAAwBE,EAAc7kB,IDgS3C,8BA1GF,kFAyNE,SAAuBkF,EAAiBggB,GACtChnB,KAAK+V,SACH9L,OAAOC,OACL,GACAlK,KAAKoV,MACL,CACEyQ,gBAAgB,EAChBc,MAAO3f,GAETggB,MAlOR,oBA8TE,WAAU,IAAD,OACP,OACE,qCACE,cAAC,KAAD,CACE/kB,OAAQ,SAAChC,GAAD,eACN,cAAC,GAAD,2BACMA,GADN,IAEErF,KAAM,EAAKwa,MAAMxa,MAAQ,EAAKwa,MAAMxa,KAAK0V,UACzC+S,wBACE,YAAKjO,MAAM+P,kBAAX,eAAuBrT,UAAW+Q,GAAeuC,SAEnDlC,aAC2C,UAAzC,EAAKjjB,MAAMkV,QAAQD,SAASzC,WAC3B,EAAK2C,MAAMA,QAAU0N,GAAS2D,eAC7B,EAAKrR,MAAMA,QAAU0N,GAAS4D,cAElCpI,WAAY,EAAKlJ,MAAMkJ,WACvBiF,cAAe,CACb9hB,YAAa,EAAKA,YAClB+hB,QAAS,EAAKA,QACdE,cAAe,EAAKA,cACpBC,cAAe,EAAKA,cACpBC,cAAe,EAAKA,eAEtBG,mBACE,YAAK3O,MAAM+P,kBAAX,eAAuBrT,UAAW+Q,GAAeuC,eAKzD,eAAC,KAAD,WACE,cAAC,KAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAW/U,KACjC,cAAC,KAAD,CAAO6U,OAAK,EAACC,KAAK,QAAQzlB,OAAQjC,KAAKwmB,iBACvC,cAAC,KAAD,CAAUhZ,GAAI,gBA/VxB,GAAyB7G,aAAZgf,GAUJ/e,aAAe,CACpB9E,KAAM+E,K,mCElLV+gB,YAAc,GAAD,mBACRC,GADQ,YAERC,GAFQ,YAGRC,GAHQ,YAIRC,GAJQ,YAKRC,GALQ,YAMRC,KAGL,IAAMC,GAAW,CACfC,GAAIC,EACJC,GAAIC,EACJC,GAAIC,EACJC,GAAIC,EACJC,GAAIC,GAEAC,GAAWC,UAAUD,UAAYC,UAAUD,SAAS3Z,MAAM,QAAQ,GAElE6Z,GAAUC,eAEZD,IAA4B,OAAjBA,GAAQ7c,KACrB+c,SACE,qIAIApqB,SAAS2F,cAAc,UAGzBykB,SACE,cAAC,IAAD,CAActnB,OAAQknB,GAAUX,SAAUA,GAASW,IAAnD,SACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAOnB,UAAWhC,SAGtB7mB,SAAS2F,cAAc,Y","file":"static/js/main.033f4890.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as React from 'react';\nimport {select, Selection} from 'd3-selection';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {intlShape} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Responsive} from 'semantic-ui-react';\nimport {saveAs} from 'file-saver';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport 'd3-transition';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && this.props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <Responsive minWidth={768} className=\"zoom\">\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </button>\n          <button\n            className=\"zoom-out\"\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\n          >\n            −\n          </button>\n        </Responsive>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\n      'width',\n      String(Number(svg.getAttribute('width')) / scale),\n    );\n    svg.setAttribute(\n      'height',\n      String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await this.drawOnCanvas();\n    const doc = new jspdf({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: InjectedIntl,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './util/date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN', 'CENS'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  const normalizedTag = tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image, Responsive} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  const contents = (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.examples\"\n          defaultMessage={\n            'Here are some examples from the web that you can view:'\n          }\n        />\n      </p>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n            text=\"Harry Potter\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://famousfamilytrees.blogspot.com/\">\n            Famous Family Trees\n          </a>\n          )\n        </li>\n      </ul>\n      <p>\n        <b>\n          <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n        </b>\n        {': '}\n        <FormattedMessage\n          id=\"intro.privacy_note\"\n          defaultMessage={\n            'When using the \"load from file\" option, this site does not' +\n            ' send your data anywhere and files loaded from disk do not' +\n            ' leave your computer. When using \"load from URL\", data is' +\n            ' passed through the {link} service to deal with an issue with' +\n            ' cross-site file loading in the browser (CORS).'\n          }\n          values={{\n            link: (\n              <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>\n            ),\n          }}\n        />\n      </p>\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Responsive as={Card.Content} minWidth={768}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Responsive>\n        <Card.Content>\n          <Responsive as={Grid} minWidth={768}>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>{contents}</Grid.Column>\n            </Grid.Row>\n          </Responsive>\n          <Responsive maxWidth={767}>\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            {contents}\n          </Responsive>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport class MenuItem extends React.Component<\n  Props & MenuItemProps & DropdownItemProps\n> {\n  render() {\n    const newProps = {...this.props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <Menu.Item {...newProps}>{this.props.children}</Menu.Item>\n        ) : (\n          <Dropdown.Item {...newProps}>{this.props.children}</Dropdown.Item>\n        )}\n      </>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport class UploadMenu extends React.Component<RouteComponentProps & Props> {\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  render() {\n    const content = (\n      <>\n        <Icon name=\"folder open\" />\n        <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n      </>\n    );\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <label htmlFor=\"fileInput\">\n            <Menu.Item as=\"a\">{content}</Menu.Item>\n          </label>\n        ) : (\n          <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n            {content}\n          </Dropdown.Item>\n        )}\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n      </>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  url?: string;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport class UrlMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {dialogOpen: false};\n\n  inputRef: React.RefObject<Input> = React.createRef();\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      this.inputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: value,\n      }),\n    );\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e, data) => this.handleUrlChange(data.value)}\n              ref={this.inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          onClick={() => this.openDialog()}\n          menuType={this.props.menuType}\n        >\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </MenuItem>\n        {this.loadFromUrlModal()}\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\nimport {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {Date, DateOrRange, JsonFam, JsonIndi} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\nimport {TopolaError} from '../util/error';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  RealName: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returnes the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: InjectedIntl,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: InjectedIntl): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n      ],\n    };\n    if (!indi.id.startsWith('~')) {\n      gedcomIndis[indi.id].tree.push({\n        level: 1,\n        pointer: '',\n        tag: 'WWW',\n        data: `https://www.wikitree.com/wiki/${escapedId}`,\n        tree: [],\n      });\n    }\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: InjectedIntl) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {getLoggedInUserName} from '../datasource/wikitree';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Header, Button, Modal, Input, Form} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  wikiTreeId?: string;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport class WikiTreeMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    dialogOpen: false,\n  };\n\n  inputRef: React.RefObject<Input> = React.createRef();\n\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      this.inputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  private handleSelectId() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.wikiTreeId) {\n      analyticsEvent('wikitree_id_selected');\n      const search = queryString.parse(this.props.location.search);\n      const standalone =\n        search.standalone !== undefined ? search.standalone : true;\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({\n          indi: this.state.wikiTreeId,\n          source: 'wikitree',\n          standalone,\n        }),\n      });\n    }\n  }\n\n  /** Called when the WikiTree ID input is typed into. */\n  private handleIdChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        wikiTreeId: value,\n      }),\n    );\n  }\n\n  private enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    ((this.inputRef.current as unknown) as {\n      inputRef: HTMLInputElement;\n    }).inputRef.value = id;\n    this.handleIdChange(id);\n    this.inputRef.current!.focus();\n  }\n\n  private wikiTreeIdModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleSelectId()}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              onChange={(e, data) => this.handleIdChange(data.value)}\n              ref={this.inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleSelectId()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          menuType={this.props.menuType}\n          onClick={() => this.openDialog()}\n        >\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.select_wikitree_id\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </MenuItem>\n        {this.wikiTreeIdModal()}\n      </>\n    );\n  }\n}\n\ninterface LoginState {\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport class WikiTreeLoginMenu extends React.Component<\n  RouteComponentProps & Props,\n  LoginState\n> {\n  state: LoginState = {\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginUsername = getLoggedInUserName();\n    const wikiTreeLoginState = wikiTreeLoginUsername\n      ? WikiTreeLoginState.LOGGED_IN\n      : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.checkWikiTreeLoginState();\n  }\n\n  componentDidUpdate() {\n    this.checkWikiTreeLoginState();\n  }\n\n  render() {\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        return (\n          <>\n            <MenuItem\n              menuType={this.props.menuType}\n              onClick={() => this.wikiTreeLogin()}\n            >\n              <img\n                src={wikitreeLogo}\n                alt=\"WikiTree logo\"\n                className=\"menu-icon\"\n              />\n              <FormattedMessage\n                id=\"menu.wikitree_login\"\n                defaultMessage=\"Log in to WikiTree\"\n              />\n            </MenuItem>\n            <form\n              action=\"https://api.wikitree.com/api.php\"\n              method=\"POST\"\n              style={{display: 'hidden'}}\n              ref={this.wikiTreeLoginFormRef}\n            >\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n              <input\n                type=\"hidden\"\n                name=\"returnURL\"\n                ref={this.wikiTreeReturnUrlRef}\n              />\n            </form>\n          </>\n        );\n\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.context.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.context.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        return (\n          <MenuItem menuType={this.props.menuType} title={tooltip}>\n            <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n            <FormattedMessage\n              id=\"menu.wikitree_logged_in\"\n              defaultMessage=\"Logged in\"\n            />\n          </MenuItem>\n        );\n    }\n    return null;\n  }\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function() {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {JsonIndi} from 'topola';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Search, SearchProps, SearchResultProps} from 'semantic-ui-react';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\ninterface State {\n  searchResults: SearchResultProps[];\n}\n\n/** Displays and handles the search box in the top bar. */\nexport class SearchBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    searchResults: [],\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  private getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, this.context.intl);\n    const deathDate = formatDateOrRange(indi.death, this.context.intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  private displaySearchResult(result: SearchResult) {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: this.getDescriptionLine(result.indi),\n    };\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      this.displaySearchResult(result),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    this.searchIndex = buildSearchIndex(this.props.data);\n  }\n\n  componentDidMount() {\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.data !== this.props.data) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  render() {\n    return (\n      <Search\n        onSearchChange={debounce(\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n            this.handleSearch(data.value),\n          200,\n        )}\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n        results={this.state.searchResults}\n        noResultsMessage={this.context.intl.formatMessage({\n          id: 'menu.search.no_results',\n          defaultMessage: 'No results found',\n        })}\n        placeholder={this.context.intl.formatMessage({\n          id: 'menu.search.placeholder',\n          defaultMessage: 'Search for people',\n        })}\n        selectFirstResult={true}\n        ref={(ref) =>\n          (this.searchRef = (ref as unknown) as {\n            setValue(value: string): void;\n          })\n        }\n        id=\"search\"\n      />\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\nimport {Icon, Menu, Dropdown, Responsive} from 'semantic-ui-react';\nimport {SearchBar} from './search';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport class TopBar extends React.Component<RouteComponentProps & Props> {\n  private changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  private chartMenus(screenSize: ScreenSize) {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {this.props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\n                >\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\n                >\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\n                >\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={this.props.data!}\n              onSelection={this.props.eventHandlers.onSelection}\n              {...this.props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  private fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!this.props.standalone && this.props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!this.props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = this.props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...this.props} />\n            <UrlMenu menuType={MenuType.Menu} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!this.props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...this.props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  private mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {this.fileMenus(ScreenSize.SMALL)}\n            {this.chartMenus(ScreenSize.SMALL)}\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {this.props.standalone ? (\n          <Link to=\"/\">{this.title()}</Link>\n        ) : (\n          this.title()\n        )}\n      </>\n    );\n  }\n\n  private desktopMenus() {\n    return (\n      <>\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\n        {this.fileMenus(ScreenSize.LARGE)}\n        {this.chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          minWidth={768}\n        >\n          {this.desktopMenus()}\n        </Responsive>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          maxWidth={767}\n        >\n          {this.mobileMenus()}\n        </Responsive>\n      </>\n    );\n  }\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './util/analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage} from 'react-intl';\nimport {TopolaData} from './util/gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\nimport {getI18nMessage} from './util/error_i18n';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/** Arguments passed to the application, primarily through URL parameters. */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation?: boolean;\n  showSidePanel: boolean;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('?authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n  };\n}\n\n/**\n * Returs true if the changes object has values that are different than those\n * in state.\n */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** State of the application. */\n  state: AppState;\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Error to display. */\n  error?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Specification of the source of the data. */\n  sourceSpec?: DataSourceSpec;\n  /** Freeze animations after initial chart render. */\n  freezeAnimation?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    state: AppState.INITIAL,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        state: AppState.ERROR,\n        error,\n      }),\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  private readonly uploadedDataSource = new UploadedDataSource();\n  private readonly gedcomUrlDataSource = new GedcomUrlDataSource();\n  private readonly wikiTreeDataSource = new WikiTreeDataSource(\n    this.context.intl,\n  );\n  private readonly embeddedDataSource = new EmbeddedDataSource();\n\n  private isNewData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    if (\n      !this.state.sourceSpec ||\n      this.state.sourceSpec.source !== sourceSpec.source\n    ) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: sourceSpec, selection};\n    const oldSouce = {\n      spec: this.state.sourceSpec,\n      selection: this.state.selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          this.state.data,\n        );\n    }\n  }\n\n  private loadData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    switch (sourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.loadData({spec: sourceSpec, selection});\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      if (this.state.state !== AppState.INITIAL) {\n        this.setState(Object.assign({}, this.state, {state: AppState.INITIAL}));\n      }\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (!args.sourceSpec) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      this.state.state === AppState.INITIAL ||\n      this.isNewData(args.sourceSpec, args.selection)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          state: AppState.LOADING,\n          sourceSpec: args.sourceSpec,\n          selection: args.selection,\n          standalone: args.standalone,\n          chartType: args.chartType,\n        }),\n      );\n      try {\n        const data = await this.loadData(args.sourceSpec, args.selection);\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            state: AppState.SHOWING_CHART,\n            data,\n            selection: getSelection(data.chartData, args.selection),\n            showSidePanel: args.showSidePanel,\n          }),\n        );\n      } catch (error) {\n        this.setError(getI18nMessage(error, this.context.intl));\n      }\n    } else if (\n      this.state.state === AppState.SHOWING_CHART ||\n      this.state.state === AppState.LOADING_MORE\n    ) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data!.chartData,\n        args.selection,\n      );\n      const loadMoreFromWikitree =\n        args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        state: loadMoreFromWikitree\n          ? AppState.LOADING_MORE\n          : AppState.SHOWING_CHART,\n      });\n      if (loadMoreFromWikitree) {\n        try {\n          const data = await loadWikiTree(\n            args.selection!.id,\n            this.context.intl,\n          );\n          const selection = getSelection(data.chartData, args.selection);\n          this.setState(\n            Object.assign({}, this.state, {\n              state: AppState.SHOWING_CHART,\n              data,\n              selection,\n            }),\n          );\n        } catch (error) {\n          this.showErrorPopup(\n            this.context.intl.formatMessage(\n              {\n                id: 'error.failed_wikitree_load_more',\n                defaultMessage: 'Failed to load data from WikiTree. {error}',\n              },\n              {error},\n            ),\n            {state: AppState.SHOWING_CHART},\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string, otherStateChanges?: Partial<State>) {\n    this.setState(\n      Object.assign(\n        {},\n        this.state,\n        {\n          showErrorPopup: true,\n          error: message,\n        },\n        otherStateChanges,\n      ),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  private onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    switch (this.state.state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={this.state.showErrorPopup}\n              message={this.state.error}\n              onDismiss={this.onDismissErrorPopup}\n            />\n            {this.state.state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={this.state.data!.chartData}\n              selection={this.state.selection!}\n              chartType={this.state.chartType}\n              onSelection={this.onSelection}\n              freezeAnimation={this.state.freezeAnimation}\n              ref={(ref) => (this.chartRef = ref)}\n            />\n            {this.state.showSidePanel ? (\n              <Responsive minWidth={768} id=\"sidePanel\">\n                <Details\n                  gedcom={this.state.data!.gedcom}\n                  indi={this.state.selection!.id}\n                />\n              </Responsive>\n            ) : null}\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={this.state.error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              data={this.state.data && this.state.data.chartData}\n              allowAllRelativesChart={\n                this.state.sourceSpec?.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                this.props.history.location.pathname === '/view' &&\n                (this.state.state === AppState.SHOWING_CHART ||\n                  this.state.state === AppState.LOADING_MORE)\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeMenus={\n                this.state.sourceSpec?.source === DataSourceEnum.WIKITREE\n              }\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import {InjectedIntl} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: InjectedIntl): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","import * as locale_de from 'react-intl/locale-data/de';\nimport * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_fr from 'react-intl/locale-data/fr';\nimport * as locale_it from 'react-intl/locale-data/it';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as locale_ru from 'react-intl/locale-data/ru';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([\n  ...locale_de,\n  ...locale_en,\n  ...locale_fr,\n  ...locale_it,\n  ...locale_pl,\n  ...locale_ru,\n]);\n\nconst messages = {\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["util/gedcom_util.ts","util/analytics.ts","util/date_util.ts","datasource/data_source.ts","changelog.tsx","util/age_util.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","datasource/wikitree.ts","app.tsx","index.tsx","util/error.ts","datasource/load_data.ts"],"names":["pointerToId","pointer","substring","length","idToIndiMap","data","map","Map","indis","forEach","indi","set","id","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","compareDates","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","parseGedcom","json","gedcomEntriesToJson","TopolaError","chartData","getSoftware","sour","name","getName","person","names","filter","subEntry","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","analyticsEvent","action","window","gtag","DATE_QUALIFIERS","formatDate","date","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","dateElement","join","lowerCaseQualifier","formatMessage","defaultMessage","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","areDateRangesOverlapped","range1","range2","isValidDateOrRange","isDateRangeClosed","range","Date","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","seenVersionDate","parse","slice","changes","process","split","notes","trim","release","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","WrappedImage","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","onLoad","onError","e","currentTarget","alt","src","filename","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","basic","size","closeIcon","Icon","color","onClose","onOpen","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","event","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","render","Tab","Pane","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","type","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","eventNotes","toEvent","family","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","events","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","message","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","loadGedcom","software","event_label","Promise","addEventListener","onMessage","getI18nMessage","error","code","args","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","ViewLink","params","Contents","dateString","values","link","Intro","Card","greaterThanOrEqual","Grid","Row","Column","width","logo","at","MenuType","MenuItem","newProps","menuType","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","initMultiLingualLunrWithoutTrimmer","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","languages","pipelineFunctions","searchPipelineFunctions","language","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","apply","searchPipeline","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","generation","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","event_value","gedcomFile","file","loadFile","URL","createObjectURL","imageFileNames","keys","hash","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","secondary","ScreenSize","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","style","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","username","getLoggedInUserName","returnUrl","navigateToLoginPage","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","inverted","icon","ChartColors","Ids","Sex","DEFALUT_CONFIG","COLOR_BY_GENERATION","SHOW","sex","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","v","k","ID_ARG","HIDE","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","onload","inlineImage","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","body","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","startIndi","selection","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","hideIds","hideSex","WIKITREE_APP_ID","PRIVATE_ID_PREFIX","getSessionStorageItem","sessionStorage","setSessionStorageItem","getApiOptions","handleCors","appId","apiUrl","getAncestors","cacheKey","cachedData","JSON","getAncestorsApi","stringify","getRelatives","keysToFetch","getRelativesApi","getChildren","getSpouses","Name","concat","logInIfNeeded","authcode","clientLogin","clear","getFirstPerson","getSpouseKeys","Spouses","getAllAncestors","ancestors","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","getAllDescendants","everyone","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","loadData","hostname","firstPerson","spouseKeys","allAncestors","allDescendants","convertIndis","families","getFamilyId","getSet","spouse","getFamilies","hideId","FirstName","RealName","LastNameAtBirth","famc","Gender","BirthDate","BirthLocation","BirthDateDecade","parseDate","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","Photo","convertPerson","convertFams","idToName","spouses","wife","familySpouses","child","marriage_date","marriage_location","parsedDate","loadWikiTree","personNames","convertPersonNames","fullSizePhotoUrls","path","buildGedcom","spouse1","spouse2","getMarriedName","LastNameCurrent","nameParts","spousePersonNamePart","personNamePart","name1","name2","StringUtils","compareSimilarityPercent","married","aka","LastNameOther","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","nameToGedcom","level","eventToGedcom","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","Set","AppState","WikiTreeDataSource","spec","staticUrl","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getParamFromSearch","getArguments","chartTypes","embedded","sourceSpec","GEDCOM_URL","windowSearch","WIKITREE","UPLOADED","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setShowWikiTreeMenus","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","toggleDetails","shouldHideIds","shouldHideSex","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","loadMoreFromWikitree","exact","Error","prepareData","cacheId","serializedData","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText"],"mappings":"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","file":"static/js/main.22515e01.chunk.js","sourcesContent":["import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const filePath = image.url.replaceAll('\\\\', '/');\n    const fileName = filePath.match(/[^/]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(filePath)) {\n      newImages.push({url: images.get(filePath)!, title: image.title});\n    } else if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n  const notMarriedName = names.find(\n    (subEntry) =>\n      subEntry.tree.filter(\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n      ).length === 0,\n  );\n  const name = notMarriedName || names[0];\n  return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n    ?.data;\n\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(\n  objectEntry: GedcomEntry,\n): GedcomEntry | undefined {\n  return objectEntry.tree.find(\n    (entry) =>\n      entry.tag === 'FILE' &&\n      entry.data.startsWith('http') &&\n      isImageFile(entry.data),\n  );\n}\n","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = toDateObject(date);\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate]\n    .filter((dateElement) => dateElement)\n    .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\nexport function formatDateQualifier(\n  qualifier: string | undefined,\n  intl: IntlShape,\n): string {\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n  return (\n    (lowerCaseQualifier &&\n      intl.formatMessage({\n        id: `date.${lowerCaseQualifier}`,\n        defaultMessage:\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n      })) ||\n    ''\n  );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n  date1: TopolaDate | undefined,\n  date2: TopolaDate | undefined,\n): number {\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange &&\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange &&\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n  return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n  range1: DateRange,\n  range2: DateRange,\n): boolean {\n  return (\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\n    compareTopolaDates(range1.to, range2.from) >= 0\n  );\n}\n\nexport function isValidDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n): boolean {\n  // invalid when range is closed and start is before end\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\n    return (\n      compareTopolaDates(\n        dateOrRange?.dateRange?.from,\n        dateOrRange?.dateRange?.to,\n      ) <= 0\n    );\n  }\n  //valid when there is exact date or date range has start or end defined\n  return !!(\n    dateOrRange?.date ||\n    dateOrRange?.dateRange?.from ||\n    dateOrRange?.dateRange?.to\n  );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n  return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n  return new Date(\n    date.year !== undefined ? date.year! : 0,\n    date.month !== undefined ? date.month! - 1 : 0,\n    date.day !== undefined ? date.day! : 1,\n  );\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes =\n    process.env.REACT_APP_CHANGELOG?.split('##')\n      .slice(1, maxVersions + 1)\n      .map((notes) => {\n        const date = Date.parse(notes.split('\\n')[0].trim());\n        return {date, notes: '####' + notes};\n      })\n      .filter((release) => release.date > seenVersionDate)\n      .map((release) => release.notes)\n      .join('\\n') || '';\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  areDateRangesOverlapped,\n  compareDates,\n  formatDateQualifier,\n  isDateRangeClosed,\n  isValidDateOrRange,\n  toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\n  const translatedQualifier =\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n  return intl.formatMessage(\n    {\n      id: 'age.exact',\n      defaultMessage:\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears, qualifier: translatedQualifier},\n  );\n}\n\nfunction formatAgeMoreThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.more',\n      defaultMessage:\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeLessThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.less',\n      defaultMessage:\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeBetween(\n  birthDateFrom: TopolaDate,\n  birthDateTo: TopolaDate,\n  deathDateFrom: TopolaDate,\n  deathDateTo: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n  return intl.formatMessage(\n    {\n      id: 'age.between',\n      defaultMessage:\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n  );\n}\n\nfunction canCalculateAge(\n  birthDate: DateOrRange | undefined,\n  deathDate: DateOrRange | undefined,\n): boolean {\n  if (birthDate && deathDate) {\n    // cannot calculate if there is no valid birth or death date\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n      return false;\n    }\n    //cannot calculate if death date is before birth date\n    if (compareDates(birthDate, deathDate) > 0) {\n      return false;\n    }\n    // cannot calculate if closed date range for birth or death are overlapping\n    if (\n      birthDate.dateRange &&\n      deathDate.dateRange &&\n      isDateRangeClosed(birthDate?.dateRange) &&\n      isDateRangeClosed(deathDate?.dateRange)\n    ) {\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction calcDateDifferenceInYears(\n  firstDate: TopolaDate,\n  secondDate: TopolaDate,\n): number {\n  const firstDateObject = toDateObject(firstDate);\n  const secondDateObject = toDateObject(secondDate);\n\n  const startYear = firstDateObject.getUTCFullYear();\n\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n  let monthDiff =\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n  if (monthDiff < 0) {\n    yearDiff--;\n    monthDiff += 12;\n  }\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n  if (dayDiff < 0) {\n    if (monthDiff <= 0) {\n      yearDiff--;\n    }\n  }\n  return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n  birthGedcomDate: string | undefined,\n  deathGedcomDate: string | undefined,\n  intl: IntlShape,\n): string | undefined {\n  if (birthGedcomDate && deathGedcomDate) {\n    const birthDateOrRange = getDate(birthGedcomDate);\n    const deathDateOrRange = getDate(deathGedcomDate);\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n      if (birthDateOrRange?.date) {\n        if (deathDateOrRange?.date) {\n          return formatExactAge(\n            birthDateOrRange.date,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange.date,\n            birthDateOrRange.date,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (\n        birthDateOrRange?.dateRange?.from &&\n        birthDateOrRange?.dateRange?.to\n      ) {\n        if (deathDateOrRange?.date) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.date,\n            deathDateOrRange?.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.from) {\n        if (deathDateOrRange?.date) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.to) {\n        if (deathDateOrRange?.date) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n      }\n    }\n  }\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n  ['birth', 'Birth name'],\n  ['married', 'Married name'],\n  ['maiden', 'Maiden name'],\n  ['immigrant', 'Immigrant name'],\n  ['aka', 'Also known as'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import {\n  Container,\n  Icon,\n  Image,\n  Label,\n  Message,\n  Modal,\n  Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  if (imageLoaded && imageSrc !== props.url) {\n    setImageLoaded(false);\n  }\n  return (\n    <>\n      <Image\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n        onClick={() => setImageOpen(true)}\n        onLoad={() => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(false);\n        }}\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(true);\n          e.currentTarget.alt = '';\n        }}\n        src={props.url}\n        alt={props.title || props.filename}\n        centered={true}\n      />\n      <Placeholder\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n      >\n        <Placeholder.Image square />\n      </Placeholder>\n      {imageFailed && (\n        <Container fluid textAlign=\"center\">\n          <Message negative compact>\n            <Message.Header>\n              <FormattedMessage\n                id=\"error.failed_to_load_image\"\n                defaultMessage={'Failed to load image file'}\n              />\n            </Message.Header>\n          </Message>\n        </Container>\n      )}\n      <Modal\n        basic\n        size=\"large\"\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\n        open={imageOpen}\n        onClose={() => setImageOpen(false)}\n        onOpen={() => setImageOpen(true)}\n        centered={false}\n      >\n        <Modal.Header>{props.title}</Modal.Header>\n        <Modal.Content image>\n          <Image\n            className=\"modal-image\"\n            src={props.url}\n            alt={props.title || props.filename}\n            label={<Label attached=\"bottom\" content={props.filename} />}\n            wrapped\n          />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {\n  Icon,\n  Item,\n  List,\n  Menu,\n  MenuItemProps,\n  Popup,\n  Tab,\n} from 'semantic-ui-react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport * as React from 'react';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from 'topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport interface Source {\n  title?: string;\n  author?: string;\n  page?: string;\n  date?: DateOrRange;\n  publicationInfo?: string;\n}\n\ninterface Props {\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n  return (\n    !!images &&\n    images.map((image, index) => (\n      <List key={index}>\n        <List.Item>\n          <WrappedImage\n            url={image.url}\n            filename={image.filename}\n            title={image.title}\n          />\n        </List.Item>\n      </List>\n    ))\n  );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n  return (\n    !!notes?.length &&\n    notes.map((note, index) => (\n      <div key={index}>\n        <MultilineText\n          lines={note.map((line, index) => (\n            <i key={index}>{line}</i>\n          ))}\n        />\n      </div>\n    ))\n  );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n  return (\n    !!sources?.length && (\n      <List>\n        {sources.map((source, index) => (\n          <List.Item key={index}>\n            <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\" />\n            <List.Content>\n              <List.Header>\n                <Linkify properties={{target: '_blank'}}>\n                  {[source.author, source.title, source.publicationInfo]\n                    .filter((sourceElement) => sourceElement)\n                    .join(', ')}\n                </Linkify>\n              </List.Header>\n              <List.Description>\n                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                {source.date\n                  ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                  : null}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    )\n  );\n}\n\nexport function EventExtras(props: Props) {\n  const intl = useIntl();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [indi, setIndi] = useState('');\n\n  if (!indi || indi !== props.indi) {\n    setActiveIndex(-1);\n    setIndi(props.indi);\n  }\n\n  function handleTabOnClick(\n    event: React.MouseEvent<HTMLAnchorElement>,\n    menuItemProps: MenuItemProps,\n  ) {\n    menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n      ? setActiveIndex(menuItemProps.index)\n      : setActiveIndex(-1);\n  }\n\n  const imageTab = props.images?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"camera\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n  };\n\n  const noteTab = props.notes?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"sticky note outline\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n  };\n\n  const sourceTab = props.sources?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"quote right\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n  };\n\n  const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n    tab ? [tab] : [],\n  );\n\n  if (panes.length) {\n    return (\n      <Item.Description>\n        <Tab\n          className=\"event-extras\"\n          activeIndex={activeIndex}\n          renderActiveOnly={true}\n          menu={{\n            tabular: true,\n            attached: true,\n            compact: true,\n            borderless: true,\n          }}\n          panes={panes}\n        />\n      </Item.Description>\n    );\n  }\n  return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getImageFileEntry,\n  getFileName,\n  getName,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\n\nfunction PersonLink(props: {person: GedcomEntry}) {\n  const location = useLocation();\n\n  const name = getName(props.person);\n\n  const search = queryString.parse(location.search);\n  search['indi'] = pointerToId(props.person.pointer);\n\n  return (\n    <Item.Meta>\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n        {name ? (\n          name\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Link>\n    </Item.Meta>\n  );\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface EventData {\n  type: string;\n  date?: DateOrRange;\n  age?: string;\n  personLink?: GedcomEntry;\n  place?: string[];\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction EventHeader(props: {event: EventData}) {\n  const intl = useIntl();\n  return (\n    <div className=\"event-header\">\n      <Header as=\"span\" size=\"small\">\n        <TranslatedTag tag={props.event.type} />\n      </Header>\n      {props.event.date ? (\n        <Header as=\"span\" textAlign=\"right\" sub>\n          {formatDateOrRange(props.event.date, intl)}\n        </Header>\n      ) : null}\n    </div>\n  );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (!spouseReference) {\n    return undefined;\n  }\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n  eventEntry: GedcomEntry,\n  indi: string,\n  gedcom: GedcomData,\n  intl: IntlShape,\n): string | undefined {\n  if (eventEntry.tag !== 'DEAT') {\n    return undefined;\n  }\n  const deathDate = resolveDate(eventEntry);\n\n  const birthDate = gedcom.indis[indi].tree\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n    .map((birthEvent) => resolveDate(birthEvent))\n    .find((topolaDate) => topolaDate);\n\n  if (!birthDate || !deathDate) {\n    return undefined;\n  }\n  return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n  return entry.tree\n    .filter((subEntry) => 'OBJE' === subEntry.tag)\n    .map((objectEntry) =>\n      dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n    )\n    .map((objectEntry) => getImageFileEntry(objectEntry))\n    .flatMap((imageFileEntry) =>\n      imageFileEntry\n        ? [\n            {\n              url: imageFileEntry?.data || '',\n              filename: getFileName(imageFileEntry) || '',\n            },\n          ]\n        : [],\n    );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n  return entry.tree\n    .filter((subEntry) => 'SOUR' === subEntry.tag)\n    .map((sourceEntryReference) => {\n      const sourceEntry = dereference(\n        sourceEntryReference,\n        gedcom,\n        (gedcom) => gedcom.other,\n      );\n\n      const title = sourceEntry.tree.find(\n        (subEntry) => 'TITL' === subEntry.tag,\n      );\n\n      const abbr = sourceEntry.tree.find(\n          (subEntry) => 'ABBR' === subEntry.tag,\n      );\n\n      const author = sourceEntry.tree.find(\n        (subEntry) => 'AUTH' === subEntry.tag,\n      );\n\n      const publicationInfo = sourceEntry.tree.find(\n        (subEntry) => 'PUBL' === subEntry.tag,\n      );\n\n      const page = sourceEntryReference.tree.find(\n        (subEntry) => 'PAGE' === subEntry.tag,\n      );\n\n      const sourceData = sourceEntryReference.tree.find(\n        (subEntry) => 'DATA' === subEntry.tag,\n      );\n\n      const date = sourceData ? resolveDate(sourceData) : undefined;\n\n      return {\n        title: title?.data || abbr?.data,\n        author: author?.data,\n        page: page?.data,\n        date: date ? getDate(date.data) : undefined,\n        publicationInfo: publicationInfo?.data,\n      };\n    });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n  return entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => getData(note));\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      age: getAge(entry, indi, gedcom, intl),\n      place: eventPlace(entry),\n      images: eventImages(entry, gedcom),\n      notes: eventNotes(entry, gedcom),\n      sources: eventSources(entry, gedcom),\n      indi: indi,\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n): EventData[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      personLink: getSpouse(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      images: eventImages(familyMarriageEvent, gedcom),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n      sources: eventSources(familyMarriageEvent, gedcom),\n      indi: indi,\n    };\n  });\n}\n\nfunction Event(props: {event: EventData}) {\n  return (\n    <Item>\n      <Item.Content>\n        <EventHeader event={props.event} />\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n        {!!props.event.personLink && (\n          <PersonLink person={props.event.personLink} />\n        )}\n        {!!props.event.place && (\n          <Item.Description>{props.event.place}</Item.Description>\n        )}\n        <EventExtras\n          images={props.event.images}\n          notes={props.event.notes}\n          sources={props.event.sources}\n          indi={props.event.indi}\n        />\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\n  );\n  if (events.length) {\n    return (\n      <>\n        {events.map((event, index) => (\n          <Event event={event} key={index} />\n        ))}\n      </>\n    );\n  }\n  return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getFileName,\n  getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <Header sub>\n        <TranslatedTag tag={entry.tag} />\n      </Header>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n  const imageFileEntry = getImageFileEntry(objectEntry);\n\n  return imageFileEntry ? (\n    <div className=\"person-image\">\n      <WrappedImage\n        url={imageFileEntry.data}\n        filename={getFileName(imageFileEntry) || ''}\n      />\n    </div>\n  ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  const fullName = entry.data.replaceAll('/', '');\n\n  const nameType = entry.tree.find(\n    (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n  )?.data;\n\n  return (\n    <>\n      <Header as=\"span\" size=\"large\">\n        {fullName ? (\n          fullName\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Header>\n      {fullName && nameType && (\n        <Item.Meta>\n          <TranslatedTag tag={nameType} />\n        </Item.Meta>\n      )}\n    </>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"details\">\n      <Item.Group divided>\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </Item.Group>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a view. */\nfunction ViewLink(props: {params: {[key: string]: string}; text: string}) {\n  return (\n    <Link to={{pathname: '/view', search: queryString.stringify(props.params)}}>\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString?.slice(0, 16) || '';\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <ViewLink\n            params={{\n              url:\n                'https://chronoplexsoftware.com/myfamilytree/samples/The%20Kennedy%20Family.gdz',\n            }}\n            text=\"J. F. Kennedy\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://chronoplexsoftware.com/myfamilytree/samples/\">\n            chronoplexsoftware.com\n          </a>\n          )\n        </li>\n        <li>\n          <ViewLink\n            params={{\n              url:\n                'https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged&file=shakespeare.ged',\n            }}\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n        <li>\n          <ViewLink\n            params={{\n              indi:\n                'Skłodowska-2', source: 'wikitree'\n            }}\n            text=\"Maria Skłodowska-Curie\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://www.wikitree.com/wiki/Sk%C5%82odowska-2\">\n            wikitree.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topolaproxy.bieda.it/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} greaterThanOrEqual=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} greaterThanOrEqual=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n      self.initMultiLingualLunrWithoutTrimmer(this, [\n        'de',\n        'en',\n        'fr',\n        'it',\n        'ru',\n      ]);\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  private initMultiLingualLunrWithoutTrimmer(\n    lunrInstance: any,\n    languages: string[],\n  ): void {\n    let wordCharacters = '';\n    const pipelineFunctions: PipelineFunction[] = [];\n    const searchPipelineFunctions: PipelineFunction[] = [];\n    languages.forEach((language) => {\n      if (language === 'en') {\n        wordCharacters += '\\\\w';\n        pipelineFunctions.unshift(lunr.stopWordFilter);\n        pipelineFunctions.push(lunr.stemmer);\n        searchPipelineFunctions.push(lunr.stemmer);\n      } else {\n        wordCharacters += lunr[language].wordCharacters;\n        if (lunr[language].stopWordFilter) {\n          pipelineFunctions.unshift(lunr[language].stopWordFilter);\n        }\n        if (lunr[language].stemmer) {\n          pipelineFunctions.push(lunr[language].stemmer);\n          searchPipelineFunctions.push(lunr[language].stemmer);\n        }\n      }\n    });\n    lunrInstance.pipeline.reset();\n    lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n    if (lunrInstance.searchPipeline) {\n      lunrInstance.searchPipeline.reset();\n      lunrInstance.searchPipeline.add.apply(\n        lunrInstance.searchPipeline,\n        searchPipelineFunctions,\n      );\n    }\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `${s} ${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n    const {gedcom, images} = await loadFile(gedcomFile);\n\n    // Convert uploaded images to object URLs.\n    filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n    // Hash GEDCOM contents with uploaded image file names.\n    const imageFileNames = Array.from(images.keys()).sort().join('|');\n    const hash = md5(md5(gedcom) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data: gedcom, images},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topolaproxy.bieda.it/\">\n                      topolaproxy.bieda.it (cors-anywhere proxy)\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  function changeView(view: string) {\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      history.push(location);\n    }\n  }\n\n  function chartMenus(screenSize: ScreenSize) {\n    if (!props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={props.data!}\n              onSelection={props.eventHandlers.onSelection}\n              {...props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Download PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  function fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!props.standalone && props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...props} />\n            <UrlMenu menuType={MenuType.Menu} {...props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  function mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {fileMenus(ScreenSize.SMALL)}\n            {chartMenus(ScreenSize.SMALL)}\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\n      </>\n    );\n  }\n\n  function desktopMenus() {\n    return (\n      <>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\n        {fileMenus(ScreenSize.LARGE)}\n        {chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Menu\n        as={Media}\n        greaterThanOrEqual=\"large\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {desktopMenus()}\n      </Menu>\n      <Menu\n        as={Media}\n        at=\"small\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {mobileMenus()}\n      </Menu>\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {getLoggedInUserName, navigateToLoginPage} from 'wikitree-js';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport function WikiTreeMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [wikiTreeId, setWikiTreeId] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setWikiTreeId('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  function handleSelectId() {\n    setDialogOpen(false);\n    if (!wikiTreeId) {\n      return;\n    }\n    analyticsEvent('wikitree_id_selected');\n    const search = queryString.parse(location.search);\n    const standalone =\n      search.standalone !== undefined ? search.standalone : true;\n    history.push({\n      pathname: '/view',\n      search: queryString.stringify({\n        indi: wikiTreeId,\n        source: 'wikitree',\n        standalone,\n      }),\n    });\n  }\n\n  function enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    setWikiTreeId(id);\n    inputRef.current!.focus();\n  }\n\n  function wikiTreeIdModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleSelectId}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              value={wikiTreeId}\n              onChange={(_, data) => setWikiTreeId(data.value)}\n              ref={inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleSelectId}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </MenuItem>\n      {wikiTreeIdModal()}\n    </>\n  );\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport function WikiTreeLoginMenu(props: Props) {\n  const intl = useIntl();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  function login() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // TODO: remove authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}`;\n    navigateToLoginPage(returnUrl);\n  }\n\n  const username = getLoggedInUserName();\n  if (!username) {\n    return (\n      <>\n        <MenuItem menuType={props.menuType} onClick={login}>\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.wikitree_login\"\n            defaultMessage=\"Log in to WikiTree\"\n          />\n        </MenuItem>\n      </>\n    );\n  }\n  const tooltip = intl.formatMessage(\n    {\n      id: 'menu.wikitree_popup_username',\n      defaultMessage: 'Logged in to WikiTree as {username}',\n    },\n    {username},\n  );\n  return (\n    <MenuItem menuType={props.menuType} title={tooltip}>\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n      <FormattedMessage\n        id=\"menu.wikitree_logged_in\"\n        defaultMessage=\"Logged in\"\n      />\n    </MenuItem>\n  );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport enum Ids {\n  HIDE,\n  SHOW,\n}\n\nexport enum Sex {\n  HIDE,\n  SHOW,\n}\n\nexport interface Config {\n  color: ChartColors;\n  id: Ids;\n  sex: Sex;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n  id: Ids.SHOW,\n  sex: Sex.SHOW,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, Ids>([\n  ['h', Ids.HIDE],\n  ['s', Ids.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<Ids, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, Sex>([\n  ['h', Sex.HIDE],\n  ['s', Sex.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<Sex, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n    id: ID_ARG.get(getParam('i') ?? '') ?? DEFALUT_CONFIG.id,\n    sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFALUT_CONFIG.sex,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {\n    c: COLOR_ARG_INVERSE.get(config.color),\n    i: ID_ARG_INVERSE.get(config.id),\n    s: SEX_ARG_INVERSE.get(config.sex),\n  };\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <Form className=\"details\">\n      <Item.Group>\n        <Item>\n          <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.NO_COLOR\"\n                    defaultMessage=\"none\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"none\"\n                checked={props.config.color === ChartColors.NO_COLOR}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.NO_COLOR})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_GENERATION\"\n                    defaultMessage=\"by generation\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"generation\"\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_GENERATION})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_SEX\"\n                    defaultMessage=\"by sex\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"gender\"\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_SEX})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n        <Item>\n        <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.ids.HIDE\"\n                    defaultMessage=\"hide\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"hide\"\n                checked={props.config.id === Ids.HIDE}\n                onClick={() =>\n                  props.onChange({...props.config, id: Ids.HIDE})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.ids.SHOW\"\n                    defaultMessage=\"show\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"show\"\n                checked={props.config.id === Ids.SHOW}\n                onClick={() =>\n                  props.onChange({...props.config, id: Ids.SHOW})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n        <Item>\n        <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.sex\" defaultMessage=\"Sex\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.sex.HIDE\"\n                    defaultMessage=\"hide\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"hide\"\n                checked={props.config.sex === Sex.HIDE}\n                onClick={() =>\n                  props.onChange({...props.config, sex: Sex.HIDE})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.sex.SHOW\"\n                    defaultMessage=\"show\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"show\"\n                checked={props.config.sex === Sex.SHOW}\n                onClick={() =>\n                  props.onChange({...props.config, sex: Sex.SHOW})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    </Form>\n  );\n}\n","import {ChartColors, Ids, Sex} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n  hideIds?: Ids;\n  hideSex?: Sex;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n  private rerenderResetPosition?: boolean;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      this.rerenderResetPosition = args.resetPosition;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: !!this.rerenderResetPosition,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors ||\n        props.hideIds !== prevProps?.hideIds ||\n        props.hideSex !== prevProps?.hideSex;\n      const resetPosition =\n        props.chartType !== prevProps?.chartType ||\n        props.data !== prevProps.data ||\n        props.selection !== prevProps.selection;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\nimport {isValidDateOrRange} from '../util/date_util';\nimport {StringUtils} from 'turbocommons-ts';\nimport {\n  getAncestors as getAncestorsApi,\n  getRelatives as getRelativesApi,\n  clientLogin,\n  getLoggedInUserName,\n  Person,\n} from 'wikitree-js';\n\nconst WIKITREE_APP_ID = 'topola-viewer';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\nfunction getApiOptions(handleCors: boolean) {\n  return Object.assign(\n    {appId: WIKITREE_APP_ID},\n    handleCors\n      ? {\n          apiUrl:\n            'https://topolaproxy.bieda.it/https://api.wikitree.com/api.php',\n        }\n      : {},\n  );\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const result = await getAncestorsApi(key, {}, getApiOptions(handleCors));\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await getRelativesApi(\n    keysToFetch,\n    {getChildren: true, getSpouses: true},\n    getApiOptions(handleCors),\n  );\n  if (!response) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  response.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(response);\n}\n\nasync function logInIfNeeded(\n  authcode: string | undefined,\n  handleCors: boolean,\n) {\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode, {appId: WIKITREE_APP_ID});\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n}\n\nasync function getFirstPerson(key: string, handleCors: boolean) {\n  const person = (await getRelatives([key], handleCors))[0];\n  if (!person?.Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n  return person;\n}\n\nfunction getSpouseKeys(person: Person) {\n  return Object.values(person.Spouses || {}).map((s) => s.Name);\n}\n\nasync function getAllAncestors(keys: string[], handleCors: boolean) {\n  const ancestors = await Promise.all(\n    keys.map((key) => getAncestors(key, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n\n  return ancestorDetails.concat(privateAncestors);\n}\n\nasync function getAllDescendants(key: string, handleCors: boolean) {\n  const everyone: Person[] = [];\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children || {}).map((c) => c.Name),\n    );\n    generation++;\n  }\n  return everyone;\n}\n\nasync function loadData(key: string, authcode?: string) {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  await logInIfNeeded(authcode, handleCors);\n\n  const firstPerson = await getFirstPerson(key, handleCors);\n  const spouseKeys = getSpouseKeys(firstPerson);\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const allAncestors = getAllAncestors([key].concat(spouseKeys), handleCors);\n  // Fetch descendants and their spouses.\n  const allDescendants = getAllDescendants(key, handleCors);\n\n  const everyone: Person[] = [\n    ...(await allAncestors),\n    ...(await allDescendants),\n  ];\n  // Make sure the list contains unique elements.\n  return Array.from(\n    new Map(everyone.map((person) => [person.Id, person])).values(),\n  );\n}\n\nfunction getFamilies(people: Person[]) {\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n      });\n    }\n  });\n  return families;\n}\n\nfunction getChildren(people: Person[]) {\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(children, famId).add(person.Id);\n    }\n  });\n  return children;\n}\n\nfunction getSpouses(people: Person[]) {\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n  });\n  return spouses;\n}\n\nfunction convertIndis(people: Person[], intl: IntlShape) {\n  const families = getFamilies(people);\n  return people.map((person) => {\n    const indi = convertPerson(person, intl);\n    indi.fams = Array.from(getSet(families, person.Id));\n    return indi;\n  });\n}\n\nfunction convertFams(people: Person[]) {\n  // Map from numerical id to human-readable id.\n  const idToName = new Map(people.map((person) => [person.Id, person.Name]));\n  const children = getChildren(people);\n  const spouses = getSpouses(people);\n  return Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n}\n\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  const everyone = await loadData(key, authcode);\n\n  const indis = convertIndis(everyone, intl);\n  const fams = convertFams(everyone);\n  const chartData = normalizeGedcom({indis, fams});\n\n  //Map from human-readable person id to person names\n  const personNames = new Map(\n    everyone.map((person) => [person.Name, convertPersonNames(person)]),\n  );\n  // Map from human-readable person id to fullSizeUrl of person photo.\n  const fullSizePhotoUrls = new Map(\n    everyone\n      .filter((person) => person.PhotoData?.path)\n      .map((person) => [\n        person.Name,\n        `https://www.wikitree.com${person.PhotoData!.path}`,\n      ]),\n  );\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls, personNames);\n\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      (person.DataStatus && person.DataStatus.BirthDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      (person.DataStatus && person.DataStatus.DeathDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [\n      {\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\n        title: person.Photo,\n      },\n    ];\n  }\n  return indi;\n}\n\nfunction isSimilarName(name1: string, name2: string) {\n  return StringUtils.compareSimilarityPercent(name1, name2) >= 75;\n}\n\nfunction getMarriedName(person: Person) {\n  if (\n    !person.Spouses ||\n    person.LastNameCurrent === 'Unknown' ||\n    person.LastNameCurrent === person.LastNameAtBirth\n  ) {\n    return undefined;\n  }\n  const nameParts = person.LastNameCurrent.split(/[- ,]/);\n  // In some languages the same names can differ a bit between genders,\n  // so regular equals comparison cannot be used.\n  // To verify if spouse has the same name, person name is split to include\n  // people with double names, then there is a check if any name part is\n  // at least 75% similar to spouse name.\n  const matchingNames = Object.entries(person.Spouses)\n    .flatMap(([, spousePerson]) => spousePerson.LastNameAtBirth.split(/[- ,]/))\n    .some((spousePersonNamePart) =>\n      nameParts.some((personNamePart) =>\n        isSimilarName(spousePersonNamePart, personNamePart),\n      ),\n    );\n  return matchingNames ? person.LastNameCurrent : undefined;\n}\n\n/**\n * Resolve birth name, married name and aka name with following logic:\n * - birth name is always prioritized and is set if exists and is not unknown\n * - married name is based on LastNameCurrent and is set if it's different than\n *   birth name and one of the spouses has it as their birth name\n * - aka name is based on LastNameOther and is set if it's different than others\n */\nfunction convertPersonNames(person: Person) {\n  const birth =\n    person.LastNameAtBirth !== 'Unknown' ? person.LastNameAtBirth : undefined;\n  const married = getMarriedName(person);\n  const aka =\n    person.LastNameOther !== 'Unknown' &&\n    person.LastNameAtBirth !== person.LastNameOther &&\n    person.LastNameCurrent !== person.LastNameOther\n      ? person.LastNameOther\n      : undefined;\n  return {birth, married, aka};\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction nameToGedcom(type: string, firstName?: string, lastName?: string) {\n  return {\n    level: 1,\n    pointer: '',\n    tag: 'NAME',\n    data: `${firstName || ''} /${lastName || ''}/`,\n    tree: [\n      {\n        level: 2,\n        pointer: '',\n        tag: 'TYPE',\n        data: type,\n        tree: [],\n      },\n    ],\n  };\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (isValidDateOrRange(event)) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction imageToGedcom(\n  image: JsonImage,\n  fullSizePhotoUrl: string | undefined,\n): GedcomEntry[] {\n  return [\n    {\n      level: 2,\n      pointer: '',\n      tag: 'FILE',\n      data: fullSizePhotoUrl || image.url,\n      tree: [\n        {\n          level: 3,\n          pointer: '',\n          tag: 'FORM',\n          data: image.title?.split('.').pop() || '',\n          tree: [],\n        },\n        {\n          level: 3,\n          pointer: '',\n          tag: 'TITL',\n          data: image.title?.split('.')[0] || '',\n          tree: [],\n        },\n      ],\n    },\n  ];\n}\n\nfunction indiToGedcom(\n  indi: JsonIndi,\n  fullSizePhotoUrl: Map<string, string>,\n  personNames: {birth?: string; married?: string; aka?: string},\n): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [],\n  };\n\n  if (personNames.birth) {\n    record.tree.push(nameToGedcom('birth', indi.firstName, personNames.birth));\n  }\n  if (personNames.married) {\n    record.tree.push(\n      nameToGedcom('married', indi.firstName, personNames.married),\n    );\n  }\n  if (personNames.aka) {\n    record.tree.push(nameToGedcom('aka', indi.firstName, personNames.aka));\n  }\n\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  (indi.images || []).forEach((image) => {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'OBJE',\n      data: '',\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\n    });\n  });\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(\n  data: JsonGedcomData,\n  fullSizePhotoUrls: Map<string, string>,\n  personNames: Map<string, {birth?: string; married?: string; aka?: string}>,\n): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(\n      indi,\n      fullSizePhotoUrls,\n      personNames.get(indi.id) || {},\n    );\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {idToIndiMap} from './util/gedcom_util';\nimport {\n  Chart,\n  ChartType,\n  downloadPdf,\n  downloadPng,\n  downloadSvg,\n  printChart,\n} from './chart';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n  Ids,\n  Sex,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  showWikiTreeMenus: boolean;\n  freezeAnimation: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery<string>) {\n  const value = search[name];\n  return typeof value === 'string' ? value : undefined;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => getParamFromSearch(name, search);\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (staticUrl) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url: staticUrl,\n      handleCors: false,\n    };\n  } else if (getParam('source') === 'wikitree') {\n    const windowSearch = queryString.parse(window.location.search);\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('authcode') || getParamFromSearch('authcode', windowSearch),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\n    showWikiTreeMenus: getParam('showWikiTreeMenus') !== 'false', // True by default.\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\nexport function App() {\n  /** State of the application. */\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\n  /** Loaded data. */\n  const [data, setData] = useState<TopolaData>();\n  /** Selected individual. */\n  const [selection, setSelection] = useState<IndiInfo>();\n  /** Error to display. */\n  const [error, setError] = useState<string>();\n  /** Whether the side panel is shown. */\n  const [showSidePanel, setShowSidePanel] = useState(false);\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  const [standalone, setStandalone] = useState(true);\n  /**\n   * Whether the app should display WikiTree-specific menus when showing data\n   * from WikiTree.\n   */\n  const [showWikiTreeMenus, setShowWikiTreeMenus] = useState(true);\n  /** Type of displayed chart. */\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n  /** Whether to show the error popup. */\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  /** Specification of the source of the data. */\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n  /** Freeze animations after initial chart render. */\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\n\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n\n  /** Sets the state with a new individual selection and chart type. */\n  function updateDisplay(newSelection: IndiInfo) {\n    if (\n      !selection ||\n      selection.id !== newSelection.id ||\n      selection!.generation !== newSelection.generation\n    ) {\n      setSelection(newSelection);\n    }\n  }\n\n  function toggleDetails(config: Config, data: TopolaData | undefined) {\n    if (data === undefined) {\n      return;\n    }\n    let shouldHideIds = config.id === Ids.HIDE;\n    let shouldHideSex = config.sex === Sex.HIDE;\n    let indiMap = idToIndiMap(data.chartData);\n    indiMap.forEach((indi) => {\n      indi.hideId = shouldHideIds;\n      indi.hideSex = shouldHideSex;\n    });\n  }\n\n  /** Sets error message after data load failure. */\n  function setErrorMessage(message: string) {\n    setError(message);\n    setState(AppState.ERROR);\n  }\n\n  const uploadedDataSource = new UploadedDataSource();\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\n  const embeddedDataSource = new EmbeddedDataSource();\n\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: newSourceSpec, selection: newSelection};\n    const oldSouce = {\n      spec: sourceSpec,\n      selection: selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          data,\n        );\n    }\n  }\n\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    switch (newSourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (location.pathname !== '/view') {\n        if (state !== AppState.INITIAL) {\n          setState(AppState.INITIAL);\n        }\n        return;\n      }\n\n      const args = getArguments(location);\n\n      if (!args.sourceSpec) {\n        history.replace({pathname: '/'});\n        return;\n      }\n\n      if (\n        state === AppState.INITIAL ||\n        isNewData(args.sourceSpec, args.selection)\n      ) {\n        // Set loading state.\n        setState(AppState.LOADING);\n        // Set state from URL parameters.\n        setSourceSpec(args.sourceSpec);\n        setSelection(args.selection);\n        setStandalone(args.standalone);\n        setShowWikiTreeMenus(args.showWikiTreeMenus);\n        setChartType(args.chartType);\n        setFreezeAnimation(args.freezeAnimation);\n        setConfig(args.config);\n        try {\n          const data = await loadData(args.sourceSpec, args.selection);\n          // Set state with data.\n          setData(data);\n          toggleDetails(args.config, data);\n          setShowSidePanel(args.showSidePanel);\n          setState(AppState.SHOWING_CHART);\n        } catch (error: any) {\n          setErrorMessage(getI18nMessage(error, intl));\n        }\n      } else if (\n        state === AppState.SHOWING_CHART ||\n        state === AppState.LOADING_MORE\n      ) {\n        // Update selection if it has changed in the URL.\n        const loadMoreFromWikitree =\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n          (!selection || selection.id !== args.selection?.id);\n        setChartType(args.chartType);\n        setState(\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n        );\n        updateDisplay(args.selection!);\n        if (loadMoreFromWikitree) {\n          try {\n            const data = await loadWikiTree(args.selection!.id, intl);\n            const newSelection = getSelection(data.chartData, args.selection);\n            setData(data);\n            setSelection(newSelection);\n            setState(AppState.SHOWING_CHART);\n          } catch (error: any) {\n            setState(AppState.SHOWING_CHART);\n            displayErrorPopup(\n              intl.formatMessage(\n                {\n                  id: 'error.failed_wikitree_load_more',\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\n                },\n                {error},\n              ),\n            );\n          }\n        }\n      }\n    })();\n  });\n\n  function updateUrl(args: queryString.ParsedQuery<any>) {\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  function onSelection(selection: IndiInfo) {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  }\n\n  function onPrint() {\n    analyticsEvent('print');\n    printChart();\n  }\n\n  function displayErrorPopup(message: string) {\n    setShowErrorPopup(true);\n    setError(message);\n  }\n\n  async function onDownloadPdf() {\n    analyticsEvent('download_pdf');\n    try {\n      await downloadPdf();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  async function onDownloadPng() {\n    analyticsEvent('download_png');\n    try {\n      await downloadPng();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  function onDownloadSvg() {\n    analyticsEvent('download_svg');\n    downloadSvg();\n  }\n\n  function onDismissErrorPopup() {\n    setShowErrorPopup(false);\n  }\n\n  function renderMainArea() {\n    switch (state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const updatedSelection = getSelection(data!.chartData, selection);\n        const sidePanelTabs = [\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details gedcom={data!.gedcom} indi={updatedSelection.id} />\n            ),\n          },\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={config}\n                onChange={(config) => {\n                  setConfig(config);\n                  toggleDetails(config, data);\n                  updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={showErrorPopup}\n              message={error}\n              onDismiss={onDismissErrorPopup}\n            />\n            {state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={data!.chartData}\n              selection={updatedSelection}\n              chartType={chartType}\n              onSelection={onSelection}\n              freezeAnimation={freezeAnimation}\n              colors={config.color}\n              hideIds={config.id}\n              hideSex={config.sex}\n            />\n            {showSidePanel ? (\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  }\n\n  return (\n    <>\n      <Route\n        render={() => (\n          <TopBar\n            data={data?.chartData}\n            allowAllRelativesChart={\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\n            }\n            showingChart={\n              history.location.pathname === '/view' &&\n              (state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE)\n            }\n            standalone={standalone}\n            eventHandlers={{\n              onSelection,\n              onPrint,\n              onDownloadPdf,\n              onDownloadPng,\n              onDownloadSvg,\n            }}\n            showWikiTreeMenus={\n              sourceSpec?.source === DataSourceEnum.WIKITREE &&\n              showWikiTreeMenus\n            }\n          />\n        )}\n      />\n      {staticUrl ? (\n        <Switch>\n          <Route exact path=\"/view\" render={renderMainArea} />\n          <Redirect to={'/view'} />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      )}\n    </>\n  );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\nasync function loadGedzip(\n  blob: Blob,\n): Promise<{gedcom: string; images: Map<string, string>}> {\n  const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n  const entries = zip.getEntries();\n\n  let gedcom = undefined;\n  const images = new Map<string, string>();\n  for (const entry of entries) {\n    if (entry.entryName.endsWith('.ged')) {\n      if (gedcom) {\n        console.warn('Multiple GEDCOM files found in zip archive.');\n      } else {\n        gedcom = entry.getData().toString();\n      }\n    } else {\n      // Save image for later.\n      images.set(\n        entry.entryName,\n        URL.createObjectURL(new Blob([entry.getData()])),\n      );\n    }\n  }\n  if (!gedcom) {\n    throw new Error('GEDCOM file not found in zip archive.');\n  }\n  return {gedcom, images};\n}\n\nexport async function loadFile(\n  blob: Blob,\n): Promise<{gedcom: string; images: Map<string, string>}> {\n  const fileHeader = await blob.slice(0, 2).text();\n  if (fileHeader === 'PK') {\n    return loadGedzip(blob);\n  }\n  return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors ? 'https://topolaproxy.bieda.it/' + url : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n\n  const {gedcom, images} = await loadFile(await response.blob());\n  return prepareData(gedcom, url, images);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n"],"sourceRoot":""}
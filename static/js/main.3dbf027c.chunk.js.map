{"version":3,"sources":["util/analytics.ts","datasource/data_source.ts","changelog.tsx","util/error.ts","util/date_util.ts","util/gedcom_util.ts","util/age_util.ts","details/multiline-text.tsx","details/translated-tag.tsx","details/events.tsx","details/wrapped-image.tsx","details/details.tsx","datasource/load_data.ts","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","datasource/wikitree.ts","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","a","seenVersionDate","Date","parse","slice","changes","process","split","map","notes","date","trim","filter","release","join","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","id","defaultMessage","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","TopolaError","code","message","args","Error","DATE_QUALIFIERS","Map","formatDate","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","lowerCaseQualifier","toLowerCase","formatMessage","get","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","compareDates","firstDateOrRange","secondDateOrRange","isValidDateOrRange","isDateRangeClosed","range","pointerToId","pointer","substring","length","idToIndiMap","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","some","ext","endsWith","filterImages","images","newImages","image","url","match","has","title","startsWith","filterImage","getSoftware","sour","name","getFileName","fileEntry","fileTitle","fileExtension","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","canCalculateAge","range1","range2","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","MultilineText","props","lines","line","index","properties","target","TAG_DESCRIPTIONS","TranslatedTag","normalizedTag","replace","PersonLink","location","useLocation","person","names","subEntry","nameEntry","getName","search","queryString","Item","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","useIntl","as","size","event","type","textAlign","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventNotes","note","toEvent","family","flatMap","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Description","Events","events","event1","event2","WrappedImage","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","onLoad","onError","e","currentTarget","alt","src","filename","Placeholder","Image","square","Container","fluid","Message","negative","compact","basic","closeIcon","Icon","color","onClose","onOpen","label","Label","attached","content","wrapped","EXCLUDED_TAGS","fileDetails","objectEntry","imageFileEntry","noteDetails","nameDetails","fullName","replaceAll","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","getSelection","selection","i","generation","prepareData","cacheId","parseGedcom","json","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","console","warn","loadFromUrl","handleCors","cachedData","driveUrlMatch1","driveUrlMatch2","urlToFetch","fetch","response","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","Promise","addEventListener","onMessage","getI18nMessage","error","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","GedcomLink","Contents","dateString","values","link","Intro","Card","greaterThanOrEqual","Grid","Row","Column","width","logo","at","MenuType","MenuItem","newProps","menuType","Menu","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","loadFileAsText","file","reader","FileReader","onload","evt","readAsText","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","gedcomFile","URL","createObjectURL","imageMap","imageFileNames","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","secondary","ScreenSize","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","style","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","username","getLoggedInUserName","returnUrl","navigateToLoginPage","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","inverted","position","icon","ChartColors","DEFALUT_CONFIG","COLOR_BY_GENERATION","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","v","k","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","dataUrl","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","body","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","render","startIndi","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","PRIVATE_ID_PREFIX","getSessionStorageItem","setSessionStorageItem","getApiOptions","apiUrl","getAncestors","cacheKey","getAncestorsApi","getRelatives","keys","keysToFetch","getRelativesApi","getChildren","getSpouses","Name","concat","loadWikiTree","authcode","hostname","clientLogin","clear","everyone","firstPerson","spouseKeys","Spouses","personId","ancestors","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","personNames","families","spouses","idToName","fullSizePhotoUrls","getFamilyId","getSet","wife","converted","Set","convertPerson","PhotoData","path","convertPersonNames","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","Photo","married","LastNameCurrent","spousePersonNamePart","personNamePart","StringUtils","compareSimilarityPercent","aka","LastNameOther","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","nameToGedcom","level","eventToGedcom","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","AppState","WikiTreeDataSource","ErrorMessage","ErrorPopup","Portal","onDismiss","getArguments","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","loadData","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","LOADING","SHOWING_CHART","ERROR","LOADING_MORE","loadMoreFromWikitree","exact","sidePanelTabs","menuItem","configToArgs","Loader","active","Tab","panes"],"mappings":"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","file":"static/js/main.3dbf027c.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes =\n    process.env.REACT_APP_CHANGELOG?.split('##')\n      .slice(1, maxVersions + 1)\n      .map((notes) => {\n        const date = Date.parse(notes.split('\\n')[0].trim());\n        return {date, notes: '####' + notes};\n      })\n      .filter((release) => release.date > seenVersionDate)\n      .map((release) => release.notes)\n      .join('\\n') || '';\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = toDateObject(date);\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\nexport function formatDateQualifier(\n  qualifier: string | undefined,\n  intl: IntlShape,\n): string {\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n  return (\n    (lowerCaseQualifier &&\n      intl.formatMessage({\n        id: `date.${lowerCaseQualifier}`,\n        defaultMessage:\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n      })) ||\n    ''\n  );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n  date1: TopolaDate | undefined,\n  date2: TopolaDate | undefined,\n): number {\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange &&\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange &&\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n  return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n  range1: DateRange,\n  range2: DateRange,\n): boolean {\n  return (\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\n    compareTopolaDates(range1.to, range2.from) >= 0\n  );\n}\n\nexport function isValidDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n): boolean {\n  // invalid when range is closed and start is before end\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\n    return (\n      compareTopolaDates(\n        dateOrRange?.dateRange?.from,\n        dateOrRange?.dateRange?.to,\n      ) <= 0\n    );\n  }\n  //valid when there is exact date or date range has start or end defined\n  return !!(\n    dateOrRange?.date ||\n    dateOrRange?.dateRange?.from ||\n    dateOrRange?.dateRange?.to\n  );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n  return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n  return new Date(\n    date.year !== undefined ? date.year! : 0,\n    date.month !== undefined ? date.month! - 1 : 0,\n    date.day !== undefined ? date.day! : 1,\n  );\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n  const notMarriedName = names.find(\n    (subEntry) =>\n      subEntry.tree.filter(\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n      ).length === 0,\n  );\n  const name = notMarriedName || names[0];\n  return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n    ?.data;\n\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  areDateRangesOverlapped,\n  compareDates,\n  formatDateQualifier,\n  isDateRangeClosed,\n  isValidDateOrRange,\n  toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\n  const translatedQualifier =\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n  return intl.formatMessage(\n    {\n      id: 'age.exact',\n      defaultMessage:\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears, qualifier: translatedQualifier},\n  );\n}\n\nfunction formatAgeMoreThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.more',\n      defaultMessage:\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeLessThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.less',\n      defaultMessage:\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeBetween(\n  birthDateFrom: TopolaDate,\n  birthDateTo: TopolaDate,\n  deathDateFrom: TopolaDate,\n  deathDateTo: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n  return intl.formatMessage(\n    {\n      id: 'age.between',\n      defaultMessage:\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n  );\n}\n\nfunction canCalculateAge(\n  birthDate: DateOrRange | undefined,\n  deathDate: DateOrRange | undefined,\n): boolean {\n  if (birthDate && deathDate) {\n    // cannot calculate if there is no valid birth or death date\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n      return false;\n    }\n    //cannot calculate if death date is before birth date\n    if (compareDates(birthDate, deathDate) > 0) {\n      return false;\n    }\n    // cannot calculate if closed date range for birth or death are overlapping\n    if (\n      birthDate.dateRange &&\n      deathDate.dateRange &&\n      isDateRangeClosed(birthDate?.dateRange) &&\n      isDateRangeClosed(deathDate?.dateRange)\n    ) {\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction calcDateDifferenceInYears(\n  firstDate: TopolaDate,\n  secondDate: TopolaDate,\n): number {\n  const firstDateObject = toDateObject(firstDate);\n  const secondDateObject = toDateObject(secondDate);\n\n  const startYear = firstDateObject.getUTCFullYear();\n\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n  let monthDiff =\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n  if (monthDiff < 0) {\n    yearDiff--;\n    monthDiff += 12;\n  }\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n  if (dayDiff < 0) {\n    if (monthDiff <= 0) {\n      yearDiff--;\n    }\n  }\n  return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n  birthGedcomDate: string | undefined,\n  deathGedcomDate: string | undefined,\n  intl: IntlShape,\n): string | undefined {\n  if (birthGedcomDate && deathGedcomDate) {\n    const birthDateOrRange = getDate(birthGedcomDate);\n    const deathDateOrRange = getDate(deathGedcomDate);\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n      if (birthDateOrRange?.date) {\n        if (deathDateOrRange?.date) {\n          return formatExactAge(\n            birthDateOrRange.date,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange.date,\n            birthDateOrRange.date,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (\n        birthDateOrRange?.dateRange?.from &&\n        birthDateOrRange?.dateRange?.to\n      ) {\n        if (deathDateOrRange?.date) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.date,\n            deathDateOrRange?.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.from) {\n        if (deathDateOrRange?.date) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.to) {\n        if (deathDateOrRange?.date) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n      }\n    }\n  }\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n  ['birth', 'Birth name'],\n  ['married', 'Married name'],\n  ['maiden', 'Maiden name'],\n  ['immigrant', 'Immigrant name'],\n  ['aka', 'Also known as'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {dereference, GedcomData, getData, getName} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {MultilineText} from './multiline-text';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\n\nfunction PersonLink(props: {person: GedcomEntry}) {\n  const location = useLocation();\n\n  const name = getName(props.person);\n\n  const search = queryString.parse(location.search);\n  search['indi'] = pointerToId(props.person.pointer);\n\n  return (\n    <Item.Meta>\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n        {name ? (\n          name\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Link>\n    </Item.Meta>\n  );\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface EventData {\n  type: string;\n  date?: DateOrRange;\n  age?: string;\n  personLink?: GedcomEntry;\n  place?: string[];\n  notes: string[][];\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction EventHeader(props: {event: EventData}) {\n  const intl = useIntl();\n  return (\n    <div className=\"event-header\">\n      <Header as=\"span\" size=\"small\">\n        <TranslatedTag tag={props.event.type} />\n      </Header>\n      {props.event.date ? (\n        <Header as=\"span\" textAlign=\"right\" sub>\n          {formatDateOrRange(props.event.date, intl)}\n        </Header>\n      ) : null}\n    </div>\n  );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (!spouseReference) {\n    return undefined;\n  }\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n  eventEntry: GedcomEntry,\n  indi: string,\n  gedcom: GedcomData,\n  intl: IntlShape,\n): string | undefined {\n  if (eventEntry.tag !== 'DEAT') {\n    return undefined;\n  }\n  const deathDate = resolveDate(eventEntry);\n\n  const birthDate = gedcom.indis[indi].tree\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n    .map((birthEvent) => resolveDate(birthEvent))\n    .find((topolaDate) => topolaDate);\n\n  if (!birthDate || !deathDate) {\n    return undefined;\n  }\n  return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  return place?.data ? getData(place) : undefined;\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n  return entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => getData(note));\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      age: getAge(entry, indi, gedcom, intl),\n      place: eventPlace(entry),\n      notes: eventNotes(entry, gedcom),\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n): EventData[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      personLink: getSpouse(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n    };\n  });\n}\n\nfunction Event(props: {event: EventData}) {\n  return (\n    <Item>\n      <Item.Content>\n        <EventHeader event={props.event} />\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n        {!!props.event.personLink && (\n          <PersonLink person={props.event.personLink} />\n        )}\n        {!!props.event.place && (\n          <Item.Description>{props.event.place}</Item.Description>\n        )}\n        {!!props.event.notes.length && (\n          <Item.Description>\n            {props.event.notes.map((note, index) => (\n              <div key={index}>\n                <MultilineText\n                  lines={note.map((line, index) => (\n                    <i key={index}>{line}</i>\n                  ))}\n                />\n              </div>\n            ))}\n          </Item.Description>\n        )}\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\n  );\n  if (events.length) {\n    return (\n      <>\n        {events.map((event, index) => (\n          <Event event={event} key={index} />\n        ))}\n      </>\n    );\n  }\n  return null;\n}\n","import {\n  Container,\n  Icon,\n  Image,\n  Label,\n  Message,\n  Modal,\n  Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  if (imageLoaded && imageSrc !== props.url) {\n    setImageLoaded(false);\n  }\n  return (\n    <>\n      <Image\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n        onClick={() => setImageOpen(true)}\n        onLoad={() => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(false);\n        }}\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(true);\n          e.currentTarget.alt = '';\n        }}\n        src={props.url}\n        alt={props.title || props.filename}\n        centered={true}\n      />\n      <Placeholder\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n      >\n        <Placeholder.Image square />\n      </Placeholder>\n      {imageFailed && (\n        <Container fluid textAlign=\"center\">\n          <Message negative compact>\n            <Message.Header>\n              <FormattedMessage\n                id=\"error.failed_to_load_image\"\n                defaultMessage={'Failed to load image file'}\n              />\n            </Message.Header>\n          </Message>\n        </Container>\n      )}\n      <Modal\n        basic\n        size=\"large\"\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\n        open={imageOpen}\n        onClose={() => setImageOpen(false)}\n        onOpen={() => setImageOpen(true)}\n        centered={false}\n      >\n        <Modal.Header>{props.title}</Modal.Header>\n        <Modal.Content image>\n          <Image\n            className=\"modal-image\"\n            src={props.url}\n            alt={props.title || props.filename}\n            label={<Label attached=\"bottom\" content={props.filename} />}\n            wrapped\n          />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getFileName,\n  isImageFile,\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <Header sub>\n        <TranslatedTag tag={entry.tag} />\n      </Header>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n  const imageFileEntry = objectEntry.tree.find(\n    (entry) =>\n      entry.tag === 'FILE' &&\n      entry.data.startsWith('http') &&\n      isImageFile(entry.data),\n  );\n\n  return imageFileEntry ? (\n    <div className=\"person-image\">\n      <WrappedImage\n        url={imageFileEntry.data}\n        filename={getFileName(imageFileEntry) || ''}\n      />\n    </div>\n  ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  const fullName = entry.data.replaceAll('/', '');\n\n  const nameType = entry.tree.find(\n    (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n  )?.data;\n\n  return (\n    <>\n      <Header as=\"span\" size=\"large\">\n        {fullName ? (\n          fullName\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Header>\n      {fullName && nameType && (\n        <Item.Meta>\n          <TranslatedTag tag={nameType} />\n        </Item.Meta>\n      )}\n    </>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"details\">\n      <Item.Group divided>\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </Item.Group>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString?.slice(0, 16) || '';\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} greaterThanOrEqual=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} greaterThanOrEqual=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `${s} ${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  function changeView(view: string) {\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      history.push(location);\n    }\n  }\n\n  function chartMenus(screenSize: ScreenSize) {\n    if (!props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={props.data!}\n              onSelection={props.eventHandlers.onSelection}\n              {...props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  function fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!props.standalone && props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...props} />\n            <UrlMenu menuType={MenuType.Menu} {...props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  function mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {fileMenus(ScreenSize.SMALL)}\n            {chartMenus(ScreenSize.SMALL)}\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\n      </>\n    );\n  }\n\n  function desktopMenus() {\n    return (\n      <>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\n        {fileMenus(ScreenSize.LARGE)}\n        {chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Menu\n        as={Media}\n        greaterThanOrEqual=\"large\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {desktopMenus()}\n      </Menu>\n      <Menu\n        as={Media}\n        at=\"small\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {mobileMenus()}\n      </Menu>\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {getLoggedInUserName, navigateToLoginPage} from 'wikitree-js';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport function WikiTreeMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [wikiTreeId, setWikiTreeId] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setWikiTreeId('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  function handleSelectId() {\n    setDialogOpen(false);\n    if (!wikiTreeId) {\n      return;\n    }\n    analyticsEvent('wikitree_id_selected');\n    const search = queryString.parse(location.search);\n    const standalone =\n      search.standalone !== undefined ? search.standalone : true;\n    history.push({\n      pathname: '/view',\n      search: queryString.stringify({\n        indi: wikiTreeId,\n        source: 'wikitree',\n        standalone,\n      }),\n    });\n  }\n\n  function enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    setWikiTreeId(id);\n    inputRef.current!.focus();\n  }\n\n  function wikiTreeIdModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleSelectId}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              value={wikiTreeId}\n              onChange={(_, data) => setWikiTreeId(data.value)}\n              ref={inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleSelectId}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </MenuItem>\n      {wikiTreeIdModal()}\n    </>\n  );\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport function WikiTreeLoginMenu(props: Props) {\n  const intl = useIntl();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  function login() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // TODO: remove authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}`;\n    navigateToLoginPage(returnUrl);\n  }\n\n  const username = getLoggedInUserName();\n  if (!username) {\n    return (\n      <>\n        <MenuItem menuType={props.menuType} onClick={login}>\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.wikitree_login\"\n            defaultMessage=\"Log in to WikiTree\"\n          />\n        </MenuItem>\n      </>\n    );\n  }\n  const tooltip = intl.formatMessage(\n    {\n      id: 'menu.wikitree_popup_username',\n      defaultMessage: 'Logged in to WikiTree as {username}',\n    },\n    {username},\n  );\n  return (\n    <MenuItem menuType={props.menuType} title={tooltip}>\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n      <FormattedMessage\n        id=\"menu.wikitree_logged_in\"\n        defaultMessage=\"Logged in\"\n      />\n    </MenuItem>\n  );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport interface Config {\n  color: ChartColors;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {c: COLOR_ARG_INVERSE.get(config.color)};\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <Form className=\"details\">\n      <Item.Group>\n        <Item>\n          <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.NO_COLOR\"\n                    defaultMessage=\"none\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"none\"\n                checked={props.config.color === ChartColors.NO_COLOR}\n                onClick={() => props.onChange({color: ChartColors.NO_COLOR})}\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_GENERATION\"\n                    defaultMessage=\"by generation\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"generation\"\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_GENERATION})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_SEX\"\n                    defaultMessage=\"by sex\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"gender\"\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_SEX})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    </Form>\n  );\n}\n","import {ChartColors} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n  private rerenderResetPosition?: boolean;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      this.rerenderResetPosition = args.resetPosition;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: !!this.rerenderResetPosition,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors;\n      const resetPosition =\n        props.chartType !== prevProps?.chartType ||\n        props.data !== prevProps.data ||\n        props.selection !== prevProps.selection;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\nimport {isValidDateOrRange} from '../util/date_util';\nimport {StringUtils} from 'turbocommons-ts';\nimport {\n  getAncestors as getAncestorsApi,\n  getRelatives as getRelativesApi,\n  clientLogin,\n  getLoggedInUserName,\n  Person,\n} from 'wikitree-js';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\nfunction getApiOptions(handleCors: boolean) {\n  return handleCors\n    ? {\n        apiUrl:\n          'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php',\n      }\n    : {};\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const result = await getAncestorsApi(key, {}, getApiOptions(handleCors));\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await getRelativesApi(\n    keysToFetch,\n    {getChildren: true, getSpouses: true},\n    getApiOptions(handleCors),\n  );\n  if (response === []) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  response.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(response);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\n    (s) => s.Name,\n  );\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children || {}).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  //Map from human-readable person id to person names\n  const personNames = new Map<\n    string,\n    {birth?: string; married?: string; aka?: string}\n  >();\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n  // Map from human-readable person id to fullSizeUrl of person photo.\n  const fullSizePhotoUrls: Map<string, string> = new Map();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.PhotoData?.path) {\n      fullSizePhotoUrls.set(\n        person.Name,\n        `https://www.wikitree.com${person.PhotoData.path}`,\n      );\n    }\n\n    personNames.set(person.Name, convertPersonNames(person));\n\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls, personNames);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      (person.DataStatus && person.DataStatus.BirthDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      (person.DataStatus && person.DataStatus.DeathDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [\n      {\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\n        title: person.Photo,\n      },\n    ];\n  }\n  return indi;\n}\n/**\n Resolve birth name, married name and aka name with following logic:\n - birth name is always prioritized and is set if exists and is not unknown\n - married name is based on LastNameCurrent and is set if it's different than birth name\n   and one of the spouses has it as their birth name\n - aka name is based on LastNameOther and is set if it's different than others\n */\nfunction convertPersonNames(person: Person) {\n  return {\n    birth:\n      person.LastNameAtBirth !== 'Unknown' ? person.LastNameAtBirth : undefined,\n    married:\n      person.Spouses &&\n      person.LastNameCurrent !== 'Unknown' &&\n      person.LastNameCurrent !== person.LastNameAtBirth &&\n      Object.entries(person.Spouses)\n        .flatMap(([, spousePerson]) =>\n          spousePerson.LastNameAtBirth.split(/[- ,]/),\n        )\n        .filter(\n          (spousePersonNamePart) =>\n            /* In some languages the same names can differ a bit between genders,\n            so regular equals comparison cannot be used.\n            To verify if spouse has the same name, person name is split to include people with double names,\n            then there is a check if any name part is at least 75% similar to spouse name.\n            */\n            person.LastNameCurrent.split(/[- ,]/).filter(\n              (personNamePart) =>\n                StringUtils.compareSimilarityPercent(\n                  spousePersonNamePart,\n                  personNamePart,\n                ) >= 75,\n            ).length,\n        ).length\n        ? person.LastNameCurrent\n        : undefined,\n    aka:\n      person.LastNameOther !== 'Unknown' &&\n      person.LastNameAtBirth !== person.LastNameOther &&\n      person.LastNameCurrent !== person.LastNameOther\n        ? person.LastNameOther\n        : undefined,\n  };\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction nameToGedcom(type: string, firstName?: string, lastName?: string) {\n  return {\n    level: 1,\n    pointer: '',\n    tag: 'NAME',\n    data: `${firstName || ''} /${lastName || ''}/`,\n    tree: [\n      {\n        level: 2,\n        pointer: '',\n        tag: 'TYPE',\n        data: type,\n        tree: [],\n      },\n    ],\n  };\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (isValidDateOrRange(event)) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction imageToGedcom(\n  image: JsonImage,\n  fullSizePhotoUrl: string | undefined,\n): GedcomEntry[] {\n  return [\n    {\n      level: 2,\n      pointer: '',\n      tag: 'FILE',\n      data: fullSizePhotoUrl || image.url,\n      tree: [\n        {\n          level: 3,\n          pointer: '',\n          tag: 'FORM',\n          data: image.title?.split('.').pop() || '',\n          tree: [],\n        },\n        {\n          level: 3,\n          pointer: '',\n          tag: 'TITL',\n          data: image.title?.split('.')[0] || '',\n          tree: [],\n        },\n      ],\n    },\n  ];\n}\n\nfunction indiToGedcom(\n  indi: JsonIndi,\n  fullSizePhotoUrl: Map<string, string>,\n  personNames: {birth?: string; married?: string; aka?: string},\n): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [],\n  };\n\n  if (personNames.birth) {\n    record.tree.push(nameToGedcom('birth', indi.firstName, personNames.birth));\n  }\n  if (personNames.married) {\n    record.tree.push(\n      nameToGedcom('married', indi.firstName, personNames.married),\n    );\n  }\n  if (personNames.aka) {\n    record.tree.push(nameToGedcom('aka', indi.firstName, personNames.aka));\n  }\n\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  (indi.images || []).forEach((image) => {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'OBJE',\n      data: '',\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\n    });\n  });\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(\n  data: JsonGedcomData,\n  fullSizePhotoUrls: Map<string, string>,\n  personNames: Map<string, {birth?: string; married?: string; aka?: string}>,\n): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(\n      indi,\n      fullSizePhotoUrls,\n      personNames.get(indi.id) || {},\n    );\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n  Chart,\n  ChartType,\n  downloadPdf,\n  downloadPng,\n  downloadSvg,\n  printChart,\n} from './chart';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\nexport function App() {\n  /** State of the application. */\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\n  /** Loaded data. */\n  const [data, setData] = useState<TopolaData>();\n  /** Selected individual. */\n  const [selection, setSelection] = useState<IndiInfo>();\n  /** Error to display. */\n  const [error, setError] = useState<string>();\n  /** Whether the side panel is shown. */\n  const [showSidePanel, setShowSidePanel] = useState(false);\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  const [standalone, setStandalone] = useState(true);\n  /** Type of displayed chart. */\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n  /** Whether to show the error popup. */\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  /** Specification of the source of the data. */\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n  /** Freeze animations after initial chart render. */\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\n\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n\n  /** Sets the state with a new individual selection and chart type. */\n  function updateDisplay(newSelection: IndiInfo) {\n    if (\n      !selection ||\n      selection.id !== newSelection.id ||\n      selection!.generation !== newSelection.generation\n    ) {\n      setSelection(newSelection);\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  function setErrorMessage(message: string) {\n    setError(message);\n    setState(AppState.ERROR);\n  }\n\n  const uploadedDataSource = new UploadedDataSource();\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\n  const embeddedDataSource = new EmbeddedDataSource();\n\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: newSourceSpec, selection: newSelection};\n    const oldSouce = {\n      spec: sourceSpec,\n      selection: selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          data,\n        );\n    }\n  }\n\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    switch (newSourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (location.pathname !== '/view') {\n        if (state !== AppState.INITIAL) {\n          setState(AppState.INITIAL);\n        }\n        return;\n      }\n\n      const args = getArguments(location);\n\n      if (!args.sourceSpec) {\n        history.replace({pathname: '/'});\n        return;\n      }\n\n      if (\n        state === AppState.INITIAL ||\n        isNewData(args.sourceSpec, args.selection)\n      ) {\n        // Set loading state.\n        setState(AppState.LOADING);\n        // Set state from URL parameters.\n        setSourceSpec(args.sourceSpec);\n        setSelection(args.selection);\n        setStandalone(args.standalone);\n        setChartType(args.chartType);\n        setFreezeAnimation(args.freezeAnimation);\n        setConfig(args.config);\n        try {\n          const data = await loadData(args.sourceSpec, args.selection);\n          // Set state with data.\n          setData(data);\n          setSelection(getSelection(data.chartData, args.selection));\n          setShowSidePanel(args.showSidePanel);\n          setState(AppState.SHOWING_CHART);\n        } catch (error: any) {\n          setErrorMessage(getI18nMessage(error, intl));\n        }\n      } else if (\n        state === AppState.SHOWING_CHART ||\n        state === AppState.LOADING_MORE\n      ) {\n        // Update selection if it has changed in the URL.\n        const newSelection = getSelection(data!.chartData, args.selection);\n        const loadMoreFromWikitree =\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n          (!selection || selection.id !== newSelection.id);\n        setChartType(args.chartType);\n        setState(\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n        );\n        updateDisplay(newSelection);\n        if (loadMoreFromWikitree) {\n          try {\n            const data = await loadWikiTree(args.selection!.id, intl);\n            const newSelection = getSelection(data.chartData, args.selection);\n            setData(data);\n            setSelection(newSelection);\n            setState(AppState.SHOWING_CHART);\n          } catch (error: any) {\n            setState(AppState.SHOWING_CHART);\n            displayErrorPopup(\n              intl.formatMessage(\n                {\n                  id: 'error.failed_wikitree_load_more',\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\n                },\n                {error},\n              ),\n            );\n          }\n        }\n      }\n    })();\n  });\n\n  function updateUrl(args: queryString.ParsedQuery<any>) {\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  function onSelection(selection: IndiInfo) {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  }\n\n  function onPrint() {\n    analyticsEvent('print');\n    printChart();\n  }\n\n  function displayErrorPopup(message: string) {\n    setShowErrorPopup(true);\n    setError(message);\n  }\n\n  async function onDownloadPdf() {\n    analyticsEvent('download_pdf');\n    try {\n      await downloadPdf();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  async function onDownloadPng() {\n    analyticsEvent('download_png');\n    try {\n      await downloadPng();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  function onDownloadSvg() {\n    analyticsEvent('download_svg');\n    downloadSvg();\n  }\n\n  function onDismissErrorPopup() {\n    setShowErrorPopup(false);\n  }\n\n  function renderMainArea() {\n    switch (state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const sidePanelTabs = [\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details gedcom={data!.gedcom} indi={selection!.id} />\n            ),\n          },\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={config}\n                onChange={(config) => {\n                  setConfig(config);\n                  updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={showErrorPopup}\n              message={error}\n              onDismiss={onDismissErrorPopup}\n            />\n            {state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={data!.chartData}\n              selection={selection!}\n              chartType={chartType}\n              onSelection={onSelection}\n              freezeAnimation={freezeAnimation}\n              colors={config.color}\n            />\n            {showSidePanel ? (\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  }\n\n  return (\n    <>\n      <Route\n        render={() => (\n          <TopBar\n            data={data?.chartData}\n            allowAllRelativesChart={\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\n            }\n            showingChart={\n              history.location.pathname === '/view' &&\n              (state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE)\n            }\n            standalone={standalone}\n            eventHandlers={{\n              onSelection,\n              onPrint,\n              onDownloadPdf,\n              onDownloadPng,\n              onDownloadSvg,\n            }}\n            showWikiTreeMenus={sourceSpec?.source === DataSourceEnum.WIKITREE}\n          />\n        )}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={Intro} />\n        <Route exact path=\"/view\" render={renderMainArea} />\n        <Redirect to={'/'} />\n      </Switch>\n    </>\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}
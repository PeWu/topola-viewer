{"version":3,"sources":["util/analytics.ts","changelog.tsx","config.tsx","chart.tsx","util/media.ts","datasource/data_source.ts","util/error.ts","util/date_util.ts","util/gedcom_util.ts","details/translated-tag.tsx","details/multiline-text.tsx","details/events.tsx","details/details.tsx","datasource/load_data.ts","datasource/embedded.ts","topola.jpg","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/wikitree_menu.tsx","menu/top_bar.tsx","app.tsx","util/error_i18n.ts","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","a","seenVersionDate","Date","parse","slice","changes","process","split","map","notes","date","trim","filter","release","join","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","id","defaultMessage","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","ChartColors","DEFALUT_CONFIG","color","COLOR_BY_GENERATION","COLOR_ARG","Map","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","argsToConfig","args","get","name","value","undefined","getParam","configToArgs","config","c","ConfigPanel","props","Form","Field","Checkbox","radio","label","tagName","checked","onChange","forEach","v","k","set","ChartType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","zoomed","size","event","parent","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","image","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","images","Array","from","getElementsByTagName","all","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","DataSourceEnum","chartColors","TopolaChartColors","ChartComponent","chart","animating","rerenderRequired","zoomBehavior","this","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","colors","animate","updateSvgSize","locale","intl","setData","chartInfo","render","startIndi","selection","baseGeneration","generation","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","prevProps","at","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","printWindow","style","position","top","left","contentDocument","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","saveAs","jspdf","default","doc","orientation","unit","format","addImage","save","React","Chart","injectIntl","forwardRef","TopolaError","code","message","Error","DATE_QUALIFIERS","formatDate","hasDay","day","hasMonth","month","hasYear","year","text","dateObject","qualifier","toLowerCase","formatOptions","formatMessage","Intl","DateTimeFormat","formatDateOrRange","dateOrRange","dateRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","translateDate","gedcomDate","getDate","compareDates","firstDateOrRange","secondDateOrRange","date1","date2","pointerToId","pointer","substring","length","idToIndiMap","indis","indi","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","title","startsWith","lowerName","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","TAG_DESCRIPTIONS","TranslatedTagComponent","normalizedTag","replace","translateTag","TranslatedTag","MultilineTextComponent","lines","line","index","properties","MultilineText","EVENT_TAGS","FAMILY_EVENT_TAGS","eventHeader","textTransform","eventFamilyDetails","familyEntry","spouseReference","familySubEntry","includes","spouseName","subEntry","nameEntry","replaceAll","eventPlace","place","eventNotes","note","noteDetails","getEventDetails","events","flatMap","eventEntry","family","familyMarriageEvent","resolveDate","header","subHeader","toFamilyEvents","toIndiEvent","toEvent","event1","event2","eventDetails","eventElement","EventsComponent","Events","EXCLUDED_TAGS","nameDetails","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","DetailsComponent","entriesWithData","Details","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","loadFromUrl","handleCors","cachedData","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","PARENT_READY","postMessage","READY","GEDCOM","onMessage","GedcomLink","pathname","search","queryString","Contents","dateString","values","link","Intro","Card","as","Grid","Row","Column","logo","alt","MenuType","MenuItem","newProps","menuType","Menu","Item","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","SearchBarComponent","state","searchResults","searchRef","searchIndex","birthDate","deathDate","death","key","description","getDescriptionLine","results","displaySearchResult","setState","setValue","initialize","buildSearchIndex","initializeSearchIndex","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","placeholder","selectFirstResult","SearchBar","loadFileAsText","file","evt","readAsText","isImageFileName","lower","UploadMenu","files","filesArray","gedcomFile","imageMap","imageFileNames","md5","location","history","content","Icon","htmlFor","accept","multiple","handleUpload","UrlMenu","dialogOpen","inputRef","current","onClose","handleClose","onSubmit","handleLoad","Input","fluid","handleUrlChange","secondary","openDialog","loadFromUrlModal","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","families","spouses","idToName","getFamilyId","getSet","wife","converted","Set","convertPerson","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","eventToGedcom","level","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","WikiTreeLoginState","WikiTreeDataSource","ScreenSize","WikiTreeMenu","firstChild","wikiTreeId","standalone","preventDefault","handleIdChange","wikitreeLogo","handleSelectId","wikiTreeLink","rel","example1","enterId","example2","Ref","innerRef","wikiTreeIdModal","WikiTreeLoginMenuComponent","wikiTreeLoginState","UNKNOWN","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","returnUrl","submit","wikiTreeLoginUsername","LOGGED_IN","NOT_LOGGED_IN","checkWikiTreeLoginState","wikiTreeLogin","display","tooltip","WikiTreeLoginMenu","AppState","TopBar","view","screenSize","showingChart","chartTypeItems","changeView","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","showWikiTreeMenus","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","desktopMenus","mobileMenus","ErrorMessage","Message","negative","ErrorPopup","Portal","onDismiss","getArguments","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","AppComponent","INITIAL","showErrorPopup","chartRef","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","updateUrl","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","sidePanelTabs","menuItem","error","Loader","active","Tab","panes","ERROR","LOADING","otherStateChanges","componentDidUpdate","oldSouce","isNewData","loadData","setError","loadMoreFromWikitree","updateDisplay","exact","path","component","Component","App","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM"],"mappings":"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","file":"static/js/main.578cc927.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes = process.env\n    .REACT_APP_CHANGELOG!.split('##')\n    .slice(1, maxVersions + 1)\n    .map((notes) => {\n      const date = Date.parse(notes.split('\\n')[0].trim());\n      return {date, notes: '####' + notes};\n    })\n    .filter((release) => release.date > seenVersionDate)\n    .map((release) => release.notes)\n    .join('\\n');\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import {Checkbox, Form} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport interface Config {\n  color: ChartColors;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {c: COLOR_ARG_INVERSE.get(config.color)};\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <>\n      <Form className=\"ui segments details\">\n        <div className=\"ui segment\">\n          <div className=\"ui sub header\">\n            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n          </div>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.NO_COLOR\"\n                  defaultMessage=\"none\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"none\"\n              checked={props.config.color === ChartColors.NO_COLOR}\n              onClick={() => props.onChange({color: ChartColors.NO_COLOR})}\n            />\n          </Form.Field>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.COLOR_BY_GENERATION\"\n                  defaultMessage=\"by generation\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"generation\"\n              checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n              onClick={() =>\n                props.onChange({color: ChartColors.COLOR_BY_GENERATION})\n              }\n            />\n          </Form.Field>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.COLOR_BY_SEX\"\n                  defaultMessage=\"by sex\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"gender\"\n              checked={props.config.color === ChartColors.COLOR_BY_SEX}\n              onClick={() => props.onChange({color: ChartColors.COLOR_BY_SEX})}\n            />\n          </Form.Field>\n        </div>\n      </Form>\n    </>\n  );\n}\n","import * as React from 'react';\nimport {ChartColors} from './config';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class ChartComponent extends React.PureComponent<\n  ChartProps & WrappedComponentProps,\n  {}\n> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && this.props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        colors: chartColors.get(this.props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.props.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false, resetPosition: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true, resetPosition: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender =\n      this.props.chartType !== prevProps.chartType ||\n      this.props.colors !== prevProps.colors;\n    const resetPosition = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender, resetPosition});\n  }\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <Media at=\"large\" className=\"zoom\">\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </button>\n          <button\n            className=\"zoom-out\"\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\n          >\n            −\n          </button>\n        </Media>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\n      'width',\n      String(Number(svg.getAttribute('width')) / scale),\n    );\n    svg.setAttribute(\n      'height',\n      String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await this.drawOnCanvas();\n    const doc = new jspdf({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\nexport const Chart = injectIntl(ChartComponent, {forwardRef: true});\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange && firstDateOrRange.dateRange.from));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange && secondDateOrRange.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\nimport * as React from 'react';\n\ninterface Props {\n  tag: string;\n}\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  const normalizedTag = tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n\nclass TranslatedTagComponent extends React.Component<\n  Props & WrappedComponentProps,\n  {}\n> {\n  render() {\n    return translateTag(this.props.tag);\n  }\n}\n\nexport const TranslatedTag = injectIntl(TranslatedTagComponent);\n","import * as React from 'react';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\nclass MultilineTextComponent extends React.Component<\n  Props & WrappedComponentProps,\n  {}\n> {\n  render() {\n    return joinLines(this.props.lines);\n  }\n}\n\nexport const MultilineText = injectIntl(MultilineTextComponent);\n","import * as React from 'react';\nimport {injectIntl, IntlShape, WrappedComponentProps} from 'react-intl';\nimport {dereference, GedcomData, getData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {compareDates, translateDate} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {TranslatedTag} from './translated-tag';\nimport {MultilineText} from './multiline-text';\nimport flatMap from 'array.prototype.flatmap';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface Event {\n  type: string;\n  date: DateOrRange | undefined;\n  header: JSX.Element;\n  subHeader: JSX.Element | null;\n  place: JSX.Element | null;\n  notes: JSX.Element | null;\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction eventHeader(tag: string, date: GedcomEntry | null, intl: IntlShape) {\n  return (\n    <div>\n      <span style={{textTransform: 'uppercase'}} className=\"ui small header\">\n        <TranslatedTag tag={tag} />\n      </span>\n      {date && date.data ? (\n        <span className=\"ui sub header right floated\">\n          {translateDate(date.data, intl)}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nfunction eventFamilyDetails(\n  entry: GedcomEntry,\n  indi: string,\n  familyEntry: GedcomEntry,\n  gedcom: GedcomData,\n) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (spouseReference) {\n    const spouseName = dereference(\n      spouseReference,\n      gedcom,\n      (gedcom) => gedcom.indis,\n    )\n      .tree.filter((subEntry) => subEntry.tag === 'NAME')\n      .find(\n        (subEntry) =>\n          subEntry.tree.filter(\n            (nameEntry) =>\n              nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n          ).length === 0,\n      );\n    if (spouseName) {\n      return <div className=\"meta\">{spouseName.data.replaceAll('/', '')}</div>;\n    }\n  }\n  return null;\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  if (place && place.data) {\n    return <div className=\"description\">{getData(place)}</div>;\n  }\n  return null;\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData) {\n  const notes = entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => noteDetails(note));\n\n  if (notes && notes.length) {\n    return (\n      <div className=\"description\">\n        {notes.map((note, index) => (\n          <div key={index}>{note}</div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction eventDetails(event: Event) {\n  return (\n    <div className=\"content\">\n      {event.header}\n      {event.subHeader}\n      {event.place}\n      {event.notes}\n    </div>\n  );\n}\n\nfunction getEventDetails(\n  entries: GedcomEntry[],\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): JSX.Element | null {\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, gedcom, indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date))\n      .map((event) => eventDetails(event)),\n  );\n  if (events && events.length) {\n    return (\n      <div className=\"ui segment divided items\">\n        {events.map((eventElement, index) => (\n          <div className=\"ui attached item\" key={index}>\n            {eventElement}\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi, intl);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      header: eventHeader(entry.tag, date, intl),\n      subHeader: null,\n      place: eventPlace(entry),\n      notes: eventNotes(entry, gedcom),\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      header: eventHeader(familyMarriageEvent.tag, date, intl),\n      subHeader: eventFamilyDetails(familyMarriageEvent, indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n    };\n  });\n}\n\nclass EventsComponent extends React.Component<\n  Props & WrappedComponentProps,\n  {}\n> {\n  render() {\n    return (\n      <>\n        {getEventDetails(\n          this.props.entries,\n          this.props.gedcom,\n          this.props.indi,\n          this.props.intl,\n        )}\n      </>\n    );\n  }\n}\n\nexport const Events = injectIntl(EventsComponent);\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {dereference, GedcomData, getData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {TranslatedTag} from './translated-tag';\nimport {Events} from './events';\nimport {MultilineText} from './multiline-text';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">\n        <TranslatedTag tag={entry.tag} />\n      </div>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\nclass DetailsComponent extends React.Component<\n  Props & WrappedComponentProps,\n  {}\n> {\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) =>\n        dereference(entry, this.props.gedcom, (gedcom) => gedcom.other),\n      )\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        <Events\n          gedcom={this.props.gedcom}\n          entries={entries}\n          indi={this.props.indi}\n        />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\nexport const Details = injectIntl(DetailsComponent);\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} at=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} at=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport class MenuItem extends React.Component<\n  Props & MenuItemProps & DropdownItemProps\n> {\n  render() {\n    const newProps = {...this.props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <Menu.Item {...newProps}>{this.props.children}</Menu.Item>\n        ) : (\n          <Dropdown.Item {...newProps}>{this.props.children}</Dropdown.Item>\n        )}\n      </>\n    );\n  }\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {JsonIndi} from 'topola';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Search, SearchProps, SearchResultProps} from 'semantic-ui-react';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\ninterface State {\n  searchResults: SearchResultProps[];\n}\n\n/** Displays and handles the search box in the top bar. */\nclass SearchBarComponent extends React.Component<\n  RouteComponentProps & WrappedComponentProps & Props,\n  State\n> {\n  state: State = {\n    searchResults: [],\n  };\n\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  private getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, this.props.intl);\n    const deathDate = formatDateOrRange(indi.death, this.props.intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  private displaySearchResult(result: SearchResult) {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: this.getDescriptionLine(result.indi),\n    };\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      this.displaySearchResult(result),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    this.searchIndex = buildSearchIndex(this.props.data);\n  }\n\n  componentDidMount() {\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.data !== this.props.data) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  render() {\n    return (\n      <Search\n        onSearchChange={debounce(\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n            this.handleSearch(data.value),\n          200,\n        )}\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n        results={this.state.searchResults}\n        noResultsMessage={this.props.intl.formatMessage({\n          id: 'menu.search.no_results',\n          defaultMessage: 'No results found',\n        })}\n        placeholder={this.props.intl.formatMessage({\n          id: 'menu.search.placeholder',\n          defaultMessage: 'Search for people',\n        })}\n        selectFirstResult={true}\n        ref={(ref) =>\n          (this.searchRef = (ref as unknown) as {\n            setValue(value: string): void;\n          })\n        }\n        id=\"search\"\n      />\n    );\n  }\n}\nexport const SearchBar = injectIntl(SearchBarComponent);\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport class UploadMenu extends React.Component<RouteComponentProps & Props> {\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  render() {\n    const content = (\n      <>\n        <Icon name=\"folder open\" />\n        <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n      </>\n    );\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <label htmlFor=\"fileInput\">\n            <Menu.Item as=\"a\">{content}</Menu.Item>\n          </label>\n        ) : (\n          <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n            {content}\n          </Dropdown.Item>\n        )}\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n      </>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  url?: string;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport class UrlMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {dialogOpen: false};\n\n  inputRef: React.RefObject<Input> = React.createRef();\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      this.inputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: value,\n      }),\n    );\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e, data) => this.handleUrlChange(data.value)}\n              ref={this.inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          onClick={() => this.openDialog()}\n          menuType={this.props.menuType}\n        >\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </MenuItem>\n        {this.loadFromUrlModal()}\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\nimport {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  RealName: string;\n  Spouses?: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returns the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\n    (s) => s.Name,\n  );\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(chartData);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (event.date) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction indiToGedcom(indi: JsonIndi): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [\n      {\n        level: 1,\n        pointer: '',\n        tag: 'NAME',\n        data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n        tree: [],\n      },\n    ],\n  };\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(data: JsonGedcomData): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(indi);\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\nimport {getLoggedInUserName} from '../datasource/wikitree';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Header, Button, Modal, Input, Form, Ref} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  wikiTreeId?: string;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport class WikiTreeMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    dialogOpen: false,\n  };\n\n  inputRef: React.RefObject<HTMLElement> = React.createRef();\n\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      (this.inputRef.current!.firstChild as HTMLInputElement).focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  private handleSelectId() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.wikiTreeId) {\n      analyticsEvent('wikitree_id_selected');\n      const search = queryString.parse(this.props.location.search);\n      const standalone =\n        search.standalone !== undefined ? search.standalone : true;\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({\n          indi: this.state.wikiTreeId,\n          source: 'wikitree',\n          standalone,\n        }),\n      });\n    }\n  }\n\n  /** Called when the WikiTree ID input is typed into. */\n  private handleIdChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        wikiTreeId: value,\n      }),\n    );\n  }\n\n  private enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    (this.inputRef.current!.firstChild as HTMLInputElement).value = id;\n    this.handleIdChange(id);\n    (this.inputRef.current!.firstChild as HTMLInputElement).focus();\n  }\n\n  private wikiTreeIdModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleSelectId()}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Ref innerRef={this.inputRef}>\n              <Input\n                fluid\n                onChange={(e, data) => this.handleIdChange(data.value)}\n              />\n            </Ref>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleSelectId()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          menuType={this.props.menuType}\n          onClick={() => this.openDialog()}\n        >\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.select_wikitree_id\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </MenuItem>\n        {this.wikiTreeIdModal()}\n      </>\n    );\n  }\n}\n\ninterface LoginState {\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nclass WikiTreeLoginMenuComponent extends React.Component<\n  RouteComponentProps & WrappedComponentProps & Props,\n  LoginState\n> {\n  state: LoginState = {\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginUsername = getLoggedInUserName();\n    const wikiTreeLoginState = wikiTreeLoginUsername\n      ? WikiTreeLoginState.LOGGED_IN\n      : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.checkWikiTreeLoginState();\n  }\n\n  componentDidUpdate() {\n    this.checkWikiTreeLoginState();\n  }\n\n  render() {\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        return (\n          <>\n            <MenuItem\n              menuType={this.props.menuType}\n              onClick={() => this.wikiTreeLogin()}\n            >\n              <img\n                src={wikitreeLogo}\n                alt=\"WikiTree logo\"\n                className=\"menu-icon\"\n              />\n              <FormattedMessage\n                id=\"menu.wikitree_login\"\n                defaultMessage=\"Log in to WikiTree\"\n              />\n            </MenuItem>\n            <form\n              action=\"https://api.wikitree.com/api.php\"\n              method=\"POST\"\n              style={{display: 'hidden'}}\n              ref={this.wikiTreeLoginFormRef}\n            >\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n              <input\n                type=\"hidden\"\n                name=\"returnURL\"\n                ref={this.wikiTreeReturnUrlRef}\n              />\n            </form>\n          </>\n        );\n\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.props.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.props.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        return (\n          <MenuItem menuType={this.props.menuType} title={tooltip}>\n            <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n            <FormattedMessage\n              id=\"menu.wikitree_logged_in\"\n              defaultMessage=\"Logged in\"\n            />\n          </MenuItem>\n        );\n    }\n    return null;\n  }\n}\nexport const WikiTreeLoginMenu = injectIntl(WikiTreeLoginMenuComponent);\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport class TopBar extends React.Component<RouteComponentProps & Props> {\n  private changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  private chartMenus(screenSize: ScreenSize) {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {this.props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\n                >\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\n                >\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\n                >\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={this.props.data!}\n              onSelection={this.props.eventHandlers.onSelection}\n              {...this.props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  private fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!this.props.standalone && this.props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!this.props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = this.props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...this.props} />\n            <UrlMenu menuType={MenuType.Menu} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!this.props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...this.props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  private mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {this.fileMenus(ScreenSize.SMALL)}\n            {this.chartMenus(ScreenSize.SMALL)}\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {this.props.standalone ? (\n          <Link to=\"/\">{this.title()}</Link>\n        ) : (\n          this.title()\n        )}\n      </>\n    );\n  }\n\n  private desktopMenus() {\n    return (\n      <>\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\n        {this.fileMenus(ScreenSize.LARGE)}\n        {this.chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Menu\n          as={Media}\n          at=\"large\"\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n        >\n          {this.desktopMenus()}\n        </Menu>\n        <Menu\n          as={Media}\n          at=\"small\"\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n        >\n          {this.mobileMenus()}\n        </Menu>\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport React from 'react';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {Chart, ChartComponent, ChartType} from './chart';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation?: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('?authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\n/**\n * Returs true if the changes object has values that are different than those\n * in state.\n */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** State of the application. */\n  state: AppState;\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Error to display. */\n  error?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Specification of the source of the data. */\n  sourceSpec?: DataSourceSpec;\n  /** Freeze animations after initial chart render. */\n  freezeAnimation?: boolean;\n  config: Config;\n}\n\nclass AppComponent extends React.Component<\n  RouteComponentProps & WrappedComponentProps,\n  {}\n> {\n  state: State = {\n    state: AppState.INITIAL,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n    config: DEFALUT_CONFIG,\n  };\n  chartRef: ChartComponent | null = null;\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        state: AppState.ERROR,\n        error,\n      }),\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  private readonly uploadedDataSource = new UploadedDataSource();\n  private readonly gedcomUrlDataSource = new GedcomUrlDataSource();\n  private readonly wikiTreeDataSource = new WikiTreeDataSource(this.props.intl);\n  private readonly embeddedDataSource = new EmbeddedDataSource();\n\n  private isNewData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    if (\n      !this.state.sourceSpec ||\n      this.state.sourceSpec.source !== sourceSpec.source\n    ) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: sourceSpec, selection};\n    const oldSouce = {\n      spec: this.state.sourceSpec,\n      selection: this.state.selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          this.state.data,\n        );\n    }\n  }\n\n  private loadData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    switch (sourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.loadData({spec: sourceSpec, selection});\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      if (this.state.state !== AppState.INITIAL) {\n        this.setState(Object.assign({}, this.state, {state: AppState.INITIAL}));\n      }\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (!args.sourceSpec) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      this.state.state === AppState.INITIAL ||\n      this.isNewData(args.sourceSpec, args.selection)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          state: AppState.LOADING,\n          sourceSpec: args.sourceSpec,\n          selection: args.selection,\n          standalone: args.standalone,\n          chartType: args.chartType,\n          config: args.config,\n        }),\n      );\n      try {\n        const data = await this.loadData(args.sourceSpec, args.selection);\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            state: AppState.SHOWING_CHART,\n            data,\n            selection: getSelection(data.chartData, args.selection),\n            showSidePanel: args.showSidePanel,\n          }),\n        );\n      } catch (error) {\n        this.setError(getI18nMessage(error, this.props.intl));\n      }\n    } else if (\n      this.state.state === AppState.SHOWING_CHART ||\n      this.state.state === AppState.LOADING_MORE\n    ) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data!.chartData,\n        args.selection,\n      );\n      const loadMoreFromWikitree =\n        args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        state: loadMoreFromWikitree\n          ? AppState.LOADING_MORE\n          : AppState.SHOWING_CHART,\n      });\n      if (loadMoreFromWikitree) {\n        try {\n          const data = await loadWikiTree(args.selection!.id, this.props.intl);\n          const selection = getSelection(data.chartData, args.selection);\n          this.setState(\n            Object.assign({}, this.state, {\n              state: AppState.SHOWING_CHART,\n              data,\n              selection,\n            }),\n          );\n        } catch (error) {\n          this.showErrorPopup(\n            this.props.intl.formatMessage(\n              {\n                id: 'error.failed_wikitree_load_more',\n                defaultMessage: 'Failed to load data from WikiTree. {error}',\n              },\n              {error},\n            ),\n            {state: AppState.SHOWING_CHART},\n          );\n        }\n      }\n    }\n  }\n\n  private updateUrl(args: queryString.ParsedQuery<any>) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    this.updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string, otherStateChanges?: Partial<State>) {\n    this.setState(\n      Object.assign(\n        {},\n        this.state,\n        {\n          showErrorPopup: true,\n          error: message,\n        },\n        otherStateChanges,\n      ),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.props.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.props.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  private onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    switch (this.state.state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const sidePanelTabs = [\n          {\n            menuItem: this.props.intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details\n                gedcom={this.state.data!.gedcom}\n                indi={this.state.selection!.id}\n              />\n            ),\n          },\n          {\n            menuItem: this.props.intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={this.state.config}\n                onChange={(config) => {\n                  this.setState(Object.assign({}, this.state, {config}));\n                  this.updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={this.state.showErrorPopup}\n              message={this.state.error}\n              onDismiss={this.onDismissErrorPopup}\n            />\n            {this.state.state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={this.state.data!.chartData}\n              selection={this.state.selection!}\n              chartType={this.state.chartType}\n              onSelection={this.onSelection}\n              freezeAnimation={this.state.freezeAnimation}\n              colors={this.state.config.color}\n              ref={(ref) => (this.chartRef = ref)}\n            />\n            {this.state.showSidePanel ? (\n              <Media at=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={this.state.error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              data={this.state.data && this.state.data.chartData}\n              allowAllRelativesChart={\n                this.state.sourceSpec?.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                this.props.history.location.pathname === '/view' &&\n                (this.state.state === AppState.SHOWING_CHART ||\n                  this.state.state === AppState.LOADING_MORE)\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeMenus={\n                this.state.sourceSpec?.source === DataSourceEnum.WIKITREE\n              }\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport const App = injectIntl(AppComponent);\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["util/analytics.ts","datasource/data_source.ts","changelog.tsx","util/error.ts","util/date_util.ts","util/gedcom_util.ts","details/multiline-text.tsx","details/translated-tag.tsx","details/events.tsx","details/details.tsx","datasource/load_data.ts","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","a","seenVersionDate","Date","parse","slice","changes","process","split","map","notes","date","trim","filter","release","join","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","id","defaultMessage","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","TopolaError","code","message","args","Error","DATE_QUALIFIERS","Map","formatDate","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","qualifier","toLowerCase","formatOptions","formatMessage","get","Intl","DateTimeFormat","locale","format","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","translateDate","gedcomDate","getDate","compareDates","firstDateOrRange","secondDateOrRange","date1","date2","pointerToId","pointer","substring","length","idToIndiMap","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","images","newImages","image","fileName","url","match","has","title","startsWith","lowerName","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","name","MultilineText","props","lines","line","index","properties","target","TAG_DESCRIPTIONS","TranslatedTag","normalizedTag","replace","EVENT_TAGS","FAMILY_EVENT_TAGS","eventHeader","style","textTransform","eventFamilyDetails","familyEntry","spouseReference","familySubEntry","includes","spouseName","subEntry","nameEntry","replaceAll","eventPlace","place","eventNotes","note","noteDetails","toEvent","family","flatMap","familyMarriageEvent","resolveDate","type","header","subHeader","toFamilyEvents","toIndiEvent","Events","useIntl","events","eventEntry","event1","event2","event","eventDetails","eventElement","EXCLUDED_TAGS","nameDetails","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","getSelection","selection","i","generation","prepareData","cacheId","parseGedcom","json","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","e","console","warn","loadFromUrl","handleCors","cachedData","driveUrlMatch1","driveUrlMatch2","urlToFetch","fetch","response","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","size","GedcomUrlDataSource","EmbeddedDataSource","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","Promise","addEventListener","onMessage","getI18nMessage","error","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","GedcomLink","pathname","search","queryString","Contents","dateString","values","link","Intro","Card","as","greaterThanOrEqual","Grid","Row","Column","width","src","logo","alt","at","MenuType","MenuItem","newProps","menuType","Menu","Item","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","birthDate","deathDate","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","loadFileAsText","file","reader","FileReader","onload","evt","readAsText","isImageFileName","lower","UploadMenu","history","useHistory","location","useLocation","files","filesArray","Array","gedcomFile","URL","createObjectURL","imageMap","imageFileNames","md5","state","content","Icon","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","onClose","Form","onSubmit","Input","fluid","secondary","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","body","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","x","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","all","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","getFamilyId","getSet","wife","converted","Set","convertPerson","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","eventToGedcom","level","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","ScreenSize","WikiTreeDataSource","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","formRef","returnUrlRef","returnUrl","submit","display","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","attached","inverted","color","position","icon","ChartColors","DEFALUT_CONFIG","COLOR_BY_GENERATION","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","label","tagName","checked","config","v","k","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","dataUrl","inlineImages","svg","getElementsByTagName","loadImage","Image","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","AppState","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","render","startIndi","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","ErrorMessage","Message","negative","ErrorPopup","Portal","onDismiss","getArguments","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","loadData","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","LOADING","SHOWING_CHART","ERROR","LOADING_MORE","loadMoreFromWikitree","exact","path","sidePanelTabs","menuItem","configToArgs","Loader","active","Tab","panes"],"mappings":"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","file":"static/js/main.8eb05b82.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes = process.env\n    .REACT_APP_CHANGELOG!.split('##')\n    .slice(1, maxVersions + 1)\n    .map((notes) => {\n      const date = Date.parse(notes.split('\\n')[0].trim());\n      return {date, notes: '####' + notes};\n    })\n    .filter((release) => release.date > seenVersionDate)\n    .map((release) => release.notes)\n    .join('\\n');\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange && firstDateOrRange.dateRange.from));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange && secondDateOrRange.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {compareDates, translateDate} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {dereference, GedcomData, getData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface Event {\n  type: string;\n  date: DateOrRange | undefined;\n  header: JSX.Element;\n  subHeader: JSX.Element | null;\n  place: JSX.Element | null;\n  notes: JSX.Element | null;\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction eventHeader(tag: string, date: GedcomEntry | null, intl: IntlShape) {\n  return (\n    <div>\n      <span style={{textTransform: 'uppercase'}} className=\"ui small header\">\n        <TranslatedTag tag={tag} />\n      </span>\n      {date && date.data ? (\n        <span className=\"ui sub header right floated\">\n          {translateDate(date.data, intl)}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nfunction eventFamilyDetails(\n  indi: string,\n  familyEntry: GedcomEntry,\n  gedcom: GedcomData,\n) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (spouseReference) {\n    const spouseName = dereference(\n      spouseReference,\n      gedcom,\n      (gedcom) => gedcom.indis,\n    )\n      .tree.filter((subEntry) => subEntry.tag === 'NAME')\n      .find(\n        (subEntry) =>\n          subEntry.tree.filter(\n            (nameEntry) =>\n              nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n          ).length === 0,\n      );\n    if (spouseName) {\n      return <div className=\"meta\">{spouseName.data.replaceAll('/', '')}</div>;\n    }\n  }\n  return null;\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  if (place && place.data) {\n    return <div className=\"description\">{getData(place)}</div>;\n  }\n  return null;\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData) {\n  const notes = entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => noteDetails(note));\n\n  if (notes && notes.length) {\n    return (\n      <div className=\"description\">\n        {notes.map((note, index) => (\n          <div key={index}>{note}</div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction eventDetails(event: Event) {\n  return (\n    <div className=\"content\">\n      {event.header}\n      {event.subHeader}\n      {event.place}\n      {event.notes}\n    </div>\n  );\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi, intl);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      header: eventHeader(entry.tag, date, intl),\n      subHeader: null,\n      place: eventPlace(entry),\n      notes: eventNotes(entry, gedcom),\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): Event[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      header: eventHeader(familyMarriageEvent.tag, date, intl),\n      subHeader: eventFamilyDetails(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n    };\n  });\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date))\n      .map((event) => eventDetails(event)),\n  );\n  if (events && events.length) {\n    return (\n      <div className=\"ui segment divided items\">\n        {events.map((eventElement, index) => (\n          <div className=\"ui attached item\" key={index}>\n            {eventElement}\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {dereference, GedcomData, getData} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">\n        <TranslatedTag tag={entry.tag} />\n      </div>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"ui segments details\">\n      {getDetails(entries, ['NAME'], nameDetails)}\n      <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n      {getOtherDetails(entriesWithData)}\n      {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} greaterThanOrEqual=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} greaterThanOrEqual=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\nimport {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  RealName: string;\n  Spouses?: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returns the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\n    (s) => s.Name,\n  );\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(chartData);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (event.date) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction indiToGedcom(indi: JsonIndi): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [\n      {\n        level: 1,\n        pointer: '',\n        tag: 'NAME',\n        data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n        tree: [],\n      },\n    ],\n  };\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach(child =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }));\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(data: JsonGedcomData): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(indi);\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  function changeView(view: string) {\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      history.push(location);\n    }\n  }\n\n  function chartMenus(screenSize: ScreenSize) {\n    if (!props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={props.data!}\n              onSelection={props.eventHandlers.onSelection}\n              {...props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  function fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!props.standalone && props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...props} />\n            <UrlMenu menuType={MenuType.Menu} {...props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  function mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {fileMenus(ScreenSize.SMALL)}\n            {chartMenus(ScreenSize.SMALL)}\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\n      </>\n    );\n  }\n\n  function desktopMenus() {\n    return (\n      <>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\n        {fileMenus(ScreenSize.LARGE)}\n        {chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Menu\n        as={Media}\n        greaterThanOrEqual=\"large\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {desktopMenus()}\n      </Menu>\n      <Menu\n        as={Media}\n        at=\"small\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {mobileMenus()}\n      </Menu>\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getLoggedInUserName} from '../datasource/wikitree';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport function WikiTreeMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [wikiTreeId, setWikiTreeId] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setWikiTreeId('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  function handleSelectId() {\n    setDialogOpen(false);\n    if (!wikiTreeId) {\n      return;\n    }\n    analyticsEvent('wikitree_id_selected');\n    const search = queryString.parse(location.search);\n    const standalone =\n      search.standalone !== undefined ? search.standalone : true;\n    history.push({\n      pathname: '/view',\n      search: queryString.stringify({\n        indi: wikiTreeId,\n        source: 'wikitree',\n        standalone,\n      }),\n    });\n  }\n\n  function enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    setWikiTreeId(id);\n    inputRef.current!.focus();\n  }\n\n  function wikiTreeIdModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleSelectId}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              value={wikiTreeId}\n              onChange={(_, data) => setWikiTreeId(data.value)}\n              ref={inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleSelectId}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </MenuItem>\n      {wikiTreeIdModal()}\n    </>\n  );\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport function WikiTreeLoginMenu(props: Props) {\n  const formRef = useRef<HTMLFormElement>(null);\n  const returnUrlRef = useRef<HTMLInputElement>(null);\n  const intl = useIntl();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  function login() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    returnUrlRef.current!.value = returnUrl;\n    formRef.current!.submit();\n  }\n\n  const username = getLoggedInUserName();\n  if (!username) {\n    return (\n      <>\n        <MenuItem menuType={props.menuType} onClick={login}>\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.wikitree_login\"\n            defaultMessage=\"Log in to WikiTree\"\n          />\n        </MenuItem>\n        <form\n          action=\"https://api.wikitree.com/api.php\"\n          method=\"POST\"\n          style={{display: 'hidden'}}\n          ref={formRef}\n        >\n          <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n          <input type=\"hidden\" name=\"returnURL\" ref={returnUrlRef} />\n        </form>\n      </>\n    );\n  }\n  const tooltip = intl.formatMessage(\n    {\n      id: 'menu.wikitree_popup_username',\n      defaultMessage: 'Logged in to WikiTree as {username}',\n    },\n    {username},\n  );\n  return (\n    <MenuItem menuType={props.menuType} title={tooltip}>\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n      <FormattedMessage\n        id=\"menu.wikitree_logged_in\"\n        defaultMessage=\"Logged in\"\n      />\n    </MenuItem>\n  );\n}\n","import {Checkbox, Form} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport interface Config {\n  color: ChartColors;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {c: COLOR_ARG_INVERSE.get(config.color)};\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <>\n      <Form className=\"ui segments details\">\n        <div className=\"ui segment\">\n          <div className=\"ui sub header\">\n            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n          </div>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.NO_COLOR\"\n                  defaultMessage=\"none\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"none\"\n              checked={props.config.color === ChartColors.NO_COLOR}\n              onClick={() => props.onChange({color: ChartColors.NO_COLOR})}\n            />\n          </Form.Field>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.COLOR_BY_GENERATION\"\n                  defaultMessage=\"by generation\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"generation\"\n              checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n              onClick={() =>\n                props.onChange({color: ChartColors.COLOR_BY_GENERATION})\n              }\n            />\n          </Form.Field>\n          <Form.Field className=\"no-margin\">\n            <Checkbox\n              radio\n              label={\n                <FormattedMessage\n                  tagName=\"label\"\n                  id=\"config.colors.COLOR_BY_SEX\"\n                  defaultMessage=\"by sex\"\n                />\n              }\n              name=\"checkboxRadioGroup\"\n              value=\"gender\"\n              checked={props.config.color === ChartColors.COLOR_BY_SEX}\n              onClick={() => props.onChange({color: ChartColors.COLOR_BY_SEX})}\n            />\n          </Form.Field>\n        </div>\n      </Form>\n    </>\n  );\n}\n","import {ChartColors} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: false,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors;\n      const resetPosition = props.chartType !== prevProps?.chartType;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n  Chart,\n  ChartType,\n  downloadPdf,\n  downloadPng,\n  downloadSvg,\n  printChart,\n} from './chart';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('?authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\nexport function App() {\n  /** State of the application. */\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\n  /** Loaded data. */\n  const [data, setData] = useState<TopolaData>();\n  /** Selected individual. */\n  const [selection, setSelection] = useState<IndiInfo>();\n  /** Error to display. */\n  const [error, setError] = useState<string>();\n  /** Whether the side panel is shown. */\n  const [showSidePanel, setShowSidePanel] = useState(false);\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  const [standalone, setStandalone] = useState(true);\n  /** Type of displayed chart. */\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n  /** Whether to show the error popup. */\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  /** Specification of the source of the data. */\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n  /** Freeze animations after initial chart render. */\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\n\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n\n  /** Sets the state with a new individual selection and chart type. */\n  function updateDisplay(newSelection: IndiInfo) {\n    if (\n      !selection ||\n      selection.id !== newSelection.id ||\n      selection!.generation !== newSelection.generation\n    ) {\n      setSelection(newSelection);\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  function setErrorMessage(message: string) {\n    setError(message);\n    setState(AppState.ERROR);\n  }\n\n  const uploadedDataSource = new UploadedDataSource();\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\n  const embeddedDataSource = new EmbeddedDataSource();\n\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: newSourceSpec, selection: newSelection};\n    const oldSouce = {\n      spec: sourceSpec,\n      selection: selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          data,\n        );\n    }\n  }\n\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    switch (newSourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (location.pathname !== '/view') {\n        if (state !== AppState.INITIAL) {\n          setState(AppState.INITIAL);\n        }\n        return;\n      }\n\n      const args = getArguments(location);\n\n      if (!args.sourceSpec) {\n        history.replace({pathname: '/'});\n        return;\n      }\n\n      if (\n        state === AppState.INITIAL ||\n        isNewData(args.sourceSpec, args.selection)\n      ) {\n        // Set loading state.\n        setState(AppState.LOADING);\n        // Set state from URL parameters.\n        setSourceSpec(args.sourceSpec);\n        setSelection(args.selection);\n        setStandalone(args.standalone);\n        setChartType(args.chartType);\n        setFreezeAnimation(args.freezeAnimation);\n        setConfig(args.config);\n        try {\n          const data = await loadData(args.sourceSpec, args.selection);\n          // Set state with data.\n          setData(data);\n          setSelection(getSelection(data.chartData, args.selection));\n          setShowSidePanel(args.showSidePanel);\n          setState(AppState.SHOWING_CHART);\n        } catch (error: any) {\n          setErrorMessage(getI18nMessage(error, intl));\n        }\n      } else if (\n        state === AppState.SHOWING_CHART ||\n        state === AppState.LOADING_MORE\n      ) {\n        // Update selection if it has changed in the URL.\n        const newSelection = getSelection(data!.chartData, args.selection);\n        const loadMoreFromWikitree =\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n          (!selection || selection.id !== newSelection.id);\n        setChartType(args.chartType);\n        setState(\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n        );\n        updateDisplay(newSelection);\n        if (loadMoreFromWikitree) {\n          try {\n            const data = await loadWikiTree(args.selection!.id, intl);\n            const newSelection = getSelection(data.chartData, args.selection);\n            setData(data);\n            setSelection(newSelection);\n            setState(AppState.SHOWING_CHART);\n          } catch (error: any) {\n            setState(AppState.SHOWING_CHART);\n            displayErrorPopup(\n              intl.formatMessage(\n                {\n                  id: 'error.failed_wikitree_load_more',\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\n                },\n                {error},\n              ),\n            );\n          }\n        }\n      }\n    })();\n  });\n\n  function updateUrl(args: queryString.ParsedQuery<any>) {\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  function onSelection(selection: IndiInfo) {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  }\n\n  function onPrint() {\n    analyticsEvent('print');\n    printChart();\n  }\n\n  function displayErrorPopup(message: string) {\n    setShowErrorPopup(true);\n    setError(message);\n  }\n\n  async function onDownloadPdf() {\n    analyticsEvent('download_pdf');\n    try {\n      await downloadPdf();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  async function onDownloadPng() {\n    analyticsEvent('download_png');\n    try {\n      await downloadPng();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  function onDownloadSvg() {\n    analyticsEvent('download_svg');\n    downloadSvg();\n  }\n\n  function onDismissErrorPopup() {\n    setShowErrorPopup(false);\n  }\n\n  function renderMainArea() {\n    switch (state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const sidePanelTabs = [\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details gedcom={data!.gedcom} indi={selection!.id} />\n            ),\n          },\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={config}\n                onChange={(config) => {\n                  setConfig(config);\n                  updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={showErrorPopup}\n              message={error}\n              onDismiss={onDismissErrorPopup}\n            />\n            {state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={data!.chartData}\n              selection={selection!}\n              chartType={chartType}\n              onSelection={onSelection}\n              freezeAnimation={freezeAnimation}\n              colors={config.color}\n            />\n            {showSidePanel ? (\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  }\n\n  return (\n    <>\n      <Route\n        render={() => (\n          <TopBar\n            data={data?.chartData}\n            allowAllRelativesChart={\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\n            }\n            showingChart={\n              history.location.pathname === '/view' &&\n              (state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE)\n            }\n            standalone={standalone}\n            eventHandlers={{\n              onSelection,\n              onPrint,\n              onDownloadPdf,\n              onDownloadPng,\n              onDownloadSvg,\n            }}\n            showWikiTreeMenus={sourceSpec?.source === DataSourceEnum.WIKITREE}\n          />\n        )}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={Intro} />\n        <Route exact path=\"/view\" render={renderMainArea} />\n        <Redirect to={'/'} />\n      </Switch>\n    </>\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["util/analytics.ts","chart.tsx","util/media.ts","datasource/data_source.ts","util/error.ts","util/gedcom_util.ts","util/date_util.ts","details.tsx","datasource/load_data.ts","datasource/embedded.ts","topola.jpg","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/wikitree_menu.tsx","menu/top_bar.tsx","app.tsx","util/error_i18n.ts","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","ChartType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","zoomed","size","event","parent","select","node","scale","transform","k","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","image","a","href","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","images","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","DataSourceEnum","ChartComponent","chart","animating","rerenderRequired","zoomBehavior","this","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","args","initialRender","freezeAnimation","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","prevProps","at","className","onClick","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","saveAs","jspdf","default","doc","orientation","unit","format","addImage","save","React","Chart","injectIntl","forwardRef","TopolaError","code","message","Error","pointerToId","pointer","substring","length","idToIndiMap","Map","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","undefined","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","formatDateOrRange","dateOrRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","normalizedTag","replace","joinLines","lines","line","index","properties","getData","subentry","last","eventDetails","gedcomDate","getDate","translateDate","place","filter","note","noteDetails","nameDetails","split","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","dataDetails","DetailsComponent","entriesWithData","dereferenced","dereference","Details","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","handleCors","cachedData","getItem","parse","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","PARENT_READY","postMessage","READY","GEDCOM","onMessage","GedcomLink","pathname","search","queryString","Intro","dateString","values","link","process","slice","Card","Content","as","Header","Grid","Row","Column","logo","alt","centered","MenuType","MenuItem","newProps","menuType","Menu","Item","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","use","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","trim","SearchBarComponent","state","searchResults","searchRef","searchIndex","birthDate","deathDate","death","key","description","getDescriptionLine","results","displaySearchResult","setState","setValue","initialize","buildSearchIndex","initializeSearchIndex","Search","onSearchChange","debounce","_","handleSearch","value","onResultSelect","handleResultSelect","noResultsMessage","placeholder","selectFirstResult","SearchBar","loadFileAsText","file","evt","readAsText","isImageFileName","lower","UploadMenu","files","filesArray","gedcomFile","imageMap","imageFileNames","md5","location","history","content","Icon","htmlFor","accept","multiple","onChange","handleUpload","UrlMenu","dialogOpen","inputRef","current","Modal","onClose","handleClose","Form","onSubmit","handleLoad","Input","fluid","handleUrlChange","Actions","Button","secondary","primary","openDialog","loadFromUrlModal","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","getFamilyId","getSet","wife","converted","Set","convertPerson","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","dataStatus","matchedDate","decade","gedcomIndis","escapedId","level","newSet","WikiTreeLoginState","WikiTreeDataSource","ScreenSize","WikiTreeMenu","firstChild","wikiTreeId","standalone","preventDefault","handleIdChange","wikitreeLogo","handleSelectId","wikiTreeLink","rel","example1","enterId","example2","Ref","innerRef","wikiTreeIdModal","WikiTreeLoginMenuComponent","wikiTreeLoginState","UNKNOWN","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","returnUrl","submit","wikiTreeLoginUsername","LOGGED_IN","NOT_LOGGED_IN","checkWikiTreeLoginState","wikiTreeLogin","display","tooltip","WikiTreeLoginMenu","AppState","TopBar","view","screenSize","showingChart","chartTypeItems","changeView","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","showWikiTreeMenus","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","color","desktopMenus","mobileMenus","ErrorMessage","Message","negative","ErrorPopup","Portal","onDismiss","getArguments","getParam","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","App","INITIAL","showErrorPopup","chartRef","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","error","Loader","active","ERROR","LOADING","otherStateChanges","changes","componentDidUpdate","oldSouce","isNewData","loadData","setError","loadMoreFromWikitree","updateDisplay","exact","path","component","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM"],"mappings":"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","file":"static/js/main.d5fb1703.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as React from 'react';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class ChartComponent extends React.PureComponent<\n  ChartProps & WrappedComponentProps,\n  {}\n> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && this.props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.props.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <Media at=\"large\" className=\"zoom\">\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </button>\n          <button\n            className=\"zoom-out\"\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\n          >\n            −\n          </button>\n        </Media>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\n      'width',\n      String(Number(svg.getAttribute('width')) / scale),\n    );\n    svg.setAttribute(\n      'height',\n      String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await this.drawOnCanvas();\n    const doc = new jspdf({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\nexport const Chart = injectIntl(ChartComponent, {forwardRef: true});\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants. */\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {\n  FormattedMessage,\n  injectIntl,\n  IntlShape,\n  WrappedComponentProps,\n} from 'react-intl';\nimport {GedcomData, pointerToId} from './util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {translateDate} from './util/date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'EVEN', 'CENS', 'DEAT', 'BURI'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  const normalizedTag = tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: IntlShape) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nclass DetailsComponent extends React.Component<\n  Props & WrappedComponentProps,\n  {}\n> {\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.props.intl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\nexport const Details = injectIntl(DetailsComponent);\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  const contents = (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.examples\"\n          defaultMessage={\n            'Here are some examples from the web that you can view:'\n          }\n        />\n      </p>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n      <p>\n        <b>\n          <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n        </b>\n        {': '}\n        <FormattedMessage\n          id=\"intro.privacy_note\"\n          defaultMessage={\n            'When using the \"load from file\" option, this site does not' +\n            ' send your data anywhere and files loaded from disk do not' +\n            ' leave your computer. When using \"load from URL\", data is' +\n            ' passed through the {link} service to deal with an issue with' +\n            ' cross-site file loading in the browser (CORS).'\n          }\n          values={{\n            link: (\n              <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>\n            ),\n          }}\n        />\n      </p>\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} at=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} at=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>{contents}</Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            {contents}\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport class MenuItem extends React.Component<\n  Props & MenuItemProps & DropdownItemProps\n> {\n  render() {\n    const newProps = {...this.props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <Menu.Item {...newProps}>{this.props.children}</Menu.Item>\n        ) : (\n          <Dropdown.Item {...newProps}>{this.props.children}</Dropdown.Item>\n        )}\n      </>\n    );\n  }\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {JsonIndi} from 'topola';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Search, SearchProps, SearchResultProps} from 'semantic-ui-react';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\ninterface State {\n  searchResults: SearchResultProps[];\n}\n\n/** Displays and handles the search box in the top bar. */\nclass SearchBarComponent extends React.Component<\n  RouteComponentProps & WrappedComponentProps & Props,\n  State\n> {\n  state: State = {\n    searchResults: [],\n  };\n\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  private getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, this.props.intl);\n    const deathDate = formatDateOrRange(indi.death, this.props.intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  private displaySearchResult(result: SearchResult) {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: this.getDescriptionLine(result.indi),\n    };\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      this.displaySearchResult(result),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    this.searchIndex = buildSearchIndex(this.props.data);\n  }\n\n  componentDidMount() {\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.data !== this.props.data) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  render() {\n    return (\n      <Search\n        onSearchChange={debounce(\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n            this.handleSearch(data.value),\n          200,\n        )}\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n        results={this.state.searchResults}\n        noResultsMessage={this.props.intl.formatMessage({\n          id: 'menu.search.no_results',\n          defaultMessage: 'No results found',\n        })}\n        placeholder={this.props.intl.formatMessage({\n          id: 'menu.search.placeholder',\n          defaultMessage: 'Search for people',\n        })}\n        selectFirstResult={true}\n        ref={(ref) =>\n          (this.searchRef = (ref as unknown) as {\n            setValue(value: string): void;\n          })\n        }\n        id=\"search\"\n      />\n    );\n  }\n}\nexport const SearchBar = injectIntl(SearchBarComponent);\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport class UploadMenu extends React.Component<RouteComponentProps & Props> {\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  render() {\n    const content = (\n      <>\n        <Icon name=\"folder open\" />\n        <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n      </>\n    );\n    return (\n      <>\n        {this.props.menuType === MenuType.Menu ? (\n          <label htmlFor=\"fileInput\">\n            <Menu.Item as=\"a\">{content}</Menu.Item>\n          </label>\n        ) : (\n          <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n            {content}\n          </Dropdown.Item>\n        )}\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n      </>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  url?: string;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport class UrlMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {dialogOpen: false};\n\n  inputRef: React.RefObject<Input> = React.createRef();\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      this.inputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: value,\n      }),\n    );\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e, data) => this.handleUrlChange(data.value)}\n              ref={this.inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          onClick={() => this.openDialog()}\n          menuType={this.props.menuType}\n        >\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </MenuItem>\n        {this.loadFromUrlModal()}\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\nimport {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {Date, DateOrRange, JsonFam, JsonIndi} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  RealName: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returnes the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n      ],\n    };\n    if (!indi.id.startsWith('~')) {\n      gedcomIndis[indi.id].tree.push({\n        level: 1,\n        pointer: '',\n        tag: 'WWW',\n        data: `https://www.wikitree.com/wiki/${escapedId}`,\n        tree: [],\n      });\n    }\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\nimport {getLoggedInUserName} from '../datasource/wikitree';\nimport {MenuItem, MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {Header, Button, Modal, Input, Form, Ref} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\ninterface State {\n  dialogOpen: boolean;\n  wikiTreeId?: string;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport class WikiTreeMenu extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    dialogOpen: false,\n  };\n\n  inputRef: React.RefObject<HTMLElement> = React.createRef();\n\n  private openDialog() {\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\n      (this.inputRef.current!.firstChild as HTMLInputElement).focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n  }\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  private handleSelectId() {\n    this.setState(\n      Object.assign({}, this.state, {\n        dialogOpen: false,\n      }),\n    );\n    if (this.state.wikiTreeId) {\n      analyticsEvent('wikitree_id_selected');\n      const search = queryString.parse(this.props.location.search);\n      const standalone =\n        search.standalone !== undefined ? search.standalone : true;\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({\n          indi: this.state.wikiTreeId,\n          source: 'wikitree',\n          standalone,\n        }),\n      });\n    }\n  }\n\n  /** Called when the WikiTree ID input is typed into. */\n  private handleIdChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        wikiTreeId: value,\n      }),\n    );\n  }\n\n  private enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    (this.inputRef.current!.firstChild as HTMLInputElement).value = id;\n    this.handleIdChange(id);\n    (this.inputRef.current!.firstChild as HTMLInputElement).focus();\n  }\n\n  private wikiTreeIdModal() {\n    return (\n      <Modal\n        open={this.state.dialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleSelectId()}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => this.enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Ref innerRef={this.inputRef}>\n              <Input\n                fluid\n                onChange={(e, data) => this.handleIdChange(data.value)}\n              />\n            </Ref>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleSelectId()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MenuItem\n          menuType={this.props.menuType}\n          onClick={() => this.openDialog()}\n        >\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.select_wikitree_id\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </MenuItem>\n        {this.wikiTreeIdModal()}\n      </>\n    );\n  }\n}\n\ninterface LoginState {\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nclass WikiTreeLoginMenuComponent extends React.Component<\n  RouteComponentProps & WrappedComponentProps & Props,\n  LoginState\n> {\n  state: LoginState = {\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginUsername = getLoggedInUserName();\n    const wikiTreeLoginState = wikiTreeLoginUsername\n      ? WikiTreeLoginState.LOGGED_IN\n      : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.checkWikiTreeLoginState();\n  }\n\n  componentDidUpdate() {\n    this.checkWikiTreeLoginState();\n  }\n\n  render() {\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        return (\n          <>\n            <MenuItem\n              menuType={this.props.menuType}\n              onClick={() => this.wikiTreeLogin()}\n            >\n              <img\n                src={wikitreeLogo}\n                alt=\"WikiTree logo\"\n                className=\"menu-icon\"\n              />\n              <FormattedMessage\n                id=\"menu.wikitree_login\"\n                defaultMessage=\"Log in to WikiTree\"\n              />\n            </MenuItem>\n            <form\n              action=\"https://api.wikitree.com/api.php\"\n              method=\"POST\"\n              style={{display: 'hidden'}}\n              ref={this.wikiTreeLoginFormRef}\n            >\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n              <input\n                type=\"hidden\"\n                name=\"returnURL\"\n                ref={this.wikiTreeReturnUrlRef}\n              />\n            </form>\n          </>\n        );\n\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.props.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.props.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        return (\n          <MenuItem menuType={this.props.menuType} title={tooltip}>\n            <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n            <FormattedMessage\n              id=\"menu.wikitree_logged_in\"\n              defaultMessage=\"Logged in\"\n            />\n          </MenuItem>\n        );\n    }\n    return null;\n  }\n}\nexport const WikiTreeLoginMenu = injectIntl(WikiTreeLoginMenuComponent);\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport class TopBar extends React.Component<RouteComponentProps & Props> {\n  private changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  private chartMenus(screenSize: ScreenSize) {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {this.props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\n                >\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\n                >\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\n                >\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={this.props.data!}\n              onSelection={this.props.eventHandlers.onSelection}\n              {...this.props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  private fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!this.props.standalone && this.props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!this.props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = this.props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...this.props} />\n            <UrlMenu menuType={MenuType.Menu} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!this.props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...this.props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  private mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {this.fileMenus(ScreenSize.SMALL)}\n            {this.chartMenus(ScreenSize.SMALL)}\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {this.props.standalone ? (\n          <Link to=\"/\">{this.title()}</Link>\n        ) : (\n          this.title()\n        )}\n      </>\n    );\n  }\n\n  private desktopMenus() {\n    return (\n      <>\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\n        {this.fileMenus(ScreenSize.LARGE)}\n        {this.chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Menu\n          as={Media}\n          at=\"large\"\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n        >\n          {this.desktopMenus()}\n        </Menu>\n        <Menu\n          as={Media}\n          at=\"small\"\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n        >\n          {this.mobileMenus()}\n        </Menu>\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './util/analytics';\nimport {Chart, ChartComponent, ChartType} from './chart';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, WrappedComponentProps} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/** Arguments passed to the application, primarily through URL parameters. */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation?: boolean;\n  showSidePanel: boolean;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('?authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n  };\n}\n\n/**\n * Returs true if the changes object has values that are different than those\n * in state.\n */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** State of the application. */\n  state: AppState;\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Error to display. */\n  error?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Specification of the source of the data. */\n  sourceSpec?: DataSourceSpec;\n  /** Freeze animations after initial chart render. */\n  freezeAnimation?: boolean;\n}\n\nexport class App extends React.Component<\n  RouteComponentProps & WrappedComponentProps,\n  {}\n> {\n  state: State = {\n    state: AppState.INITIAL,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n  };\n  chartRef: ChartComponent | null = null;\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        state: AppState.ERROR,\n        error,\n      }),\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  private readonly uploadedDataSource = new UploadedDataSource();\n  private readonly gedcomUrlDataSource = new GedcomUrlDataSource();\n  private readonly wikiTreeDataSource = new WikiTreeDataSource(this.props.intl);\n  private readonly embeddedDataSource = new EmbeddedDataSource();\n\n  private isNewData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    if (\n      !this.state.sourceSpec ||\n      this.state.sourceSpec.source !== sourceSpec.source\n    ) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: sourceSpec, selection};\n    const oldSouce = {\n      spec: this.state.sourceSpec,\n      selection: this.state.selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          this.state.data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          this.state.data,\n        );\n    }\n  }\n\n  private loadData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\n    switch (sourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return this.uploadedDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.GEDCOM_URL:\n        return this.gedcomUrlDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.WIKITREE:\n        return this.wikiTreeDataSource.loadData({spec: sourceSpec, selection});\n      case DataSourceEnum.EMBEDDED:\n        return this.embeddedDataSource.loadData({spec: sourceSpec, selection});\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      if (this.state.state !== AppState.INITIAL) {\n        this.setState(Object.assign({}, this.state, {state: AppState.INITIAL}));\n      }\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (!args.sourceSpec) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      this.state.state === AppState.INITIAL ||\n      this.isNewData(args.sourceSpec, args.selection)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          state: AppState.LOADING,\n          sourceSpec: args.sourceSpec,\n          selection: args.selection,\n          standalone: args.standalone,\n          chartType: args.chartType,\n        }),\n      );\n      try {\n        const data = await this.loadData(args.sourceSpec, args.selection);\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            state: AppState.SHOWING_CHART,\n            data,\n            selection: getSelection(data.chartData, args.selection),\n            showSidePanel: args.showSidePanel,\n          }),\n        );\n      } catch (error) {\n        this.setError(getI18nMessage(error, this.props.intl));\n      }\n    } else if (\n      this.state.state === AppState.SHOWING_CHART ||\n      this.state.state === AppState.LOADING_MORE\n    ) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data!.chartData,\n        args.selection,\n      );\n      const loadMoreFromWikitree =\n        args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        state: loadMoreFromWikitree\n          ? AppState.LOADING_MORE\n          : AppState.SHOWING_CHART,\n      });\n      if (loadMoreFromWikitree) {\n        try {\n          const data = await loadWikiTree(args.selection!.id, this.props.intl);\n          const selection = getSelection(data.chartData, args.selection);\n          this.setState(\n            Object.assign({}, this.state, {\n              state: AppState.SHOWING_CHART,\n              data,\n              selection,\n            }),\n          );\n        } catch (error) {\n          this.showErrorPopup(\n            this.props.intl.formatMessage(\n              {\n                id: 'error.failed_wikitree_load_more',\n                defaultMessage: 'Failed to load data from WikiTree. {error}',\n              },\n              {error},\n            ),\n            {state: AppState.SHOWING_CHART},\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string, otherStateChanges?: Partial<State>) {\n    this.setState(\n      Object.assign(\n        {},\n        this.state,\n        {\n          showErrorPopup: true,\n          error: message,\n        },\n        otherStateChanges,\n      ),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.props.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.props.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  private onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    switch (this.state.state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={this.state.showErrorPopup}\n              message={this.state.error}\n              onDismiss={this.onDismissErrorPopup}\n            />\n            {this.state.state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={this.state.data!.chartData}\n              selection={this.state.selection!}\n              chartType={this.state.chartType}\n              onSelection={this.onSelection}\n              freezeAnimation={this.state.freezeAnimation}\n              ref={(ref) => (this.chartRef = ref)}\n            />\n            {this.state.showSidePanel ? (\n              <Media at=\"large\" className=\"sidePanel\">\n                <Details\n                  gedcom={this.state.data!.gedcom}\n                  indi={this.state.selection!.id}\n                />\n              </Media>\n            ) : null}\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={this.state.error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              data={this.state.data && this.state.data.chartData}\n              allowAllRelativesChart={\n                this.state.sourceSpec?.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                this.props.history.location.pathname === '/view' &&\n                (this.state.state === AppState.SHOWING_CHART ||\n                  this.state.state === AppState.LOADING_MORE)\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeMenus={\n                this.state.sourceSpec?.source === DataSourceEnum.WIKITREE\n              }\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["util/analytics.ts","datasource/data_source.ts","changelog.tsx","util/error.ts","util/date_util.ts","util/gedcom_util.ts","util/age_util.ts","details/multiline-text.tsx","details/translated-tag.tsx","details/events.tsx","details/wrapped-image.tsx","details/details.tsx","datasource/load_data.ts","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","a","seenVersionDate","Date","parse","slice","changes","process","split","map","notes","date","trim","filter","release","join","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","id","defaultMessage","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","TopolaError","code","message","args","Error","DATE_QUALIFIERS","Map","formatDate","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","lowerCaseQualifier","toLowerCase","formatMessage","get","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","compareDates","firstDateOrRange","secondDateOrRange","isValidDateOrRange","isDateRangeClosed","range","pointerToId","pointer","substring","length","idToIndiMap","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","some","ext","endsWith","filterImages","images","newImages","image","url","match","has","title","startsWith","filterImage","getSoftware","sour","name","getFileName","fileEntry","fileTitle","fileExtension","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","canCalculateAge","range1","range2","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","MultilineText","props","lines","line","index","properties","target","TAG_DESCRIPTIONS","TranslatedTag","normalizedTag","replace","PersonLink","location","useLocation","person","names","subEntry","nameEntry","getName","search","queryString","Item","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","useIntl","as","size","event","type","textAlign","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventNotes","note","toEvent","family","flatMap","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Description","Events","events","event1","event2","WrappedImage","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","onLoad","onError","e","currentTarget","alt","src","filename","Placeholder","Image","square","Container","fluid","Message","negative","compact","basic","closeIcon","Icon","color","onClose","onOpen","label","Label","attached","content","wrapped","EXCLUDED_TAGS","fileDetails","objectEntry","imageFileEntry","noteDetails","nameDetails","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","getSelection","selection","i","generation","prepareData","cacheId","parseGedcom","json","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","console","warn","loadFromUrl","handleCors","cachedData","driveUrlMatch1","driveUrlMatch2","urlToFetch","fetch","response","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","Promise","addEventListener","onMessage","getI18nMessage","error","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","GedcomLink","Contents","dateString","values","link","Intro","Card","greaterThanOrEqual","Grid","Row","Column","width","logo","at","MenuType","MenuItem","newProps","menuType","Menu","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","loadFileAsText","file","reader","FileReader","onload","evt","readAsText","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","gedcomFile","URL","createObjectURL","imageMap","imageFileNames","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","secondary","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","body","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","x","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","all","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","fullSizePhotoUrls","getFamilyId","getSet","wife","converted","Set","convertPerson","PhotoData","path","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","Photo","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","eventToGedcom","level","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","ScreenSize","WikiTreeDataSource","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","style","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","formRef","returnUrlRef","returnUrl","submit","display","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","inverted","position","icon","ChartColors","DEFALUT_CONFIG","COLOR_BY_GENERATION","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","v","k","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","dataUrl","inlineImages","svg","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","AppState","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","render","startIndi","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","ErrorMessage","ErrorPopup","Portal","onDismiss","getArguments","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","loadData","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","LOADING","SHOWING_CHART","ERROR","LOADING_MORE","loadMoreFromWikitree","exact","sidePanelTabs","menuItem","configToArgs","Loader","active","Tab","panes"],"mappings":"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","file":"static/js/main.f845c794.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes =\n    process.env.REACT_APP_CHANGELOG?.split('##')\n      .slice(1, maxVersions + 1)\n      .map((notes) => {\n        const date = Date.parse(notes.split('\\n')[0].trim());\n        return {date, notes: '####' + notes};\n      })\n      .filter((release) => release.date > seenVersionDate)\n      .map((release) => release.notes)\n      .join('\\n') || '';\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = toDateObject(date);\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\nexport function formatDateQualifier(\n  qualifier: string | undefined,\n  intl: IntlShape,\n): string {\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n  return (\n    (lowerCaseQualifier &&\n      intl.formatMessage({\n        id: `date.${lowerCaseQualifier}`,\n        defaultMessage:\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n      })) ||\n    ''\n  );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n  date1: TopolaDate | undefined,\n  date2: TopolaDate | undefined,\n): number {\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange &&\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange &&\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n  return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n  range1: DateRange,\n  range2: DateRange,\n): boolean {\n  return (\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\n    compareTopolaDates(range1.to, range2.from) >= 0\n  );\n}\n\nexport function isValidDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n): boolean {\n  // invalid when range is closed and start is before end\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\n    return (\n      compareTopolaDates(\n        dateOrRange?.dateRange?.from,\n        dateOrRange?.dateRange?.to,\n      ) <= 0\n    );\n  }\n  //valid when there is exact date or date range has start or end defined\n  return !!(\n    dateOrRange?.date ||\n    dateOrRange?.dateRange?.from ||\n    dateOrRange?.dateRange?.to\n  );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n  return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n  return new Date(\n    date.year !== undefined ? date.year! : 0,\n    date.month !== undefined ? date.month! - 1 : 0,\n    date.day !== undefined ? date.day! : 1,\n  );\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n  const notMarriedName = names.find(\n    (subEntry) =>\n      subEntry.tree.filter(\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n      ).length === 0,\n  );\n  const name = notMarriedName || names[0];\n  return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n    ?.data;\n\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  areDateRangesOverlapped,\n  compareDates,\n  formatDateQualifier,\n  isDateRangeClosed,\n  isValidDateOrRange,\n  toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\n  const translatedQualifier =\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n  return intl.formatMessage(\n    {\n      id: 'age.exact',\n      defaultMessage:\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears, qualifier: translatedQualifier},\n  );\n}\n\nfunction formatAgeMoreThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.more',\n      defaultMessage:\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeLessThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.less',\n      defaultMessage:\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeBetween(\n  birthDateFrom: TopolaDate,\n  birthDateTo: TopolaDate,\n  deathDateFrom: TopolaDate,\n  deathDateTo: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n  return intl.formatMessage(\n    {\n      id: 'age.between',\n      defaultMessage:\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n  );\n}\n\nfunction canCalculateAge(\n  birthDate: DateOrRange | undefined,\n  deathDate: DateOrRange | undefined,\n): boolean {\n  if (birthDate && deathDate) {\n    // cannot calculate if there is no valid birth or death date\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n      return false;\n    }\n    //cannot calculate if death date is before birth date\n    if (compareDates(birthDate, deathDate) > 0) {\n      return false;\n    }\n    // cannot calculate if closed date range for birth or death are overlapping\n    if (\n      birthDate.dateRange &&\n      deathDate.dateRange &&\n      isDateRangeClosed(birthDate?.dateRange) &&\n      isDateRangeClosed(deathDate?.dateRange)\n    ) {\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction calcDateDifferenceInYears(\n  firstDate: TopolaDate,\n  secondDate: TopolaDate,\n): number {\n  const firstDateObject = toDateObject(firstDate);\n  const secondDateObject = toDateObject(secondDate);\n\n  const startYear = firstDateObject.getUTCFullYear();\n\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n  let monthDiff =\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n  if (monthDiff < 0) {\n    yearDiff--;\n    monthDiff += 12;\n  }\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n  if (dayDiff < 0) {\n    if (monthDiff <= 0) {\n      yearDiff--;\n    }\n  }\n  return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n  birthGedcomDate: string | undefined,\n  deathGedcomDate: string | undefined,\n  intl: IntlShape,\n): string | undefined {\n  if (birthGedcomDate && deathGedcomDate) {\n    const birthDateOrRange = getDate(birthGedcomDate);\n    const deathDateOrRange = getDate(deathGedcomDate);\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n      if (birthDateOrRange?.date) {\n        if (deathDateOrRange?.date) {\n          return formatExactAge(\n            birthDateOrRange.date,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange.date,\n            birthDateOrRange.date,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (\n        birthDateOrRange?.dateRange?.from &&\n        birthDateOrRange?.dateRange?.to\n      ) {\n        if (deathDateOrRange?.date) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.date,\n            deathDateOrRange?.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.from) {\n        if (deathDateOrRange?.date) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.to) {\n        if (deathDateOrRange?.date) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n      }\n    }\n  }\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {dereference, GedcomData, getData, getName} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {MultilineText} from './multiline-text';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\n\nfunction PersonLink(props: {person: GedcomEntry}) {\n  const location = useLocation();\n\n  const name = getName(props.person);\n  if (!name) {\n    return <></>;\n  }\n\n  const search = queryString.parse(location.search);\n  search['indi'] = pointerToId(props.person.pointer);\n\n  return (\n    <Item.Meta>\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n        {name}\n      </Link>\n    </Item.Meta>\n  );\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface EventData {\n  type: string;\n  date?: DateOrRange;\n  age?: string;\n  personLink?: GedcomEntry;\n  place?: string[];\n  notes: string[][];\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction EventHeader(props: {event: EventData}) {\n  const intl = useIntl();\n  return (\n    <div className=\"event-header\">\n      <Header as=\"span\" size=\"small\">\n        <TranslatedTag tag={props.event.type} />\n      </Header>\n      {props.event.date ? (\n        <Header as=\"span\" textAlign=\"right\" sub>\n          {formatDateOrRange(props.event.date, intl)}\n        </Header>\n      ) : null}\n    </div>\n  );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (!spouseReference) {\n    return undefined;\n  }\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n  eventEntry: GedcomEntry,\n  indi: string,\n  gedcom: GedcomData,\n  intl: IntlShape,\n): string | undefined {\n  if (eventEntry.tag !== 'DEAT') {\n    return undefined;\n  }\n  const deathDate = resolveDate(eventEntry);\n\n  const birthDate = gedcom.indis[indi].tree\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n    .map((birthEvent) => resolveDate(birthEvent))\n    .find((topolaDate) => topolaDate);\n\n  if (!birthDate || !deathDate) {\n    return undefined;\n  }\n  return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  return place?.data ? getData(place) : undefined;\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n  return entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => getData(note));\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      age: getAge(entry, indi, gedcom, intl),\n      place: eventPlace(entry),\n      notes: eventNotes(entry, gedcom),\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n): EventData[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      personLink: getSpouse(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n    };\n  });\n}\n\nfunction Event(props: {event: EventData}) {\n  return (\n    <Item>\n      <Item.Content>\n        <EventHeader event={props.event} />\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n        {!!props.event.personLink && (\n          <PersonLink person={props.event.personLink} />\n        )}\n        {!!props.event.place && (\n          <Item.Description>{props.event.place}</Item.Description>\n        )}\n        {!!props.event.notes.length && (\n          <Item.Description>\n            {props.event.notes.map((note, index) => (\n              <div key={index}>\n                <MultilineText\n                  lines={note.map((line, index) => (\n                    <i key={index}>{line}</i>\n                  ))}\n                />\n              </div>\n            ))}\n          </Item.Description>\n        )}\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\n  );\n  if (events.length) {\n    return (\n      <>\n        {events.map((event, index) => (\n          <Event event={event} key={index} />\n        ))}\n      </>\n    );\n  }\n  return null;\n}\n","import {\n  Container,\n  Icon,\n  Image,\n  Label,\n  Message,\n  Modal,\n  Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  if (imageLoaded && imageSrc !== props.url) {\n    setImageLoaded(false);\n  }\n  return (\n    <>\n      <Image\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n        onClick={() => setImageOpen(true)}\n        onLoad={() => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(false);\n        }}\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(true);\n          e.currentTarget.alt = '';\n        }}\n        src={props.url}\n        alt={props.title || props.filename}\n        centered={true}\n      />\n      <Placeholder\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n      >\n        <Placeholder.Image square />\n      </Placeholder>\n      {imageFailed && (\n        <Container fluid textAlign=\"center\">\n          <Message negative compact>\n            <Message.Header>\n              <FormattedMessage\n                id=\"error.failed_to_load_image\"\n                defaultMessage={'Failed to load image file'}\n              />\n            </Message.Header>\n          </Message>\n        </Container>\n      )}\n      <Modal\n        basic\n        size=\"large\"\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\n        open={imageOpen}\n        onClose={() => setImageOpen(false)}\n        onOpen={() => setImageOpen(true)}\n        centered={false}\n      >\n        <Modal.Header>{props.title}</Modal.Header>\n        <Modal.Content image>\n          <Image\n            className=\"modal-image\"\n            src={props.url}\n            alt={props.title || props.filename}\n            label={<Label attached=\"bottom\" content={props.filename} />}\n            wrapped\n          />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getFileName,\n  isImageFile,\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <Header sub>\n        <TranslatedTag tag={entry.tag} />\n      </Header>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n  const imageFileEntry = objectEntry.tree.find(\n    (entry) =>\n      entry.tag === 'FILE' &&\n      entry.data.startsWith('http') &&\n      isImageFile(entry.data),\n  );\n\n  return imageFileEntry ? (\n    <div className=\"person-image\">\n      <WrappedImage\n        url={imageFileEntry.data}\n        filename={getFileName(imageFileEntry) || ''}\n      />\n    </div>\n  ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <Header size=\"large\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </Header>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"details\">\n      <Item.Group divided>\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </Item.Group>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString?.slice(0, 16) || '';\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} greaterThanOrEqual=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} greaterThanOrEqual=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `${s} ${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\nimport {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\nimport {isValidDateOrRange} from '../util/date_util';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  RealName: string;\n  Spouses?: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  Photo: string;\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returns the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\n    (s) => s.Name,\n  );\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n  // Map from human-readable person id to fullSizeUrl of person photo.\n  const fullSizePhotoUrls: Map<string, string> = new Map();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.PhotoData?.path) {\n      fullSizePhotoUrls.set(\n        person.Name,\n        `https://www.wikitree.com${person.PhotoData.path}`,\n      );\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [\n      {\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\n        title: person.Photo,\n      },\n    ];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (isValidDateOrRange(event)) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction imageToGedcom(\n  image: JsonImage,\n  fullSizePhotoUrl: string | undefined,\n): GedcomEntry[] {\n  return [\n    {\n      level: 2,\n      pointer: '',\n      tag: 'FILE',\n      data: fullSizePhotoUrl || image.url,\n      tree: [\n        {\n          level: 3,\n          pointer: '',\n          tag: 'FORM',\n          data: image.title?.split('.').pop() || '',\n          tree: [],\n        },\n        {\n          level: 3,\n          pointer: '',\n          tag: 'TITL',\n          data: image.title?.split('.')[0] || '',\n          tree: [],\n        },\n      ],\n    },\n  ];\n}\n\nfunction indiToGedcom(\n  indi: JsonIndi,\n  fullSizePhotoUrl: Map<string, string>,\n): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [\n      {\n        level: 1,\n        pointer: '',\n        tag: 'NAME',\n        data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n        tree: [],\n      },\n    ],\n  };\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  (indi.images || []).forEach((image) => {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'OBJE',\n      data: '',\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\n    });\n  });\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(\n  data: JsonGedcomData,\n  fullSizePhotoUrls: Map<string, string>,\n): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(indi, fullSizePhotoUrls);\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  function changeView(view: string) {\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      history.push(location);\n    }\n  }\n\n  function chartMenus(screenSize: ScreenSize) {\n    if (!props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={props.data!}\n              onSelection={props.eventHandlers.onSelection}\n              {...props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  function fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!props.standalone && props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...props} />\n            <UrlMenu menuType={MenuType.Menu} {...props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  function mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {fileMenus(ScreenSize.SMALL)}\n            {chartMenus(ScreenSize.SMALL)}\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\n      </>\n    );\n  }\n\n  function desktopMenus() {\n    return (\n      <>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\n        {fileMenus(ScreenSize.LARGE)}\n        {chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Menu\n        as={Media}\n        greaterThanOrEqual=\"large\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {desktopMenus()}\n      </Menu>\n      <Menu\n        as={Media}\n        at=\"small\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {mobileMenus()}\n      </Menu>\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getLoggedInUserName} from '../datasource/wikitree';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport function WikiTreeMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [wikiTreeId, setWikiTreeId] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setWikiTreeId('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  function handleSelectId() {\n    setDialogOpen(false);\n    if (!wikiTreeId) {\n      return;\n    }\n    analyticsEvent('wikitree_id_selected');\n    const search = queryString.parse(location.search);\n    const standalone =\n      search.standalone !== undefined ? search.standalone : true;\n    history.push({\n      pathname: '/view',\n      search: queryString.stringify({\n        indi: wikiTreeId,\n        source: 'wikitree',\n        standalone,\n      }),\n    });\n  }\n\n  function enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    setWikiTreeId(id);\n    inputRef.current!.focus();\n  }\n\n  function wikiTreeIdModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleSelectId}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              value={wikiTreeId}\n              onChange={(_, data) => setWikiTreeId(data.value)}\n              ref={inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleSelectId}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </MenuItem>\n      {wikiTreeIdModal()}\n    </>\n  );\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport function WikiTreeLoginMenu(props: Props) {\n  const formRef = useRef<HTMLFormElement>(null);\n  const returnUrlRef = useRef<HTMLInputElement>(null);\n  const intl = useIntl();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  function login() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // TODO: remove authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}`;\n    returnUrlRef.current!.value = returnUrl;\n    formRef.current!.submit();\n  }\n\n  const username = getLoggedInUserName();\n  if (!username) {\n    return (\n      <>\n        <MenuItem menuType={props.menuType} onClick={login}>\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.wikitree_login\"\n            defaultMessage=\"Log in to WikiTree\"\n          />\n        </MenuItem>\n        <form\n          action=\"https://api.wikitree.com/api.php\"\n          method=\"POST\"\n          style={{display: 'hidden'}}\n          ref={formRef}\n        >\n          <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n          <input type=\"hidden\" name=\"returnURL\" ref={returnUrlRef} />\n        </form>\n      </>\n    );\n  }\n  const tooltip = intl.formatMessage(\n    {\n      id: 'menu.wikitree_popup_username',\n      defaultMessage: 'Logged in to WikiTree as {username}',\n    },\n    {username},\n  );\n  return (\n    <MenuItem menuType={props.menuType} title={tooltip}>\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n      <FormattedMessage\n        id=\"menu.wikitree_logged_in\"\n        defaultMessage=\"Logged in\"\n      />\n    </MenuItem>\n  );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport interface Config {\n  color: ChartColors;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {c: COLOR_ARG_INVERSE.get(config.color)};\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <Form className=\"details\">\n      <Item.Group>\n        <Item>\n          <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.NO_COLOR\"\n                    defaultMessage=\"none\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"none\"\n                checked={props.config.color === ChartColors.NO_COLOR}\n                onClick={() => props.onChange({color: ChartColors.NO_COLOR})}\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_GENERATION\"\n                    defaultMessage=\"by generation\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"generation\"\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_GENERATION})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_SEX\"\n                    defaultMessage=\"by sex\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"gender\"\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_SEX})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    </Form>\n  );\n}\n","import {ChartColors} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n  private rerenderResetPosition?: boolean;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      this.rerenderResetPosition = args.resetPosition;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: !!this.rerenderResetPosition,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors;\n      const resetPosition =\n        props.chartType !== prevProps?.chartType ||\n        props.data !== prevProps.data ||\n        props.selection !== prevProps.selection;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n  Chart,\n  ChartType,\n  downloadPdf,\n  downloadPng,\n  downloadSvg,\n  printChart,\n} from './chart';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\nexport function App() {\n  /** State of the application. */\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\n  /** Loaded data. */\n  const [data, setData] = useState<TopolaData>();\n  /** Selected individual. */\n  const [selection, setSelection] = useState<IndiInfo>();\n  /** Error to display. */\n  const [error, setError] = useState<string>();\n  /** Whether the side panel is shown. */\n  const [showSidePanel, setShowSidePanel] = useState(false);\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  const [standalone, setStandalone] = useState(true);\n  /** Type of displayed chart. */\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n  /** Whether to show the error popup. */\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  /** Specification of the source of the data. */\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n  /** Freeze animations after initial chart render. */\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\n\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n\n  /** Sets the state with a new individual selection and chart type. */\n  function updateDisplay(newSelection: IndiInfo) {\n    if (\n      !selection ||\n      selection.id !== newSelection.id ||\n      selection!.generation !== newSelection.generation\n    ) {\n      setSelection(newSelection);\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  function setErrorMessage(message: string) {\n    setError(message);\n    setState(AppState.ERROR);\n  }\n\n  const uploadedDataSource = new UploadedDataSource();\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\n  const embeddedDataSource = new EmbeddedDataSource();\n\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: newSourceSpec, selection: newSelection};\n    const oldSouce = {\n      spec: sourceSpec,\n      selection: selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          data,\n        );\n    }\n  }\n\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    switch (newSourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (location.pathname !== '/view') {\n        if (state !== AppState.INITIAL) {\n          setState(AppState.INITIAL);\n        }\n        return;\n      }\n\n      const args = getArguments(location);\n\n      if (!args.sourceSpec) {\n        history.replace({pathname: '/'});\n        return;\n      }\n\n      if (\n        state === AppState.INITIAL ||\n        isNewData(args.sourceSpec, args.selection)\n      ) {\n        // Set loading state.\n        setState(AppState.LOADING);\n        // Set state from URL parameters.\n        setSourceSpec(args.sourceSpec);\n        setSelection(args.selection);\n        setStandalone(args.standalone);\n        setChartType(args.chartType);\n        setFreezeAnimation(args.freezeAnimation);\n        setConfig(args.config);\n        try {\n          const data = await loadData(args.sourceSpec, args.selection);\n          // Set state with data.\n          setData(data);\n          setSelection(getSelection(data.chartData, args.selection));\n          setShowSidePanel(args.showSidePanel);\n          setState(AppState.SHOWING_CHART);\n        } catch (error: any) {\n          setErrorMessage(getI18nMessage(error, intl));\n        }\n      } else if (\n        state === AppState.SHOWING_CHART ||\n        state === AppState.LOADING_MORE\n      ) {\n        // Update selection if it has changed in the URL.\n        const newSelection = getSelection(data!.chartData, args.selection);\n        const loadMoreFromWikitree =\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n          (!selection || selection.id !== newSelection.id);\n        setChartType(args.chartType);\n        setState(\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n        );\n        updateDisplay(newSelection);\n        if (loadMoreFromWikitree) {\n          try {\n            const data = await loadWikiTree(args.selection!.id, intl);\n            const newSelection = getSelection(data.chartData, args.selection);\n            setData(data);\n            setSelection(newSelection);\n            setState(AppState.SHOWING_CHART);\n          } catch (error: any) {\n            setState(AppState.SHOWING_CHART);\n            displayErrorPopup(\n              intl.formatMessage(\n                {\n                  id: 'error.failed_wikitree_load_more',\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\n                },\n                {error},\n              ),\n            );\n          }\n        }\n      }\n    })();\n  });\n\n  function updateUrl(args: queryString.ParsedQuery<any>) {\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  function onSelection(selection: IndiInfo) {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  }\n\n  function onPrint() {\n    analyticsEvent('print');\n    printChart();\n  }\n\n  function displayErrorPopup(message: string) {\n    setShowErrorPopup(true);\n    setError(message);\n  }\n\n  async function onDownloadPdf() {\n    analyticsEvent('download_pdf');\n    try {\n      await downloadPdf();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  async function onDownloadPng() {\n    analyticsEvent('download_png');\n    try {\n      await downloadPng();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  function onDownloadSvg() {\n    analyticsEvent('download_svg');\n    downloadSvg();\n  }\n\n  function onDismissErrorPopup() {\n    setShowErrorPopup(false);\n  }\n\n  function renderMainArea() {\n    switch (state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const sidePanelTabs = [\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details gedcom={data!.gedcom} indi={selection!.id} />\n            ),\n          },\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={config}\n                onChange={(config) => {\n                  setConfig(config);\n                  updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={showErrorPopup}\n              message={error}\n              onDismiss={onDismissErrorPopup}\n            />\n            {state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={data!.chartData}\n              selection={selection!}\n              chartType={chartType}\n              onSelection={onSelection}\n              freezeAnimation={freezeAnimation}\n              colors={config.color}\n            />\n            {showSidePanel ? (\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  }\n\n  return (\n    <>\n      <Route\n        render={() => (\n          <TopBar\n            data={data?.chartData}\n            allowAllRelativesChart={\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\n            }\n            showingChart={\n              history.location.pathname === '/view' &&\n              (state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE)\n            }\n            standalone={standalone}\n            eventHandlers={{\n              onSelection,\n              onPrint,\n              onDownloadPdf,\n              onDownloadPng,\n              onDownloadSvg,\n            }}\n            showWikiTreeMenus={sourceSpec?.source === DataSourceEnum.WIKITREE}\n          />\n        )}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={Intro} />\n        <Route exact path=\"/view\" render={renderMainArea} />\n        <Redirect to={'/'} />\n      </Switch>\n    </>\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}